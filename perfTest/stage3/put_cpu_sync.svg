<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1061"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1061"> </text>
<g id="frames">
<g>
<title>all (423 samples, 100.00%)</title><rect x="10.0" y="1027.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1038.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=2812] (5 samples, 1.18%)</title><rect x="10.0" y="1011.0" width="13.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (5 samples, 1.18%)</title><rect x="10.0" y="995.0" width="13.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (2 samples, 0.47%)</title><rect x="12.8" y="979.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.8" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.accept0 (2 samples, 0.47%)</title><rect x="12.8" y="963.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.47%)</title><rect x="12.8" y="947.0" width="5.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="15.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.47%)</title><rect x="12.8" y="931.0" width="5.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="15.8" y="942.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_accept0 (1 samples, 0.24%)</title><rect x="12.8" y="915.0" width="2.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="15.8" y="926.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.24%)</title><rect x="15.6" y="915.0" width="2.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="18.6" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="15.6" y="899.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="18.6" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="15.6" y="883.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="18.6" y="894.0"></text>
</g>
<g>
<title>ep_ptable_queue_proc (1 samples, 0.24%)</title><rect x="15.6" y="867.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="18.6" y="878.0"></text>
</g>
<g>
<title>SYSC_accept4 (1 samples, 0.24%)</title><rect x="15.6" y="851.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="18.6" y="862.0"></text>
</g>
<g>
<title>inet_accept (1 samples, 0.24%)</title><rect x="15.6" y="835.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="18.6" y="846.0"></text>
</g>
<g>
<title>autoremove_wake_function (1 samples, 0.24%)</title><rect x="15.6" y="819.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="18.6" y="830.0"></text>
</g>
<g>
<title>inet_csk_accept (1 samples, 0.24%)</title><rect x="15.6" y="803.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="18.6" y="814.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.24%)</title><rect x="15.6" y="787.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="18.6" y="798.0"></text>
</g>
<g>
<title>one/nio/server/Server.register (2 samples, 0.47%)</title><rect x="18.4" y="979.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="21.4" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.register (2 samples, 0.47%)</title><rect x="18.4" y="963.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.4" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.add (1 samples, 0.24%)</title><rect x="18.4" y="947.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="21.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.enable (1 samples, 0.24%)</title><rect x="21.2" y="947.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.2" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollCtl (1 samples, 0.24%)</title><rect x="21.2" y="931.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="24.2" y="942.0"></text>
</g>
<g>
<title>__GI_epoll_ctl (1 samples, 0.24%)</title><rect x="21.2" y="915.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="24.2" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="21.2" y="899.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="24.2" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="21.2" y="883.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="24.2" y="894.0"></text>
</g>
<g>
<title>ep_ptable_queue_proc (1 samples, 0.24%)</title><rect x="21.2" y="867.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="24.2" y="878.0"></text>
</g>
<g>
<title>sys_epoll_ctl (1 samples, 0.24%)</title><rect x="21.2" y="851.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="24.2" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=2808] (80 samples, 18.91%)</title><rect x="23.9" y="1011.0" width="223.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="26.9" y="1022.0">[NIO Selector #0 tid=2808]</text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.71%)</title><rect x="23.9" y="995.0" width="8.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="26.9" y="1006.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (3 samples, 0.71%)</title><rect x="23.9" y="979.0" width="8.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="26.9" y="990.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (3 samples, 0.71%)</title><rect x="23.9" y="963.0" width="8.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="26.9" y="974.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.71%)</title><rect x="23.9" y="947.0" width="8.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="26.9" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.71%)</title><rect x="23.9" y="931.0" width="8.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="26.9" y="942.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.71%)</title><rect x="23.9" y="915.0" width="8.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="26.9" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (3 samples, 0.71%)</title><rect x="23.9" y="899.0" width="8.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="26.9" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (3 samples, 0.71%)</title><rect x="23.9" y="883.0" width="8.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="26.9" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.24%)</title><rect x="23.9" y="867.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="26.9" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.24%)</title><rect x="23.9" y="851.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="26.9" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="23.9" y="835.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="26.9" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.24%)</title><rect x="23.9" y="819.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="26.9" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.24%)</title><rect x="23.9" y="803.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="26.9" y="814.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.24%)</title><rect x="23.9" y="787.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="26.9" y="798.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (1 samples, 0.24%)</title><rect x="23.9" y="771.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="26.9" y="782.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (1 samples, 0.24%)</title><rect x="23.9" y="755.0" width="2.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="26.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.24%)</title><rect x="23.9" y="739.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="26.9" y="750.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.24%)</title><rect x="23.9" y="723.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="26.9" y="734.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="23.9" y="707.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="26.9" y="718.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.24%)</title><rect x="23.9" y="691.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="26.9" y="702.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.24%)</title><rect x="23.9" y="675.0" width="2.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="26.9" y="686.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.24%)</title><rect x="23.9" y="659.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="26.9" y="670.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.24%)</title><rect x="23.9" y="643.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="26.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (2 samples, 0.47%)</title><rect x="26.7" y="867.0" width="5.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="29.7" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.47%)</title><rect x="26.7" y="851.0" width="5.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="29.7" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.47%)</title><rect x="26.7" y="835.0" width="5.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="29.7" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.47%)</title><rect x="26.7" y="819.0" width="5.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="29.7" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.47%)</title><rect x="26.7" y="803.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="29.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.47%)</title><rect x="26.7" y="787.0" width="5.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="29.7" y="798.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.47%)</title><rect x="26.7" y="771.0" width="5.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="29.7" y="782.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (2 samples, 0.47%)</title><rect x="26.7" y="755.0" width="5.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="29.7" y="766.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (2 samples, 0.47%)</title><rect x="26.7" y="739.0" width="5.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="29.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.47%)</title><rect x="26.7" y="723.0" width="5.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="29.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.47%)</title><rect x="26.7" y="707.0" width="5.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="29.7" y="718.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="26.7" y="691.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="29.7" y="702.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.24%)</title><rect x="26.7" y="675.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="29.7" y="686.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.24%)</title><rect x="26.7" y="659.0" width="2.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="29.7" y="670.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.24%)</title><rect x="26.7" y="643.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="29.7" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.24%)</title><rect x="26.7" y="627.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="29.7" y="638.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="29.5" y="691.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="32.5" y="702.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.24%)</title><rect x="29.5" y="675.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="32.5" y="686.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.24%)</title><rect x="29.5" y="659.0" width="2.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="32.5" y="670.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.24%)</title><rect x="29.5" y="643.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="32.5" y="654.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (77 samples, 18.20%)</title><rect x="32.3" y="995.0" width="214.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="35.3" y="1006.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.24%)</title><rect x="35.1" y="979.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.1" y="990.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.24%)</title><rect x="35.1" y="963.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="38.1" y="974.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.24%)</title><rect x="35.1" y="947.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="38.1" y="958.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.24%)</title><rect x="35.1" y="931.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="38.1" y="942.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.24%)</title><rect x="35.1" y="915.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="38.1" y="926.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.24%)</title><rect x="35.1" y="899.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="38.1" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.71%)</title><rect x="37.9" y="979.0" width="8.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.9" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.71%)</title><rect x="37.9" y="963.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="40.9" y="974.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.71%)</title><rect x="37.9" y="947.0" width="8.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="40.9" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.47%)</title><rect x="40.7" y="931.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="43.7" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.47%)</title><rect x="40.7" y="915.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="43.7" y="926.0"></text>
</g>
<g>
<title>sys_epoll_wait (2 samples, 0.47%)</title><rect x="40.7" y="899.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="43.7" y="910.0"></text>
</g>
<g>
<title>default_wake_function (1 samples, 0.24%)</title><rect x="40.7" y="883.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="43.7" y="894.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.24%)</title><rect x="40.7" y="867.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="43.7" y="878.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.24%)</title><rect x="43.5" y="883.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="46.5" y="894.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.24%)</title><rect x="43.5" y="867.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="46.5" y="878.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (1 samples, 0.24%)</title><rect x="43.5" y="851.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="46.5" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.24%)</title><rect x="43.5" y="835.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="46.5" y="846.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.24%)</title><rect x="43.5" y="819.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="46.5" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (72 samples, 17.02%)</title><rect x="46.3" y="979.0" width="200.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.3" y="990.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (72 samples, 17.02%)</title><rect x="46.3" y="963.0" width="200.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.3" y="974.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (67 samples, 15.84%)</title><rect x="49.1" y="947.0" width="186.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.1" y="958.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (66 samples, 15.60%)</title><rect x="49.1" y="931.0" width="184.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.1" y="942.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (66 samples, 15.60%)</title><rect x="49.1" y="915.0" width="184.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.1" y="926.0">one/nio/http/HttpServer...</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (66 samples, 15.60%)</title><rect x="49.1" y="899.0" width="184.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.1" y="910.0">RequestHandler0_entity.h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (15 samples, 3.55%)</title><rect x="49.1" y="883.0" width="41.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.1" y="894.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.24%)</title><rect x="49.1" y="867.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.24%)</title><rect x="49.1" y="851.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (14 samples, 3.31%)</title><rect x="51.8" y="867.0" width="39.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.8" y="878.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (14 samples, 3.31%)</title><rect x="51.8" y="851.0" width="39.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="54.8" y="862.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (14 samples, 3.31%)</title><rect x="51.8" y="835.0" width="39.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.8" y="846.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (14 samples, 3.31%)</title><rect x="51.8" y="819.0" width="39.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.8" y="830.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (14 samples, 3.31%)</title><rect x="51.8" y="803.0" width="39.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.8" y="814.0">one..</text>
</g>
<g>
<title>__send (14 samples, 3.31%)</title><rect x="51.8" y="787.0" width="39.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="54.8" y="798.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (14 samples, 3.31%)</title><rect x="51.8" y="771.0" width="39.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="54.8" y="782.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (14 samples, 3.31%)</title><rect x="51.8" y="755.0" width="39.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="54.8" y="766.0">do_..</text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.24%)</title><rect x="51.8" y="739.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="54.8" y="750.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.24%)</title><rect x="51.8" y="723.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="54.8" y="734.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.24%)</title><rect x="51.8" y="707.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="54.8" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.24%)</title><rect x="51.8" y="691.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="54.8" y="702.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.24%)</title><rect x="51.8" y="675.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="54.8" y="686.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.24%)</title><rect x="51.8" y="659.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="54.8" y="670.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.24%)</title><rect x="51.8" y="643.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="54.8" y="654.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.24%)</title><rect x="51.8" y="627.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="54.8" y="638.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.24%)</title><rect x="51.8" y="611.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="54.8" y="622.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.24%)</title><rect x="51.8" y="595.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="54.8" y="606.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.24%)</title><rect x="51.8" y="579.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="54.8" y="590.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.24%)</title><rect x="51.8" y="563.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="54.8" y="574.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.24%)</title><rect x="51.8" y="547.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="54.8" y="558.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.24%)</title><rect x="51.8" y="531.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="54.8" y="542.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.24%)</title><rect x="51.8" y="515.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="54.8" y="526.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.24%)</title><rect x="51.8" y="499.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="54.8" y="510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="54.6" y="739.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="57.6" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.24%)</title><rect x="54.6" y="723.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="57.6" y="734.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.24%)</title><rect x="54.6" y="707.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="57.6" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.24%)</title><rect x="54.6" y="691.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="57.6" y="702.0"></text>
</g>
<g>
<title>sys_write (12 samples, 2.84%)</title><rect x="57.4" y="739.0" width="33.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="60.4" y="750.0">sy..</text>
</g>
<g>
<title>sys_futex (5 samples, 1.18%)</title><rect x="57.4" y="723.0" width="14.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="60.4" y="734.0"></text>
</g>
<g>
<title>SYSC_sendto (5 samples, 1.18%)</title><rect x="57.4" y="707.0" width="14.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="60.4" y="718.0"></text>
</g>
<g>
<title>sock_sendmsg (5 samples, 1.18%)</title><rect x="57.4" y="691.0" width="14.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="60.4" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (5 samples, 1.18%)</title><rect x="57.4" y="675.0" width="14.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="60.4" y="686.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (5 samples, 1.18%)</title><rect x="57.4" y="659.0" width="14.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="60.4" y="670.0"></text>
</g>
<g>
<title>tcp_write_xmit (5 samples, 1.18%)</title><rect x="57.4" y="643.0" width="14.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="60.4" y="654.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 1.18%)</title><rect x="57.4" y="627.0" width="14.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="60.4" y="638.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 1.18%)</title><rect x="57.4" y="611.0" width="14.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="60.4" y="622.0"></text>
</g>
<g>
<title>__sk_dst_check (5 samples, 1.18%)</title><rect x="57.4" y="595.0" width="14.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="60.4" y="606.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 1.18%)</title><rect x="57.4" y="579.0" width="14.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="60.4" y="590.0"></text>
</g>
<g>
<title>ip_output (5 samples, 1.18%)</title><rect x="57.4" y="563.0" width="14.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="60.4" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 1.18%)</title><rect x="57.4" y="547.0" width="14.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="60.4" y="558.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.24%)</title><rect x="57.4" y="531.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="60.4" y="542.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.24%)</title><rect x="57.4" y="515.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="60.4" y="526.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.24%)</title><rect x="57.4" y="499.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="60.4" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.95%)</title><rect x="60.2" y="531.0" width="11.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="63.2" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.18 (4 samples, 0.95%)</title><rect x="60.2" y="515.0" width="11.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="63.2" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.95%)</title><rect x="60.2" y="499.0" width="11.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="63.2" y="510.0"></text>
</g>
<g>
<title>__do_softirq (4 samples, 0.95%)</title><rect x="60.2" y="483.0" width="11.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="63.2" y="494.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.95%)</title><rect x="60.2" y="467.0" width="11.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="63.2" y="478.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.95%)</title><rect x="60.2" y="451.0" width="11.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="63.2" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.24%)</title><rect x="60.2" y="435.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="63.2" y="446.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.24%)</title><rect x="60.2" y="419.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="63.2" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.24%)</title><rect x="60.2" y="403.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="63.2" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.24%)</title><rect x="60.2" y="387.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="63.2" y="398.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.24%)</title><rect x="60.2" y="371.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="63.2" y="382.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.24%)</title><rect x="60.2" y="355.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="63.2" y="366.0"></text>
</g>
<g>
<title>tcp_add_backlog (1 samples, 0.24%)</title><rect x="60.2" y="339.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="63.2" y="350.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.47%)</title><rect x="63.0" y="435.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="66.0" y="446.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.24%)</title><rect x="63.0" y="419.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="66.0" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.24%)</title><rect x="63.0" y="403.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="66.0" y="414.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.24%)</title><rect x="63.0" y="387.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="66.0" y="398.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.24%)</title><rect x="63.0" y="371.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="66.0" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.24%)</title><rect x="63.0" y="355.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="66.0" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.24%)</title><rect x="63.0" y="339.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="66.0" y="350.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.24%)</title><rect x="63.0" y="323.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="66.0" y="334.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.24%)</title><rect x="63.0" y="307.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="66.0" y="318.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.24%)</title><rect x="63.0" y="291.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="66.0" y="302.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.24%)</title><rect x="63.0" y="275.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="66.0" y="286.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.24%)</title><rect x="63.0" y="259.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="66.0" y="270.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.24%)</title><rect x="63.0" y="243.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="66.0" y="254.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.24%)</title><rect x="63.0" y="227.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="66.0" y="238.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.24%)</title><rect x="65.8" y="419.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="68.8" y="430.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.24%)</title><rect x="65.8" y="403.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="68.8" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.24%)</title><rect x="65.8" y="387.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="68.8" y="398.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.24%)</title><rect x="65.8" y="371.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="68.8" y="382.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.24%)</title><rect x="65.8" y="355.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="68.8" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.24%)</title><rect x="65.8" y="339.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="68.8" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.24%)</title><rect x="65.8" y="323.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="68.8" y="334.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.24%)</title><rect x="65.8" y="307.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="68.8" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.24%)</title><rect x="65.8" y="291.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="68.8" y="302.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.24%)</title><rect x="65.8" y="275.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="68.8" y="286.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.24%)</title><rect x="65.8" y="259.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="68.8" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.24%)</title><rect x="65.8" y="243.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="68.8" y="254.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.24%)</title><rect x="65.8" y="227.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="68.8" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.24%)</title><rect x="65.8" y="211.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="68.8" y="222.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.24%)</title><rect x="65.8" y="195.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="68.8" y="206.0"></text>
</g>
<g>
<title>tcp_write_timer (1 samples, 0.24%)</title><rect x="68.6" y="435.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="71.6" y="446.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.24%)</title><rect x="68.6" y="419.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="71.6" y="430.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.24%)</title><rect x="68.6" y="403.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="71.6" y="414.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.24%)</title><rect x="68.6" y="387.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="71.6" y="398.0"></text>
</g>
<g>
<title>task_tick_fair (1 samples, 0.24%)</title><rect x="68.6" y="371.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="71.6" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.24%)</title><rect x="68.6" y="355.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="71.6" y="366.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.24%)</title><rect x="68.6" y="339.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="71.6" y="350.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.24%)</title><rect x="68.6" y="323.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="71.6" y="334.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.24%)</title><rect x="68.6" y="307.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="71.6" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.24%)</title><rect x="68.6" y="291.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="71.6" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.24%)</title><rect x="68.6" y="275.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="71.6" y="286.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.24%)</title><rect x="68.6" y="259.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="71.6" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.24%)</title><rect x="68.6" y="243.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="71.6" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.24%)</title><rect x="68.6" y="227.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="71.6" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.24%)</title><rect x="68.6" y="211.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="71.6" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.24%)</title><rect x="68.6" y="195.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="71.6" y="206.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.24%)</title><rect x="68.6" y="179.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="71.6" y="190.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.24%)</title><rect x="68.6" y="163.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="71.6" y="174.0"></text>
</g>
<g>
<title>vfs_write (7 samples, 1.65%)</title><rect x="71.4" y="723.0" width="19.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="74.4" y="734.0"></text>
</g>
<g>
<title>SYSC_sendto (7 samples, 1.65%)</title><rect x="71.4" y="707.0" width="19.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="74.4" y="718.0"></text>
</g>
<g>
<title>sock_sendmsg (7 samples, 1.65%)</title><rect x="71.4" y="691.0" width="19.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="74.4" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (7 samples, 1.65%)</title><rect x="71.4" y="675.0" width="19.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="74.4" y="686.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (4 samples, 0.95%)</title><rect x="71.4" y="659.0" width="11.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="74.4" y="670.0"></text>
</g>
<g>
<title>tcp_write_xmit (4 samples, 0.95%)</title><rect x="71.4" y="643.0" width="11.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="74.4" y="654.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.71%)</title><rect x="71.4" y="627.0" width="8.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="74.4" y="638.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.47%)</title><rect x="74.2" y="611.0" width="5.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="77.2" y="622.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.47%)</title><rect x="74.2" y="595.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="77.2" y="606.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.47%)</title><rect x="74.2" y="579.0" width="5.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="77.2" y="590.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.47%)</title><rect x="74.2" y="563.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="77.2" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.47%)</title><rect x="74.2" y="547.0" width="5.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="77.2" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.47%)</title><rect x="74.2" y="531.0" width="5.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="77.2" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.18 (2 samples, 0.47%)</title><rect x="74.2" y="515.0" width="5.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="77.2" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.47%)</title><rect x="74.2" y="499.0" width="5.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="77.2" y="510.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.47%)</title><rect x="74.2" y="483.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="77.2" y="494.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.47%)</title><rect x="74.2" y="467.0" width="5.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="77.2" y="478.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.47%)</title><rect x="74.2" y="451.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="77.2" y="462.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.47%)</title><rect x="74.2" y="435.0" width="5.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="77.2" y="446.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.24%)</title><rect x="74.2" y="419.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="77.2" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.24%)</title><rect x="74.2" y="403.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="77.2" y="414.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.24%)</title><rect x="74.2" y="387.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="77.2" y="398.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.24%)</title><rect x="74.2" y="371.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="77.2" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.24%)</title><rect x="74.2" y="355.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="77.2" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.24%)</title><rect x="74.2" y="339.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="77.2" y="350.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.24%)</title><rect x="74.2" y="323.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="77.2" y="334.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.24%)</title><rect x="74.2" y="307.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="77.2" y="318.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.24%)</title><rect x="74.2" y="291.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="77.2" y="302.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.24%)</title><rect x="74.2" y="275.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="77.2" y="286.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.24%)</title><rect x="74.2" y="259.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="77.2" y="270.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.24%)</title><rect x="74.2" y="243.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="77.2" y="254.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.24%)</title><rect x="74.2" y="227.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="77.2" y="238.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.24%)</title><rect x="74.2" y="211.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="77.2" y="222.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.24%)</title><rect x="77.0" y="419.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="80.0" y="430.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.24%)</title><rect x="77.0" y="403.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="80.0" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.24%)</title><rect x="77.0" y="387.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="80.0" y="398.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.24%)</title><rect x="77.0" y="371.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="80.0" y="382.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.24%)</title><rect x="77.0" y="355.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="80.0" y="366.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.24%)</title><rect x="77.0" y="339.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="80.0" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.24%)</title><rect x="77.0" y="323.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="80.0" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.24%)</title><rect x="77.0" y="307.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="80.0" y="318.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.24%)</title><rect x="77.0" y="291.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="80.0" y="302.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.24%)</title><rect x="77.0" y="275.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="80.0" y="286.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.24%)</title><rect x="77.0" y="259.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="80.0" y="270.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.24%)</title><rect x="79.7" y="627.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="82.7" y="638.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.24%)</title><rect x="79.7" y="611.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="82.7" y="622.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.24%)</title><rect x="79.7" y="595.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="82.7" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.24%)</title><rect x="79.7" y="579.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="82.7" y="590.0"></text>
</g>
<g>
<title>copy_from_iter (2 samples, 0.47%)</title><rect x="82.5" y="659.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="85.5" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.47%)</title><rect x="82.5" y="643.0" width="5.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="85.5" y="654.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.24%)</title><rect x="88.1" y="659.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="91.1" y="670.0"></text>
</g>
<g>
<title>jump_label_module_notify (1 samples, 0.24%)</title><rect x="88.1" y="643.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="91.1" y="654.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.24%)</title><rect x="88.1" y="627.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="91.1" y="638.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.24%)</title><rect x="88.1" y="611.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="91.1" y="622.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.24%)</title><rect x="88.1" y="595.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="91.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/MyHttpServer.entity (51 samples, 12.06%)</title><rect x="90.9" y="883.0" width="142.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.9" y="894.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.24%)</title><rect x="90.9" y="867.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.24%)</title><rect x="90.9" y="851.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.9" y="862.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.24%)</title><rect x="90.9" y="835.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.9" y="846.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.24%)</title><rect x="90.9" y="819.0" width="2.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="93.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (50 samples, 11.82%)</title><rect x="93.7" y="867.0" width="139.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="96.7" y="878.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (48 samples, 11.35%)</title><rect x="96.5" y="851.0" width="133.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="99.5" y="862.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (48 samples, 11.35%)</title><rect x="96.5" y="835.0" width="133.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="99.5" y="846.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (41 samples, 9.69%)</title><rect x="96.5" y="819.0" width="114.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="99.5" y="830.0">Java_org_rocks..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (41 samples, 9.69%)</title><rect x="96.5" y="803.0" width="114.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="99.5" y="814.0">rocksdb_put_he..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (41 samples, 9.69%)</title><rect x="96.5" y="787.0" width="114.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="99.5" y="798.0">rocksdb::DB::P..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (41 samples, 9.69%)</title><rect x="96.5" y="771.0" width="114.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="99.5" y="782.0">rocksdb::DBImp..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (41 samples, 9.69%)</title><rect x="96.5" y="755.0" width="114.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="99.5" y="766.0">rocksdb::DB::P..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (41 samples, 9.69%)</title><rect x="96.5" y="739.0" width="114.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="99.5" y="750.0">rocksdb::DBImp..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (40 samples, 9.46%)</title><rect x="96.5" y="723.0" width="111.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="99.5" y="734.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (7 samples, 1.65%)</title><rect x="96.5" y="707.0" width="19.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="99.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (7 samples, 1.65%)</title><rect x="96.5" y="691.0" width="19.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="99.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (6 samples, 1.42%)</title><rect x="99.3" y="675.0" width="16.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="102.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (5 samples, 1.18%)</title><rect x="102.1" y="659.0" width="13.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="105.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (5 samples, 1.18%)</title><rect x="102.1" y="643.0" width="13.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="105.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.24%)</title><rect x="104.8" y="627.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="107.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (3 samples, 0.71%)</title><rect x="107.6" y="627.0" width="8.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="110.6" y="638.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (3 samples, 0.71%)</title><rect x="107.6" y="611.0" width="8.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="110.6" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.71%)</title><rect x="107.6" y="595.0" width="8.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="110.6" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.71%)</title><rect x="107.6" y="579.0" width="8.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="110.6" y="590.0"></text>
</g>
<g>
<title>sys_epoll_wait (3 samples, 0.71%)</title><rect x="107.6" y="563.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="110.6" y="574.0"></text>
</g>
<g>
<title>sys_write (3 samples, 0.71%)</title><rect x="107.6" y="547.0" width="8.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="110.6" y="558.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.71%)</title><rect x="107.6" y="531.0" width="8.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="110.6" y="542.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.71%)</title><rect x="107.6" y="515.0" width="8.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="110.6" y="526.0"></text>
</g>
<g>
<title>inet_recvmsg (3 samples, 0.71%)</title><rect x="107.6" y="499.0" width="8.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="110.6" y="510.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (3 samples, 0.71%)</title><rect x="107.6" y="483.0" width="8.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="110.6" y="494.0"></text>
</g>
<g>
<title>__generic_file_write_iter (3 samples, 0.71%)</title><rect x="107.6" y="467.0" width="8.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="110.6" y="478.0"></text>
</g>
<g>
<title>generic_perform_write (2 samples, 0.47%)</title><rect x="107.6" y="451.0" width="5.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="110.6" y="462.0"></text>
</g>
<g>
<title>ext4_da_write_end	[ext4] (1 samples, 0.24%)</title><rect x="107.6" y="435.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="110.6" y="446.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.24%)</title><rect x="107.6" y="419.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="110.6" y="430.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.24%)</title><rect x="107.6" y="403.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="110.6" y="414.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.24%)</title><rect x="107.6" y="387.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="110.6" y="398.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (1 samples, 0.24%)</title><rect x="107.6" y="371.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="110.6" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.24%)</title><rect x="107.6" y="355.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="110.6" y="366.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access	[ext4] (1 samples, 0.24%)</title><rect x="107.6" y="339.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="110.6" y="350.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty	[ext4] (1 samples, 0.24%)</title><rect x="107.6" y="323.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="110.6" y="334.0"></text>
</g>
<g>
<title>ext4_inode_csum_set	[ext4] (1 samples, 0.24%)</title><rect x="107.6" y="307.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="110.6" y="318.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.61	[ext4] (1 samples, 0.24%)</title><rect x="107.6" y="291.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="110.6" y="302.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.24%)</title><rect x="110.4" y="435.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="113.4" y="446.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.24%)</title><rect x="113.2" y="451.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="116.2" y="462.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.24%)</title><rect x="113.2" y="435.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="116.2" y="446.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.24%)</title><rect x="113.2" y="419.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="116.2" y="430.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.24%)</title><rect x="113.2" y="403.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="116.2" y="414.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.24%)</title><rect x="113.2" y="387.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="116.2" y="398.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.24%)</title><rect x="113.2" y="371.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="116.2" y="382.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (1 samples, 0.24%)</title><rect x="113.2" y="355.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="116.2" y="366.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.24%)</title><rect x="113.2" y="339.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="116.2" y="350.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write	[ext4] (1 samples, 0.24%)</title><rect x="113.2" y="323.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="116.2" y="334.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.24%)</title><rect x="113.2" y="307.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="116.2" y="318.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc	[ext4] (1 samples, 0.24%)</title><rect x="113.2" y="291.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="116.2" y="302.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (11 samples, 2.60%)</title><rect x="116.0" y="707.0" width="30.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="119.0" y="718.0">ro..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (11 samples, 2.60%)</title><rect x="116.0" y="691.0" width="30.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="119.0" y="702.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (11 samples, 2.60%)</title><rect x="116.0" y="675.0" width="30.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="119.0" y="686.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (11 samples, 2.60%)</title><rect x="116.0" y="659.0" width="30.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="119.0" y="670.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (11 samples, 2.60%)</title><rect x="116.0" y="643.0" width="30.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="119.0" y="654.0">ro..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (11 samples, 2.60%)</title><rect x="116.0" y="627.0" width="30.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="119.0" y="638.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (9 samples, 2.13%)</title><rect x="116.0" y="611.0" width="25.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="119.0" y="622.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (6 samples, 1.42%)</title><rect x="116.0" y="595.0" width="16.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="119.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 1.42%)</title><rect x="116.0" y="579.0" width="16.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="119.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (6 samples, 1.42%)</title><rect x="116.0" y="563.0" width="16.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="119.0" y="574.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.71%)</title><rect x="116.0" y="547.0" width="8.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="119.0" y="558.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (3 samples, 0.71%)</title><rect x="116.0" y="531.0" width="8.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="119.0" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.47%)</title><rect x="118.8" y="515.0" width="5.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="121.8" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.47%)</title><rect x="118.8" y="499.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="121.8" y="510.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.47%)</title><rect x="118.8" y="483.0" width="5.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="121.8" y="494.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.71%)</title><rect x="124.4" y="547.0" width="8.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="127.4" y="558.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.47%)</title><rect x="127.2" y="531.0" width="5.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="130.2" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.47%)</title><rect x="127.2" y="515.0" width="5.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="130.2" y="526.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.24%)</title><rect x="127.2" y="499.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="130.2" y="510.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.24%)</title><rect x="130.0" y="499.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="133.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.71%)</title><rect x="132.7" y="595.0" width="8.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="135.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.71%)</title><rect x="132.7" y="579.0" width="8.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="135.7" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="132.7" y="563.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="135.7" y="574.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.24%)</title><rect x="132.7" y="547.0" width="2.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="135.7" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.47%)</title><rect x="135.5" y="563.0" width="5.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="138.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.47%)</title><rect x="141.1" y="611.0" width="5.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="144.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.47%)</title><rect x="141.1" y="595.0" width="5.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="144.1" y="606.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="141.1" y="579.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="144.1" y="590.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.24%)</title><rect x="141.1" y="563.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="144.1" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.24%)</title><rect x="141.1" y="547.0" width="2.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="144.1" y="558.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.24%)</title><rect x="141.1" y="531.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="144.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.24%)</title><rect x="143.9" y="579.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="146.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (14 samples, 3.31%)</title><rect x="146.7" y="707.0" width="39.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="149.7" y="718.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (14 samples, 3.31%)</title><rect x="146.7" y="691.0" width="39.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="149.7" y="702.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (14 samples, 3.31%)</title><rect x="146.7" y="675.0" width="39.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="149.7" y="686.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (14 samples, 3.31%)</title><rect x="146.7" y="659.0" width="39.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="149.7" y="670.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (14 samples, 3.31%)</title><rect x="146.7" y="643.0" width="39.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="149.7" y="654.0">roc..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (14 samples, 3.31%)</title><rect x="146.7" y="627.0" width="39.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="149.7" y="638.0">roc..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (14 samples, 3.31%)</title><rect x="146.7" y="611.0" width="39.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="149.7" y="622.0">boo..</text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (13 samples, 3.07%)</title><rect x="146.7" y="595.0" width="36.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="149.7" y="606.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (13 samples, 3.07%)</title><rect x="146.7" y="579.0" width="36.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="149.7" y="590.0">/tm..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (13 samples, 3.07%)</title><rect x="146.7" y="563.0" width="36.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="149.7" y="574.0">roc..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (13 samples, 3.07%)</title><rect x="146.7" y="547.0" width="36.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="149.7" y="558.0">roc..</text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.71%)</title><rect x="146.7" y="531.0" width="8.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="149.7" y="542.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (3 samples, 0.71%)</title><rect x="146.7" y="515.0" width="8.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="149.7" y="526.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.24%)</title><rect x="146.7" y="499.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="149.7" y="510.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.24%)</title><rect x="149.5" y="499.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="152.5" y="510.0"></text>
</g>
<g>
<title>SignatureIterator::SignatureIterator(Symbol*) (1 samples, 0.24%)</title><rect x="152.3" y="499.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="155.3" y="510.0"></text>
</g>
<g>
<title>__lll_lock_wait (3 samples, 0.71%)</title><rect x="155.1" y="531.0" width="8.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="158.1" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.47%)</title><rect x="157.8" y="515.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="160.8" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.47%)</title><rect x="157.8" y="499.0" width="5.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="160.8" y="510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="160.6" y="483.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="163.6" y="494.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.24%)</title><rect x="160.6" y="467.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="163.6" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.24%)</title><rect x="160.6" y="451.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="163.6" y="462.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.24%)</title><rect x="160.6" y="435.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="163.6" y="446.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.24%)</title><rect x="160.6" y="419.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="163.6" y="430.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.24%)</title><rect x="160.6" y="403.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="163.6" y="414.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.24%)</title><rect x="160.6" y="387.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="163.6" y="398.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.24%)</title><rect x="160.6" y="371.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="163.6" y="382.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.24%)</title><rect x="160.6" y="355.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="163.6" y="366.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.47%)</title><rect x="163.4" y="531.0" width="5.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="166.4" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.47%)</title><rect x="163.4" y="515.0" width="5.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="166.4" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.47%)</title><rect x="163.4" y="499.0" width="5.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="166.4" y="510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="163.4" y="483.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="166.4" y="494.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.24%)</title><rect x="163.4" y="467.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="166.4" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.24%)</title><rect x="163.4" y="451.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="166.4" y="462.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.24%)</title><rect x="163.4" y="435.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="166.4" y="446.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.24%)</title><rect x="163.4" y="419.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="166.4" y="430.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.24%)</title><rect x="163.4" y="403.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="166.4" y="414.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.24%)</title><rect x="163.4" y="387.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="166.4" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.24%)</title><rect x="163.4" y="371.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="166.4" y="382.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.24%)</title><rect x="166.2" y="483.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="169.2" y="494.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="166.2" y="467.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="169.2" y="478.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.24%)</title><rect x="166.2" y="451.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="169.2" y="462.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.24%)</title><rect x="166.2" y="435.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="169.2" y="446.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.24%)</title><rect x="166.2" y="419.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="169.2" y="430.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.24%)</title><rect x="166.2" y="403.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="169.2" y="414.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.24%)</title><rect x="166.2" y="387.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="169.2" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.24%)</title><rect x="166.2" y="371.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="169.2" y="382.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.24%)</title><rect x="169.0" y="531.0" width="2.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="172.0" y="542.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.47%)</title><rect x="171.8" y="531.0" width="5.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="174.8" y="542.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.24%)</title><rect x="177.4" y="531.0" width="2.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="180.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.24%)</title><rect x="180.2" y="531.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="183.2" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.24%)</title><rect x="180.2" y="515.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="183.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.24%)</title><rect x="183.0" y="595.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="186.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.24%)</title><rect x="183.0" y="579.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="186.0" y="590.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.24%)</title><rect x="183.0" y="563.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="186.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.71%)</title><rect x="185.7" y="707.0" width="8.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="188.7" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.24%)</title><rect x="191.3" y="691.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="194.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="191.3" y="675.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="194.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="191.3" y="659.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="194.3" y="670.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="191.3" y="643.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="194.3" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.24%)</title><rect x="191.3" y="627.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="194.3" y="638.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.24%)</title><rect x="191.3" y="611.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="194.3" y="622.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.24%)</title><rect x="191.3" y="595.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="194.3" y="606.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.24%)</title><rect x="191.3" y="579.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="194.3" y="590.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.24%)</title><rect x="191.3" y="563.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="194.3" y="574.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.24%)</title><rect x="191.3" y="547.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="194.3" y="558.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.24%)</title><rect x="191.3" y="531.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="194.3" y="542.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.24%)</title><rect x="191.3" y="515.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="194.3" y="526.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.24%)</title><rect x="191.3" y="499.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="194.3" y="510.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.24%)</title><rect x="191.3" y="483.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="194.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (4 samples, 0.95%)</title><rect x="194.1" y="707.0" width="11.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="197.1" y="718.0"></text>
</g>
<g>
<title>__sched_yield (3 samples, 0.71%)</title><rect x="194.1" y="691.0" width="8.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="197.1" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.71%)</title><rect x="194.1" y="675.0" width="8.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="197.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.71%)</title><rect x="194.1" y="659.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="197.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.24%)</title><rect x="202.5" y="691.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="205.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.24%)</title><rect x="205.3" y="707.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="208.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.24%)</title><rect x="208.1" y="723.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="211.1" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (3 samples, 0.71%)</title><rect x="210.9" y="819.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.9" y="830.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 0.95%)</title><rect x="219.2" y="819.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.2" y="830.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 0.95%)</title><rect x="219.2" y="803.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="222.2" y="814.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (4 samples, 0.95%)</title><rect x="219.2" y="787.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.2" y="798.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 0.95%)</title><rect x="219.2" y="771.0" width="11.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.2" y="782.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 0.95%)</title><rect x="219.2" y="755.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="222.2" y="766.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (4 samples, 0.95%)</title><rect x="219.2" y="739.0" width="11.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="222.2" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.47%)</title><rect x="219.2" y="723.0" width="5.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="222.2" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.24%)</title><rect x="222.0" y="707.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="225.0" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.24%)</title><rect x="224.8" y="723.0" width="2.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="227.8" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.24%)</title><rect x="224.8" y="707.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="227.8" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.24%)</title><rect x="224.8" y="691.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="227.8" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.24%)</title><rect x="224.8" y="675.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="227.8" y="686.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.24%)</title><rect x="224.8" y="659.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="227.8" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.24%)</title><rect x="227.6" y="723.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="230.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (1 samples, 0.24%)</title><rect x="230.4" y="851.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.4" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.24%)</title><rect x="230.4" y="835.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="233.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.24%)</title><rect x="233.2" y="931.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.2" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.24%)</title><rect x="233.2" y="915.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="236.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.95%)</title><rect x="236.0" y="947.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.0" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.71%)</title><rect x="238.7" y="931.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="238.7" y="915.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="241.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="238.7" y="899.0" width="2.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="241.7" y="910.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.24%)</title><rect x="238.7" y="883.0" width="2.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="241.7" y="894.0"></text>
</g>
<g>
<title>__libc_recv (1 samples, 0.24%)</title><rect x="241.5" y="915.0" width="2.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="244.5" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="241.5" y="899.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="244.5" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="241.5" y="883.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="244.5" y="894.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.24%)</title><rect x="241.5" y="867.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="244.5" y="878.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.24%)</title><rect x="241.5" y="851.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="244.5" y="862.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.24%)</title><rect x="241.5" y="835.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="244.5" y="846.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.24%)</title><rect x="241.5" y="819.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="244.5" y="830.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.24%)</title><rect x="241.5" y="803.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="244.5" y="814.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.24%)</title><rect x="241.5" y="787.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="244.5" y="798.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.24%)</title><rect x="241.5" y="771.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="244.5" y="782.0"></text>
</g>
<g>
<title>copy_to_iter (1 samples, 0.24%)</title><rect x="241.5" y="755.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="244.5" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.24%)</title><rect x="241.5" y="739.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="244.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (1 samples, 0.24%)</title><rect x="244.3" y="915.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="247.3" y="926.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (1 samples, 0.24%)</title><rect x="244.3" y="899.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.3" y="910.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (1 samples, 0.24%)</title><rect x="244.3" y="883.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="247.3" y="894.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.24%)</title><rect x="244.3" y="867.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.3" y="878.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.24%)</title><rect x="244.3" y="851.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="247.3" y="862.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.24%)</title><rect x="244.3" y="835.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="247.3" y="846.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.24%)</title><rect x="244.3" y="819.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="247.3" y="830.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.24%)</title><rect x="244.3" y="803.0" width="2.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="247.3" y="814.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.24%)</title><rect x="244.3" y="787.0" width="2.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="247.3" y="798.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.24%)</title><rect x="244.3" y="771.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="247.3" y="782.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.24%)</title><rect x="244.3" y="755.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="247.3" y="766.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.24%)</title><rect x="244.3" y="739.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="247.3" y="750.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (1 samples, 0.24%)</title><rect x="244.3" y="723.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="247.3" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=2809] (79 samples, 18.68%)</title><rect x="247.1" y="1011.0" width="220.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="250.1" y="1022.0">[NIO Selector #1 tid=2809]</text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.47%)</title><rect x="247.1" y="995.0" width="5.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="250.1" y="1006.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (2 samples, 0.47%)</title><rect x="247.1" y="979.0" width="5.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="250.1" y="990.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (2 samples, 0.47%)</title><rect x="247.1" y="963.0" width="5.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="250.1" y="974.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.47%)</title><rect x="247.1" y="947.0" width="5.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="250.1" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.47%)</title><rect x="247.1" y="931.0" width="5.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="250.1" y="942.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.47%)</title><rect x="247.1" y="915.0" width="5.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="250.1" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2 samples, 0.47%)</title><rect x="247.1" y="899.0" width="5.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="250.1" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.47%)</title><rect x="247.1" y="883.0" width="5.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="250.1" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.47%)</title><rect x="247.1" y="867.0" width="5.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="250.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.47%)</title><rect x="247.1" y="851.0" width="5.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="250.1" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.47%)</title><rect x="247.1" y="835.0" width="5.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="250.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.47%)</title><rect x="247.1" y="819.0" width="5.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="250.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.47%)</title><rect x="247.1" y="803.0" width="5.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="250.1" y="814.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.47%)</title><rect x="247.1" y="787.0" width="5.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="250.1" y="798.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (2 samples, 0.47%)</title><rect x="247.1" y="771.0" width="5.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="250.1" y="782.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (2 samples, 0.47%)</title><rect x="247.1" y="755.0" width="5.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="250.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.47%)</title><rect x="247.1" y="739.0" width="5.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="250.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.47%)</title><rect x="247.1" y="723.0" width="5.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="250.1" y="734.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.47%)</title><rect x="247.1" y="707.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="250.1" y="718.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.47%)</title><rect x="247.1" y="691.0" width="5.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="250.1" y="702.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.47%)</title><rect x="247.1" y="675.0" width="5.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="250.1" y="686.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.47%)</title><rect x="247.1" y="659.0" width="5.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="250.1" y="670.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.47%)</title><rect x="247.1" y="643.0" width="5.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="250.1" y="654.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (77 samples, 18.20%)</title><rect x="252.7" y="995.0" width="214.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="255.7" y="1006.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 1.18%)</title><rect x="252.7" y="979.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.7" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.95%)</title><rect x="255.5" y="963.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.5" y="974.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.24%)</title><rect x="255.5" y="947.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="258.5" y="958.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.71%)</title><rect x="258.3" y="947.0" width="8.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="261.3" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.47%)</title><rect x="261.1" y="931.0" width="5.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="264.1" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.47%)</title><rect x="261.1" y="915.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="264.1" y="926.0"></text>
</g>
<g>
<title>sys_epoll_wait (2 samples, 0.47%)</title><rect x="261.1" y="899.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="264.1" y="910.0"></text>
</g>
<g>
<title>default_wake_function (2 samples, 0.47%)</title><rect x="261.1" y="883.0" width="5.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="264.1" y="894.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.47%)</title><rect x="261.1" y="867.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="264.1" y="878.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (2 samples, 0.47%)</title><rect x="261.1" y="851.0" width="5.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="264.1" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.24%)</title><rect x="261.1" y="835.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="264.1" y="846.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.24%)</title><rect x="261.1" y="819.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="264.1" y="830.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.24%)</title><rect x="261.1" y="803.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="264.1" y="814.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.24%)</title><rect x="261.1" y="787.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="264.1" y="798.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.24%)</title><rect x="261.1" y="771.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="264.1" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.24%)</title><rect x="263.9" y="835.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="266.9" y="846.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.24%)</title><rect x="263.9" y="819.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="266.9" y="830.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.24%)</title><rect x="263.9" y="803.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="266.9" y="814.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.24%)</title><rect x="263.9" y="787.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="266.9" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.24%)</title><rect x="263.9" y="771.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="266.9" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (72 samples, 17.02%)</title><rect x="266.6" y="979.0" width="200.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="269.6" y="990.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (72 samples, 17.02%)</title><rect x="266.6" y="963.0" width="200.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="269.6" y="974.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (68 samples, 16.08%)</title><rect x="266.6" y="947.0" width="189.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.6" y="958.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (64 samples, 15.13%)</title><rect x="266.6" y="931.0" width="178.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="269.6" y="942.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (64 samples, 15.13%)</title><rect x="266.6" y="915.0" width="178.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="269.6" y="926.0">one/nio/http/HttpServer..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (62 samples, 14.66%)</title><rect x="269.4" y="899.0" width="173.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.4" y="910.0">RequestHandler0_entity..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (12 samples, 2.84%)</title><rect x="269.4" y="883.0" width="33.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.4" y="894.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (12 samples, 2.84%)</title><rect x="269.4" y="867.0" width="33.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="272.4" y="878.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (12 samples, 2.84%)</title><rect x="269.4" y="851.0" width="33.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.4" y="862.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (12 samples, 2.84%)</title><rect x="269.4" y="835.0" width="33.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="272.4" y="846.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (12 samples, 2.84%)</title><rect x="269.4" y="819.0" width="33.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="272.4" y="830.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (12 samples, 2.84%)</title><rect x="269.4" y="803.0" width="33.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.4" y="814.0">on..</text>
</g>
<g>
<title>__send (12 samples, 2.84%)</title><rect x="269.4" y="787.0" width="33.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="272.4" y="798.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (12 samples, 2.84%)</title><rect x="269.4" y="771.0" width="33.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="272.4" y="782.0">en..</text>
</g>
<g>
<title>do_syscall_64 (12 samples, 2.84%)</title><rect x="269.4" y="755.0" width="33.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="272.4" y="766.0">do..</text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.47%)</title><rect x="269.4" y="739.0" width="5.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="272.4" y="750.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.24%)</title><rect x="269.4" y="723.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="272.4" y="734.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.24%)</title><rect x="269.4" y="707.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="272.4" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.24%)</title><rect x="269.4" y="691.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="272.4" y="702.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.24%)</title><rect x="269.4" y="675.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="272.4" y="686.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.24%)</title><rect x="269.4" y="659.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="272.4" y="670.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.24%)</title><rect x="269.4" y="643.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="272.4" y="654.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.24%)</title><rect x="269.4" y="627.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="272.4" y="638.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.24%)</title><rect x="269.4" y="611.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="272.4" y="622.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.24%)</title><rect x="269.4" y="595.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="272.4" y="606.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.24%)</title><rect x="269.4" y="579.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="272.4" y="590.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.24%)</title><rect x="269.4" y="563.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="272.4" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.24%)</title><rect x="269.4" y="547.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="272.4" y="558.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.24%)</title><rect x="269.4" y="531.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="272.4" y="542.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.24%)</title><rect x="269.4" y="515.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="272.4" y="526.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.24%)</title><rect x="269.4" y="499.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="272.4" y="510.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.24%)</title><rect x="269.4" y="483.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="272.4" y="494.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.24%)</title><rect x="269.4" y="467.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="272.4" y="478.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.24%)</title><rect x="269.4" y="451.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="272.4" y="462.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.24%)</title><rect x="269.4" y="435.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="272.4" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.24%)</title><rect x="269.4" y="419.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="272.4" y="430.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.24%)</title><rect x="269.4" y="403.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="272.4" y="414.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.24%)</title><rect x="269.4" y="387.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="272.4" y="398.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.24%)</title><rect x="269.4" y="371.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="272.4" y="382.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.24%)</title><rect x="269.4" y="355.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="272.4" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.24%)</title><rect x="269.4" y="339.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="272.4" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.24%)</title><rect x="269.4" y="323.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="272.4" y="334.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.24%)</title><rect x="269.4" y="307.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="272.4" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.24%)</title><rect x="269.4" y="291.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="272.4" y="302.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.24%)</title><rect x="269.4" y="275.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="272.4" y="286.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.24%)</title><rect x="269.4" y="259.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="272.4" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.24%)</title><rect x="269.4" y="243.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="272.4" y="254.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.24%)</title><rect x="269.4" y="227.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="272.4" y="238.0"></text>
</g>
<g>
<title>rt_cpu_seq_next (1 samples, 0.24%)</title><rect x="269.4" y="211.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="272.4" y="222.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.24%)</title><rect x="269.4" y="195.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="272.4" y="206.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.24%)</title><rect x="269.4" y="179.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="272.4" y="190.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.24%)</title><rect x="272.2" y="723.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="275.2" y="734.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.24%)</title><rect x="272.2" y="707.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="275.2" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.24%)</title><rect x="272.2" y="691.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="275.2" y="702.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.24%)</title><rect x="272.2" y="675.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="275.2" y="686.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="275.0" y="739.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="278.0" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.24%)</title><rect x="275.0" y="723.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="278.0" y="734.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.24%)</title><rect x="275.0" y="707.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="278.0" y="718.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.24%)</title><rect x="275.0" y="691.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="278.0" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.24%)</title><rect x="275.0" y="675.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="278.0" y="686.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.24%)</title><rect x="275.0" y="659.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="278.0" y="670.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.24%)</title><rect x="275.0" y="643.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="278.0" y="654.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.24%)</title><rect x="275.0" y="627.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="278.0" y="638.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.24%)</title><rect x="275.0" y="611.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="278.0" y="622.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.24%)</title><rect x="275.0" y="595.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="278.0" y="606.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.24%)</title><rect x="275.0" y="579.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="278.0" y="590.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.24%)</title><rect x="275.0" y="563.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="278.0" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.24%)</title><rect x="275.0" y="547.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="278.0" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.24%)</title><rect x="275.0" y="531.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="278.0" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.24%)</title><rect x="275.0" y="515.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="278.0" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.24%)</title><rect x="275.0" y="499.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="278.0" y="510.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.24%)</title><rect x="275.0" y="483.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="278.0" y="494.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.24%)</title><rect x="275.0" y="467.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="278.0" y="478.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.24%)</title><rect x="275.0" y="451.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="278.0" y="462.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.24%)</title><rect x="275.0" y="435.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="278.0" y="446.0"></text>
</g>
<g>
<title>task_tick_fair (1 samples, 0.24%)</title><rect x="275.0" y="419.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="278.0" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.24%)</title><rect x="275.0" y="403.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="278.0" y="414.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.24%)</title><rect x="275.0" y="387.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="278.0" y="398.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.24%)</title><rect x="275.0" y="371.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="278.0" y="382.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.24%)</title><rect x="275.0" y="355.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="278.0" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.24%)</title><rect x="275.0" y="339.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="278.0" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.24%)</title><rect x="275.0" y="323.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="278.0" y="334.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.24%)</title><rect x="275.0" y="307.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="278.0" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.24%)</title><rect x="275.0" y="291.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="278.0" y="302.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.24%)</title><rect x="275.0" y="275.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="278.0" y="286.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.24%)</title><rect x="275.0" y="259.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="278.0" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.24%)</title><rect x="275.0" y="243.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="278.0" y="254.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.24%)</title><rect x="275.0" y="227.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="278.0" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.24%)</title><rect x="275.0" y="211.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="278.0" y="222.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.24%)</title><rect x="275.0" y="195.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="278.0" y="206.0"></text>
</g>
<g>
<title>sys_write (9 samples, 2.13%)</title><rect x="277.8" y="739.0" width="25.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="280.8" y="750.0">s..</text>
</g>
<g>
<title>sys_futex (2 samples, 0.47%)</title><rect x="277.8" y="723.0" width="5.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="280.8" y="734.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.47%)</title><rect x="277.8" y="707.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="280.8" y="718.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.47%)</title><rect x="277.8" y="691.0" width="5.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="280.8" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.47%)</title><rect x="277.8" y="675.0" width="5.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="280.8" y="686.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.24%)</title><rect x="280.6" y="659.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="283.6" y="670.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.24%)</title><rect x="280.6" y="643.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="283.6" y="654.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.24%)</title><rect x="280.6" y="627.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="283.6" y="638.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.24%)</title><rect x="280.6" y="611.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="283.6" y="622.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.24%)</title><rect x="280.6" y="595.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="283.6" y="606.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.24%)</title><rect x="280.6" y="579.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="283.6" y="590.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.24%)</title><rect x="280.6" y="563.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="283.6" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.24%)</title><rect x="280.6" y="547.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="283.6" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.24%)</title><rect x="280.6" y="531.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="283.6" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.24%)</title><rect x="280.6" y="515.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="283.6" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.24%)</title><rect x="280.6" y="499.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="283.6" y="510.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.24%)</title><rect x="280.6" y="483.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="283.6" y="494.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.24%)</title><rect x="280.6" y="467.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="283.6" y="478.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.24%)</title><rect x="280.6" y="451.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="283.6" y="462.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.24%)</title><rect x="280.6" y="435.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="283.6" y="446.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.24%)</title><rect x="280.6" y="419.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="283.6" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.24%)</title><rect x="280.6" y="403.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="283.6" y="414.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.24%)</title><rect x="280.6" y="387.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="283.6" y="398.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.24%)</title><rect x="280.6" y="371.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="283.6" y="382.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.24%)</title><rect x="280.6" y="355.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="283.6" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.24%)</title><rect x="280.6" y="339.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="283.6" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.24%)</title><rect x="280.6" y="323.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="283.6" y="334.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.24%)</title><rect x="280.6" y="307.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="283.6" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.24%)</title><rect x="280.6" y="291.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="283.6" y="302.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.24%)</title><rect x="280.6" y="275.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="283.6" y="286.0"></text>
</g>
<g>
<title>vfs_write (7 samples, 1.65%)</title><rect x="283.4" y="723.0" width="19.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="286.4" y="734.0"></text>
</g>
<g>
<title>SYSC_sendto (7 samples, 1.65%)</title><rect x="283.4" y="707.0" width="19.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="286.4" y="718.0"></text>
</g>
<g>
<title>sock_sendmsg (7 samples, 1.65%)</title><rect x="283.4" y="691.0" width="19.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="286.4" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (7 samples, 1.65%)</title><rect x="283.4" y="675.0" width="19.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="286.4" y="686.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (4 samples, 0.95%)</title><rect x="283.4" y="659.0" width="11.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="286.4" y="670.0"></text>
</g>
<g>
<title>tcp_write_xmit (4 samples, 0.95%)</title><rect x="283.4" y="643.0" width="11.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="286.4" y="654.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.71%)</title><rect x="283.4" y="627.0" width="8.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="286.4" y="638.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.71%)</title><rect x="283.4" y="611.0" width="8.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="286.4" y="622.0"></text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.71%)</title><rect x="283.4" y="595.0" width="8.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="286.4" y="606.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.71%)</title><rect x="283.4" y="579.0" width="8.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="286.4" y="590.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.71%)</title><rect x="283.4" y="563.0" width="8.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="286.4" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.71%)</title><rect x="283.4" y="547.0" width="8.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="286.4" y="558.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.24%)</title><rect x="283.4" y="531.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="286.4" y="542.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.24%)</title><rect x="283.4" y="515.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="286.4" y="526.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.24%)</title><rect x="283.4" y="499.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="286.4" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.47%)</title><rect x="286.2" y="531.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="289.2" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.18 (2 samples, 0.47%)</title><rect x="286.2" y="515.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="289.2" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.47%)</title><rect x="286.2" y="499.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="289.2" y="510.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.47%)</title><rect x="286.2" y="483.0" width="5.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="289.2" y="494.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.47%)</title><rect x="286.2" y="467.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="289.2" y="478.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.47%)</title><rect x="286.2" y="451.0" width="5.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="289.2" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.24%)</title><rect x="286.2" y="435.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="289.2" y="446.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.24%)</title><rect x="286.2" y="419.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="289.2" y="430.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.24%)</title><rect x="286.2" y="403.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="289.2" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.24%)</title><rect x="286.2" y="387.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="289.2" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.24%)</title><rect x="286.2" y="371.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="289.2" y="382.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.24%)</title><rect x="286.2" y="355.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="289.2" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.24%)</title><rect x="286.2" y="339.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="289.2" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.24%)</title><rect x="286.2" y="323.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="289.2" y="334.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.24%)</title><rect x="286.2" y="307.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="289.2" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.24%)</title><rect x="286.2" y="291.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="289.2" y="302.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.24%)</title><rect x="286.2" y="275.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="289.2" y="286.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.24%)</title><rect x="286.2" y="259.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="289.2" y="270.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.24%)</title><rect x="286.2" y="243.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="289.2" y="254.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.24%)</title><rect x="286.2" y="227.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="289.2" y="238.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.24%)</title><rect x="286.2" y="211.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="289.2" y="222.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.24%)</title><rect x="286.2" y="195.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="289.2" y="206.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.24%)</title><rect x="286.2" y="179.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="289.2" y="190.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.24%)</title><rect x="289.0" y="435.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="292.0" y="446.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.24%)</title><rect x="289.0" y="419.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="292.0" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.24%)</title><rect x="289.0" y="403.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="292.0" y="414.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.24%)</title><rect x="289.0" y="387.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="292.0" y="398.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.24%)</title><rect x="289.0" y="371.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="292.0" y="382.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.24%)</title><rect x="289.0" y="355.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="292.0" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.24%)</title><rect x="289.0" y="339.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="292.0" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.24%)</title><rect x="289.0" y="323.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="292.0" y="334.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.24%)</title><rect x="289.0" y="307.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="292.0" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.24%)</title><rect x="289.0" y="291.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="292.0" y="302.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.24%)</title><rect x="289.0" y="275.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="292.0" y="286.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.24%)</title><rect x="289.0" y="259.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="292.0" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.24%)</title><rect x="289.0" y="243.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="292.0" y="254.0"></text>
</g>
<g>
<title>__tcp_send_ack (1 samples, 0.24%)</title><rect x="289.0" y="227.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="292.0" y="238.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.24%)</title><rect x="289.0" y="211.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="292.0" y="222.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.24%)</title><rect x="291.7" y="627.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="294.7" y="638.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.47%)</title><rect x="294.5" y="659.0" width="5.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="297.5" y="670.0"></text>
</g>
<g>
<title>__release_sock (2 samples, 0.47%)</title><rect x="294.5" y="643.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="297.5" y="654.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.24%)</title><rect x="297.3" y="627.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="300.3" y="638.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.24%)</title><rect x="297.3" y="611.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="300.3" y="622.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.24%)</title><rect x="297.3" y="595.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="300.3" y="606.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.24%)</title><rect x="297.3" y="579.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="300.3" y="590.0"></text>
</g>
<g>
<title>tcp_rtt_estimator (1 samples, 0.24%)</title><rect x="297.3" y="563.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="300.3" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.24%)</title><rect x="300.1" y="659.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="303.1" y="670.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.24%)</title><rect x="300.1" y="643.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="303.1" y="654.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.24%)</title><rect x="300.1" y="627.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="303.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.24%)</title><rect x="302.9" y="883.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="305.9" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/MyHttpServer.entity (49 samples, 11.58%)</title><rect x="305.7" y="883.0" width="136.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.7" y="894.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (49 samples, 11.58%)</title><rect x="305.7" y="867.0" width="136.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="308.7" y="878.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (48 samples, 11.35%)</title><rect x="305.7" y="851.0" width="133.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.7" y="862.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (48 samples, 11.35%)</title><rect x="305.7" y="835.0" width="133.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.7" y="846.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (38 samples, 8.98%)</title><rect x="305.7" y="819.0" width="106.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="308.7" y="830.0">Java_org_rock..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (38 samples, 8.98%)</title><rect x="305.7" y="803.0" width="106.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="308.7" y="814.0">rocksdb_put_h..</text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.24%)</title><rect x="305.7" y="787.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="308.7" y="798.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (37 samples, 8.75%)</title><rect x="308.5" y="787.0" width="103.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="311.5" y="798.0">rocksdb::DB:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (37 samples, 8.75%)</title><rect x="308.5" y="771.0" width="103.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="311.5" y="782.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (37 samples, 8.75%)</title><rect x="308.5" y="755.0" width="103.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="311.5" y="766.0">rocksdb::DB:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (37 samples, 8.75%)</title><rect x="308.5" y="739.0" width="103.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="311.5" y="750.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (36 samples, 8.51%)</title><rect x="308.5" y="723.0" width="100.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="311.5" y="734.0">rocksdb::DBI..</text>
</g>
<g>
<title>__sched_yield (1 samples, 0.24%)</title><rect x="314.1" y="707.0" width="2.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="317.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="314.1" y="691.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="317.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="314.1" y="675.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="317.1" y="686.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.24%)</title><rect x="314.1" y="659.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="317.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (6 samples, 1.42%)</title><rect x="316.9" y="707.0" width="16.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="319.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (6 samples, 1.42%)</title><rect x="316.9" y="691.0" width="16.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="319.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (6 samples, 1.42%)</title><rect x="316.9" y="675.0" width="16.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="319.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (6 samples, 1.42%)</title><rect x="316.9" y="659.0" width="16.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="319.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (5 samples, 1.18%)</title><rect x="316.9" y="643.0" width="13.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="319.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (5 samples, 1.18%)</title><rect x="316.9" y="627.0" width="13.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="319.9" y="638.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (4 samples, 0.95%)</title><rect x="319.6" y="611.0" width="11.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="322.6" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (4 samples, 0.95%)</title><rect x="319.6" y="595.0" width="11.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="322.6" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.95%)</title><rect x="319.6" y="579.0" width="11.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="322.6" y="590.0"></text>
</g>
<g>
<title>sys_epoll_wait (2 samples, 0.47%)</title><rect x="319.6" y="563.0" width="5.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="322.6" y="574.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.47%)</title><rect x="319.6" y="547.0" width="5.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="322.6" y="558.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.47%)</title><rect x="319.6" y="531.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="322.6" y="542.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.47%)</title><rect x="319.6" y="515.0" width="5.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="322.6" y="526.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.47%)</title><rect x="319.6" y="499.0" width="5.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="322.6" y="510.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (2 samples, 0.47%)</title><rect x="319.6" y="483.0" width="5.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="322.6" y="494.0"></text>
</g>
<g>
<title>__generic_file_write_iter (2 samples, 0.47%)</title><rect x="319.6" y="467.0" width="5.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="322.6" y="478.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.24%)</title><rect x="319.6" y="451.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="322.6" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.24%)</title><rect x="319.6" y="435.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="322.6" y="446.0"></text>
</g>
<g>
<title>ext4_da_write_begin	[ext4] (1 samples, 0.24%)</title><rect x="319.6" y="419.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="322.6" y="430.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.24%)</title><rect x="319.6" y="403.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="322.6" y="414.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.24%)</title><rect x="319.6" y="387.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="322.6" y="398.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.24%)</title><rect x="319.6" y="371.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="322.6" y="382.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (1 samples, 0.24%)</title><rect x="319.6" y="355.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="322.6" y="366.0"></text>
</g>
<g>
<title>__radix_tree_lookup (1 samples, 0.24%)</title><rect x="319.6" y="339.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="322.6" y="350.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.24%)</title><rect x="322.4" y="451.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="325.4" y="462.0"></text>
</g>
<g>
<title>ext4_da_write_end	[ext4] (1 samples, 0.24%)</title><rect x="322.4" y="435.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="325.4" y="446.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.47%)</title><rect x="325.2" y="563.0" width="5.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="328.2" y="574.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.47%)</title><rect x="325.2" y="547.0" width="5.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="328.2" y="558.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.47%)</title><rect x="325.2" y="531.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="328.2" y="542.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.47%)</title><rect x="325.2" y="515.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="328.2" y="526.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (2 samples, 0.47%)</title><rect x="325.2" y="499.0" width="5.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="328.2" y="510.0"></text>
</g>
<g>
<title>__generic_file_write_iter (2 samples, 0.47%)</title><rect x="325.2" y="483.0" width="5.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="328.2" y="494.0"></text>
</g>
<g>
<title>generic_perform_write (2 samples, 0.47%)</title><rect x="325.2" y="467.0" width="5.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="328.2" y="478.0"></text>
</g>
<g>
<title>ext4_da_write_end	[ext4] (1 samples, 0.24%)</title><rect x="325.2" y="451.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="328.2" y="462.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.24%)</title><rect x="325.2" y="435.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="328.2" y="446.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.24%)</title><rect x="325.2" y="419.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="328.2" y="430.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.24%)</title><rect x="325.2" y="403.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="328.2" y="414.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (1 samples, 0.24%)</title><rect x="325.2" y="387.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="328.2" y="398.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.24%)</title><rect x="325.2" y="371.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="328.2" y="382.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access	[ext4] (1 samples, 0.24%)</title><rect x="325.2" y="355.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="328.2" y="366.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access	[jbd2] (1 samples, 0.24%)</title><rect x="325.2" y="339.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="328.2" y="350.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty	[ext4] (1 samples, 0.24%)</title><rect x="325.2" y="323.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="328.2" y="334.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.24%)</title><rect x="328.0" y="451.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="331.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.24%)</title><rect x="330.8" y="643.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="333.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (11 samples, 2.60%)</title><rect x="333.6" y="707.0" width="30.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="336.6" y="718.0">ro..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (11 samples, 2.60%)</title><rect x="333.6" y="691.0" width="30.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="336.6" y="702.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (11 samples, 2.60%)</title><rect x="333.6" y="675.0" width="30.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="336.6" y="686.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (11 samples, 2.60%)</title><rect x="333.6" y="659.0" width="30.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="336.6" y="670.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (11 samples, 2.60%)</title><rect x="333.6" y="643.0" width="30.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="336.6" y="654.0">ro..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (10 samples, 2.36%)</title><rect x="336.4" y="627.0" width="27.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="339.4" y="638.0">b..</text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (8 samples, 1.89%)</title><rect x="336.4" y="611.0" width="22.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="339.4" y="622.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (6 samples, 1.42%)</title><rect x="336.4" y="595.0" width="16.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="339.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 1.42%)</title><rect x="336.4" y="579.0" width="16.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="339.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (6 samples, 1.42%)</title><rect x="336.4" y="563.0" width="16.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="339.4" y="574.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.47%)</title><rect x="336.4" y="547.0" width="5.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="339.4" y="558.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.47%)</title><rect x="336.4" y="531.0" width="5.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="339.4" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.47%)</title><rect x="336.4" y="515.0" width="5.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="339.4" y="526.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.24%)</title><rect x="336.4" y="499.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="339.4" y="510.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::get_object() (1 samples, 0.24%)</title><rect x="336.4" y="483.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="339.4" y="494.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.24%)</title><rect x="339.2" y="499.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="342.2" y="510.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.24%)</title><rect x="339.2" y="483.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="342.2" y="494.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (4 samples, 0.95%)</title><rect x="342.0" y="547.0" width="11.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="345.0" y="558.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (4 samples, 0.95%)</title><rect x="342.0" y="531.0" width="11.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="345.0" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (4 samples, 0.95%)</title><rect x="342.0" y="515.0" width="11.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="345.0" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.47%)</title><rect x="344.8" y="499.0" width="5.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="347.8" y="510.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.24%)</title><rect x="344.8" y="483.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="347.8" y="494.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.24%)</title><rect x="347.5" y="483.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="350.5" y="494.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.24%)</title><rect x="350.3" y="499.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="353.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.47%)</title><rect x="353.1" y="595.0" width="5.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="356.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.47%)</title><rect x="353.1" y="579.0" width="5.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="356.1" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="353.1" y="563.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="356.1" y="574.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.24%)</title><rect x="353.1" y="547.0" width="2.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="356.1" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.24%)</title><rect x="353.1" y="531.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="356.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.24%)</title><rect x="355.9" y="563.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="358.9" y="574.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.24%)</title><rect x="355.9" y="547.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="358.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.24%)</title><rect x="358.7" y="611.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="361.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.24%)</title><rect x="358.7" y="595.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="361.7" y="606.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="358.7" y="579.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="361.7" y="590.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.24%)</title><rect x="358.7" y="563.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="361.7" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.24%)</title><rect x="358.7" y="547.0" width="2.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="361.7" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.24%)</title><rect x="358.7" y="531.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="361.7" y="542.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.24%)</title><rect x="358.7" y="515.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="361.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.24%)</title><rect x="361.5" y="611.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="364.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (6 samples, 1.42%)</title><rect x="364.3" y="707.0" width="16.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="367.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="364.3" y="691.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="367.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (5 samples, 1.18%)</title><rect x="367.1" y="691.0" width="13.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="370.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 1.18%)</title><rect x="367.1" y="675.0" width="13.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="370.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (5 samples, 1.18%)</title><rect x="367.1" y="659.0" width="13.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="370.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (4 samples, 0.95%)</title><rect x="367.1" y="643.0" width="11.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="370.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (4 samples, 0.95%)</title><rect x="367.1" y="627.0" width="11.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="370.1" y="638.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.95%)</title><rect x="367.1" y="611.0" width="11.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="370.1" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (4 samples, 0.95%)</title><rect x="367.1" y="595.0" width="11.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="370.1" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (4 samples, 0.95%)</title><rect x="367.1" y="579.0" width="11.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="370.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.95%)</title><rect x="367.1" y="563.0" width="11.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="370.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.95%)</title><rect x="367.1" y="547.0" width="11.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="370.1" y="558.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.71%)</title><rect x="367.1" y="531.0" width="8.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="370.1" y="542.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (3 samples, 0.71%)</title><rect x="367.1" y="515.0" width="8.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="370.1" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.24%)</title><rect x="367.1" y="499.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="370.1" y="510.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.47%)</title><rect x="369.9" y="499.0" width="5.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="372.9" y="510.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.24%)</title><rect x="372.6" y="483.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="375.6" y="494.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.24%)</title><rect x="372.6" y="467.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="375.6" y="478.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.24%)</title><rect x="375.4" y="531.0" width="2.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="378.4" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="375.4" y="515.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="378.4" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="375.4" y="499.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="378.4" y="510.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.24%)</title><rect x="375.4" y="483.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="378.4" y="494.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="375.4" y="467.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="378.4" y="478.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.24%)</title><rect x="375.4" y="451.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="378.4" y="462.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.24%)</title><rect x="375.4" y="435.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="378.4" y="446.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.24%)</title><rect x="375.4" y="419.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="378.4" y="430.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.24%)</title><rect x="375.4" y="403.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="378.4" y="414.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.24%)</title><rect x="375.4" y="387.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="378.4" y="398.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.24%)</title><rect x="375.4" y="371.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="378.4" y="382.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (1 samples, 0.24%)</title><rect x="378.2" y="643.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="381.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (8 samples, 1.89%)</title><rect x="381.0" y="707.0" width="22.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="384.0" y="718.0">r..</text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.24%)</title><rect x="397.8" y="691.0" width="2.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="400.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="397.8" y="675.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="400.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="397.8" y="659.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="400.8" y="670.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="397.8" y="643.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="400.8" y="654.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.24%)</title><rect x="397.8" y="627.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="400.8" y="638.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.24%)</title><rect x="397.8" y="611.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="400.8" y="622.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.24%)</title><rect x="397.8" y="595.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="400.8" y="606.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.24%)</title><rect x="397.8" y="579.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="400.8" y="590.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.24%)</title><rect x="397.8" y="563.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="400.8" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.24%)</title><rect x="400.5" y="691.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="403.5" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="400.5" y="675.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="403.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="400.5" y="659.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="403.5" y="670.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.24%)</title><rect x="400.5" y="643.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="403.5" y="654.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="400.5" y="627.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="403.5" y="638.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.24%)</title><rect x="400.5" y="611.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="403.5" y="622.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.24%)</title><rect x="400.5" y="595.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="403.5" y="606.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.24%)</title><rect x="400.5" y="579.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="403.5" y="590.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.24%)</title><rect x="400.5" y="563.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="403.5" y="574.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.24%)</title><rect x="400.5" y="547.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="403.5" y="558.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.24%)</title><rect x="400.5" y="531.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="403.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.47%)</title><rect x="403.3" y="707.0" width="5.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="406.3" y="718.0"></text>
</g>
<g>
<title>__sched_yield (1 samples, 0.24%)</title><rect x="403.3" y="691.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="406.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.24%)</title><rect x="406.1" y="691.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="409.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (1 samples, 0.24%)</title><rect x="408.9" y="723.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="411.9" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (2 samples, 0.47%)</title><rect x="411.7" y="819.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="414.7" y="830.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (8 samples, 1.89%)</title><rect x="417.3" y="819.0" width="22.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.3" y="830.0">o..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (8 samples, 1.89%)</title><rect x="417.3" y="803.0" width="22.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="420.3" y="814.0">o..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (8 samples, 1.89%)</title><rect x="417.3" y="787.0" width="22.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.3" y="798.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (8 samples, 1.89%)</title><rect x="417.3" y="771.0" width="22.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.3" y="782.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (8 samples, 1.89%)</title><rect x="417.3" y="755.0" width="22.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.3" y="766.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (7 samples, 1.65%)</title><rect x="420.1" y="739.0" width="19.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="423.1" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.24%)</title><rect x="422.9" y="723.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="425.9" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.24%)</title><rect x="425.7" y="723.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="428.7" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.47%)</title><rect x="428.4" y="723.0" width="5.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="431.4" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.24%)</title><rect x="428.4" y="707.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="431.4" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.24%)</title><rect x="431.2" y="707.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="434.2" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.24%)</title><rect x="431.2" y="691.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="434.2" y="702.0"></text>
</g>
<g>
<title>_init (1 samples, 0.24%)</title><rect x="431.2" y="675.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="434.2" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.47%)</title><rect x="434.0" y="723.0" width="5.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="437.0" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.24%)</title><rect x="436.8" y="707.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="439.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (1 samples, 0.24%)</title><rect x="439.6" y="851.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.6" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.24%)</title><rect x="439.6" y="835.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="442.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.24%)</title><rect x="442.4" y="899.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="445.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.24%)</title><rect x="442.4" y="883.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="445.4" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.24%)</title><rect x="442.4" y="867.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="445.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.24%)</title><rect x="445.2" y="931.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="448.2" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.71%)</title><rect x="448.0" y="931.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="451.0" y="942.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.24%)</title><rect x="453.5" y="915.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="456.5" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.24%)</title><rect x="453.5" y="899.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.95%)</title><rect x="456.3" y="947.0" width="11.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="459.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.95%)</title><rect x="456.3" y="931.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.3" y="942.0"></text>
</g>
<g>
<title>__libc_recv (4 samples, 0.95%)</title><rect x="456.3" y="915.0" width="11.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="459.3" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (4 samples, 0.95%)</title><rect x="456.3" y="899.0" width="11.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="459.3" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.95%)</title><rect x="456.3" y="883.0" width="11.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="459.3" y="894.0"></text>
</g>
<g>
<title>sys_epoll_wait (3 samples, 0.71%)</title><rect x="459.1" y="867.0" width="8.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="462.1" y="878.0"></text>
</g>
<g>
<title>default_wake_function (3 samples, 0.71%)</title><rect x="459.1" y="851.0" width="8.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="462.1" y="862.0"></text>
</g>
<g>
<title>SYSC_recvfrom (3 samples, 0.71%)</title><rect x="459.1" y="835.0" width="8.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="462.1" y="846.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.24%)</title><rect x="459.1" y="819.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="462.1" y="830.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.47%)</title><rect x="461.9" y="819.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="464.9" y="830.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.47%)</title><rect x="461.9" y="803.0" width="5.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="464.9" y="814.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.47%)</title><rect x="461.9" y="787.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="464.9" y="798.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=2810] (80 samples, 18.91%)</title><rect x="467.5" y="1011.0" width="223.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="470.5" y="1022.0">[NIO Selector #2 tid=2810]</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.24%)</title><rect x="467.5" y="995.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="470.5" y="1006.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.24%)</title><rect x="467.5" y="979.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="470.5" y="990.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.24%)</title><rect x="467.5" y="963.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="470.5" y="974.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="467.5" y="947.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="470.5" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="467.5" y="931.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="470.5" y="942.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="467.5" y="915.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="470.5" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.24%)</title><rect x="467.5" y="899.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="470.5" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.24%)</title><rect x="467.5" y="883.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="470.5" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.24%)</title><rect x="467.5" y="867.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="470.5" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.24%)</title><rect x="467.5" y="851.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="470.5" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="467.5" y="835.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="470.5" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.24%)</title><rect x="467.5" y="819.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="470.5" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.24%)</title><rect x="467.5" y="803.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="470.5" y="814.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.24%)</title><rect x="467.5" y="787.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="470.5" y="798.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (1 samples, 0.24%)</title><rect x="467.5" y="771.0" width="2.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="470.5" y="782.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (1 samples, 0.24%)</title><rect x="467.5" y="755.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="470.5" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.24%)</title><rect x="467.5" y="739.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="470.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.24%)</title><rect x="467.5" y="723.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="470.5" y="734.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="467.5" y="707.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="470.5" y="718.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.24%)</title><rect x="467.5" y="691.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="470.5" y="702.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.24%)</title><rect x="467.5" y="675.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="470.5" y="686.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.24%)</title><rect x="467.5" y="659.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="470.5" y="670.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.24%)</title><rect x="467.5" y="643.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="470.5" y="654.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.47%)</title><rect x="470.3" y="995.0" width="5.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="473.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (77 samples, 18.20%)</title><rect x="475.9" y="995.0" width="214.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.9" y="1006.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.95%)</title><rect x="481.4" y="979.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.4" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.24%)</title><rect x="481.4" y="963.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.4" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.24%)</title><rect x="481.4" y="947.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.71%)</title><rect x="484.2" y="963.0" width="8.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.2" y="974.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.47%)</title><rect x="487.0" y="947.0" width="5.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="490.0" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="489.8" y="931.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="492.8" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="489.8" y="915.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="492.8" y="926.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.24%)</title><rect x="489.8" y="899.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="492.8" y="910.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.24%)</title><rect x="489.8" y="883.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="492.8" y="894.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.24%)</title><rect x="489.8" y="867.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="492.8" y="878.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (1 samples, 0.24%)</title><rect x="489.8" y="851.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="492.8" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.24%)</title><rect x="489.8" y="835.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="492.8" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (71 samples, 16.78%)</title><rect x="492.6" y="979.0" width="198.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.6" y="990.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (71 samples, 16.78%)</title><rect x="492.6" y="963.0" width="198.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.6" y="974.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.24%)</title><rect x="492.6" y="947.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="495.6" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.24%)</title><rect x="492.6" y="931.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="495.6" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.24%)</title><rect x="492.6" y="915.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="495.6" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.24%)</title><rect x="492.6" y="899.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="495.6" y="910.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.24%)</title><rect x="492.6" y="883.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="495.6" y="894.0"></text>
</g>
<g>
<title>ConstantPool::impl_name_ref_at(int, bool) (1 samples, 0.24%)</title><rect x="492.6" y="867.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="495.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (68 samples, 16.08%)</title><rect x="495.4" y="947.0" width="189.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="498.4" y="958.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (66 samples, 15.60%)</title><rect x="495.4" y="931.0" width="184.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.4" y="942.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (66 samples, 15.60%)</title><rect x="495.4" y="915.0" width="184.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="498.4" y="926.0">one/nio/http/HttpServer...</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (66 samples, 15.60%)</title><rect x="495.4" y="899.0" width="184.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="498.4" y="910.0">RequestHandler0_entity.h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (12 samples, 2.84%)</title><rect x="495.4" y="883.0" width="33.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="498.4" y="894.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (12 samples, 2.84%)</title><rect x="495.4" y="867.0" width="33.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="498.4" y="878.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.24%)</title><rect x="498.2" y="851.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.24%)</title><rect x="498.2" y="835.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.24%)</title><rect x="498.2" y="819.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.24%)</title><rect x="498.2" y="803.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.24%)</title><rect x="498.2" y="787.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="501.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.24%)</title><rect x="498.2" y="771.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 2.36%)</title><rect x="501.0" y="851.0" width="27.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="504.0" y="862.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 2.36%)</title><rect x="501.0" y="835.0" width="27.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="504.0" y="846.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (9 samples, 2.13%)</title><rect x="503.8" y="819.0" width="25.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="506.8" y="830.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (8 samples, 1.89%)</title><rect x="506.5" y="803.0" width="22.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.5" y="814.0">o..</text>
</g>
<g>
<title>__send (8 samples, 1.89%)</title><rect x="506.5" y="787.0" width="22.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="509.5" y="798.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (8 samples, 1.89%)</title><rect x="506.5" y="771.0" width="22.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="509.5" y="782.0">e..</text>
</g>
<g>
<title>do_syscall_64 (8 samples, 1.89%)</title><rect x="506.5" y="755.0" width="22.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="509.5" y="766.0">d..</text>
</g>
<g>
<title>sys_write (8 samples, 1.89%)</title><rect x="506.5" y="739.0" width="22.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="509.5" y="750.0">s..</text>
</g>
<g>
<title>sys_futex (4 samples, 0.95%)</title><rect x="506.5" y="723.0" width="11.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="509.5" y="734.0"></text>
</g>
<g>
<title>SYSC_sendto (4 samples, 0.95%)</title><rect x="506.5" y="707.0" width="11.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="509.5" y="718.0"></text>
</g>
<g>
<title>sock_sendmsg (4 samples, 0.95%)</title><rect x="506.5" y="691.0" width="11.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="509.5" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 0.95%)</title><rect x="506.5" y="675.0" width="11.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="509.5" y="686.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.24%)</title><rect x="509.3" y="659.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="512.3" y="670.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.24%)</title><rect x="509.3" y="643.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="512.3" y="654.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.24%)</title><rect x="509.3" y="627.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="512.3" y="638.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.24%)</title><rect x="509.3" y="611.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="512.3" y="622.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.24%)</title><rect x="509.3" y="595.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="512.3" y="606.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.24%)</title><rect x="509.3" y="579.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="512.3" y="590.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.24%)</title><rect x="509.3" y="563.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="512.3" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.24%)</title><rect x="509.3" y="547.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="512.3" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.24%)</title><rect x="509.3" y="531.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="512.3" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.24%)</title><rect x="509.3" y="515.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="512.3" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.24%)</title><rect x="509.3" y="499.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="512.3" y="510.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.24%)</title><rect x="509.3" y="483.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="512.3" y="494.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.24%)</title><rect x="512.1" y="659.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="515.1" y="670.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.24%)</title><rect x="512.1" y="643.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="515.1" y="654.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.24%)</title><rect x="512.1" y="627.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="515.1" y="638.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.24%)</title><rect x="512.1" y="611.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="515.1" y="622.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.24%)</title><rect x="512.1" y="595.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="515.1" y="606.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.24%)</title><rect x="512.1" y="579.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="515.1" y="590.0"></text>
</g>
<g>
<title>skb_put (1 samples, 0.24%)</title><rect x="514.9" y="659.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="517.9" y="670.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.95%)</title><rect x="517.7" y="723.0" width="11.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="520.7" y="734.0"></text>
</g>
<g>
<title>SYSC_sendto (4 samples, 0.95%)</title><rect x="517.7" y="707.0" width="11.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="520.7" y="718.0"></text>
</g>
<g>
<title>sock_sendmsg (4 samples, 0.95%)</title><rect x="517.7" y="691.0" width="11.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="520.7" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 0.95%)</title><rect x="517.7" y="675.0" width="11.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="520.7" y="686.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.24%)</title><rect x="517.7" y="659.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="520.7" y="670.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.24%)</title><rect x="517.7" y="643.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="520.7" y="654.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.24%)</title><rect x="517.7" y="627.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="520.7" y="638.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.24%)</title><rect x="517.7" y="611.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="520.7" y="622.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.24%)</title><rect x="517.7" y="595.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="520.7" y="606.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.24%)</title><rect x="517.7" y="579.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="520.7" y="590.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.24%)</title><rect x="517.7" y="563.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="520.7" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.24%)</title><rect x="517.7" y="547.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="520.7" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.24%)</title><rect x="517.7" y="531.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="520.7" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.24%)</title><rect x="517.7" y="515.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="520.7" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.24%)</title><rect x="517.7" y="499.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="520.7" y="510.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.24%)</title><rect x="517.7" y="483.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="520.7" y="494.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.24%)</title><rect x="517.7" y="467.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="520.7" y="478.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.24%)</title><rect x="517.7" y="451.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="520.7" y="462.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.24%)</title><rect x="517.7" y="435.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="520.7" y="446.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.24%)</title><rect x="517.7" y="419.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="520.7" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.24%)</title><rect x="517.7" y="403.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="520.7" y="414.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.24%)</title><rect x="517.7" y="387.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="520.7" y="398.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.24%)</title><rect x="517.7" y="371.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="520.7" y="382.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.24%)</title><rect x="517.7" y="355.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="520.7" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.24%)</title><rect x="517.7" y="339.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="520.7" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.24%)</title><rect x="517.7" y="323.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="520.7" y="334.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.24%)</title><rect x="517.7" y="307.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="520.7" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.24%)</title><rect x="517.7" y="291.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="520.7" y="302.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.24%)</title><rect x="517.7" y="275.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="520.7" y="286.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.24%)</title><rect x="517.7" y="259.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="520.7" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.24%)</title><rect x="517.7" y="243.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="520.7" y="254.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.24%)</title><rect x="517.7" y="227.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="520.7" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.24%)</title><rect x="517.7" y="211.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="520.7" y="222.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.24%)</title><rect x="517.7" y="195.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="520.7" y="206.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.47%)</title><rect x="520.5" y="659.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="523.5" y="670.0"></text>
</g>
<g>
<title>__release_sock (2 samples, 0.47%)</title><rect x="520.5" y="643.0" width="5.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="523.5" y="654.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.47%)</title><rect x="520.5" y="627.0" width="5.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="523.5" y="638.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.47%)</title><rect x="520.5" y="611.0" width="5.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="523.5" y="622.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.47%)</title><rect x="520.5" y="595.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="523.5" y="606.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.24%)</title><rect x="520.5" y="579.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="523.5" y="590.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.24%)</title><rect x="523.3" y="579.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="526.3" y="590.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.24%)</title><rect x="523.3" y="563.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="526.3" y="574.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.24%)</title><rect x="523.3" y="547.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="526.3" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.24%)</title><rect x="526.1" y="659.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="529.1" y="670.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.24%)</title><rect x="526.1" y="643.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="529.1" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.24%)</title><rect x="526.1" y="627.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="529.1" y="638.0"></text>
</g>
<g>
<title>ext4_da_write_end	[ext4] (1 samples, 0.24%)</title><rect x="526.1" y="611.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="529.1" y="622.0"></text>
</g>
<g>
<title>__ext4_journal_stop	[ext4] (1 samples, 0.24%)</title><rect x="526.1" y="595.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="529.1" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.24%)</title><rect x="526.1" y="579.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="529.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.24%)</title><rect x="528.9" y="883.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.24%)</title><rect x="528.9" y="867.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.24%)</title><rect x="528.9" y="851.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.9" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/MyHttpServer.entity (53 samples, 12.53%)</title><rect x="531.7" y="883.0" width="147.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.7" y="894.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.24%)</title><rect x="531.7" y="867.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="534.7" y="878.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.24%)</title><rect x="531.7" y="851.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.7" y="862.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.24%)</title><rect x="531.7" y="835.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.7" y="846.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.24%)</title><rect x="531.7" y="819.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="534.7" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.24%)</title><rect x="531.7" y="803.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="534.7" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.24%)</title><rect x="531.7" y="787.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="534.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (52 samples, 12.29%)</title><rect x="534.4" y="867.0" width="145.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="537.4" y="878.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (51 samples, 12.06%)</title><rect x="534.4" y="851.0" width="142.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.4" y="862.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (51 samples, 12.06%)</title><rect x="534.4" y="835.0" width="142.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="537.4" y="846.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (41 samples, 9.69%)</title><rect x="534.4" y="819.0" width="114.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="537.4" y="830.0">Java_org_rocks..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (41 samples, 9.69%)</title><rect x="534.4" y="803.0" width="114.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="537.4" y="814.0">rocksdb_put_he..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (41 samples, 9.69%)</title><rect x="534.4" y="787.0" width="114.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="537.4" y="798.0">rocksdb::DB::P..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (40 samples, 9.46%)</title><rect x="537.2" y="771.0" width="111.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="540.2" y="782.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (40 samples, 9.46%)</title><rect x="537.2" y="755.0" width="111.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="540.2" y="766.0">rocksdb::DB::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (37 samples, 8.75%)</title><rect x="537.2" y="739.0" width="103.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="540.2" y="750.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (37 samples, 8.75%)</title><rect x="537.2" y="723.0" width="103.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="540.2" y="734.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (10 samples, 2.36%)</title><rect x="537.2" y="707.0" width="27.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="540.2" y="718.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (10 samples, 2.36%)</title><rect x="537.2" y="691.0" width="27.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="540.2" y="702.0">r..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (10 samples, 2.36%)</title><rect x="537.2" y="675.0" width="27.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="540.2" y="686.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (2 samples, 0.47%)</title><rect x="537.2" y="659.0" width="5.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="540.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (8 samples, 1.89%)</title><rect x="542.8" y="659.0" width="22.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="545.8" y="670.0">r..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (7 samples, 1.65%)</title><rect x="545.6" y="643.0" width="19.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="548.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (7 samples, 1.65%)</title><rect x="545.6" y="627.0" width="19.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="548.6" y="638.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (7 samples, 1.65%)</title><rect x="545.6" y="611.0" width="19.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="548.6" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (7 samples, 1.65%)</title><rect x="545.6" y="595.0" width="19.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="548.6" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.65%)</title><rect x="545.6" y="579.0" width="19.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="548.6" y="590.0"></text>
</g>
<g>
<title>sys_epoll_wait (6 samples, 1.42%)</title><rect x="545.6" y="563.0" width="16.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="548.6" y="574.0"></text>
</g>
<g>
<title>sys_write (6 samples, 1.42%)</title><rect x="545.6" y="547.0" width="16.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="548.6" y="558.0"></text>
</g>
<g>
<title>vfs_write (6 samples, 1.42%)</title><rect x="545.6" y="531.0" width="16.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="548.6" y="542.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.24%)</title><rect x="545.6" y="515.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="548.6" y="526.0"></text>
</g>
<g>
<title>new_sync_write (5 samples, 1.18%)</title><rect x="548.4" y="515.0" width="13.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="551.4" y="526.0"></text>
</g>
<g>
<title>inet_recvmsg (5 samples, 1.18%)</title><rect x="548.4" y="499.0" width="13.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="551.4" y="510.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (5 samples, 1.18%)</title><rect x="548.4" y="483.0" width="13.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="551.4" y="494.0"></text>
</g>
<g>
<title>__generic_file_write_iter (3 samples, 0.71%)</title><rect x="548.4" y="467.0" width="8.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="551.4" y="478.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.24%)</title><rect x="548.4" y="451.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="551.4" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.24%)</title><rect x="548.4" y="435.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="551.4" y="446.0"></text>
</g>
<g>
<title>ext4_da_write_begin	[ext4] (1 samples, 0.24%)</title><rect x="548.4" y="419.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="551.4" y="430.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.24%)</title><rect x="548.4" y="403.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="551.4" y="414.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.24%)</title><rect x="548.4" y="387.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="551.4" y="398.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.24%)</title><rect x="548.4" y="371.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="551.4" y="382.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (1 samples, 0.24%)</title><rect x="548.4" y="355.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="551.4" y="366.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.24%)</title><rect x="551.2" y="451.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="554.2" y="462.0"></text>
</g>
<g>
<title>ext4_da_write_end	[ext4] (1 samples, 0.24%)</title><rect x="551.2" y="435.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="554.2" y="446.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.24%)</title><rect x="551.2" y="419.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="554.2" y="430.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.24%)</title><rect x="551.2" y="403.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="554.2" y="414.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.24%)</title><rect x="551.2" y="387.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="554.2" y="398.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (1 samples, 0.24%)</title><rect x="551.2" y="371.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="554.2" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.24%)</title><rect x="551.2" y="355.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="554.2" y="366.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access	[ext4] (1 samples, 0.24%)</title><rect x="551.2" y="339.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="554.2" y="350.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty	[ext4] (1 samples, 0.24%)</title><rect x="551.2" y="323.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="554.2" y="334.0"></text>
</g>
<g>
<title>ext4_inode_csum_set	[ext4] (1 samples, 0.24%)</title><rect x="551.2" y="307.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="554.2" y="318.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.61	[ext4] (1 samples, 0.24%)</title><rect x="551.2" y="291.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="554.2" y="302.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.24%)</title><rect x="551.2" y="275.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="554.2" y="286.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update	[crc32c_intel] (1 samples, 0.24%)</title><rect x="551.2" y="259.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="554.2" y="270.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.24%)</title><rect x="554.0" y="451.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="557.0" y="462.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.24%)</title><rect x="554.0" y="435.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="557.0" y="446.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.24%)</title><rect x="554.0" y="419.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="557.0" y="430.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.24%)</title><rect x="554.0" y="403.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="557.0" y="414.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.24%)</title><rect x="554.0" y="387.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="557.0" y="398.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.24%)</title><rect x="554.0" y="371.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="557.0" y="382.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (1 samples, 0.24%)</title><rect x="554.0" y="355.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="557.0" y="366.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.24%)</title><rect x="554.0" y="339.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="557.0" y="350.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access	[ext4] (1 samples, 0.24%)</title><rect x="554.0" y="323.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="557.0" y="334.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty	[ext4] (1 samples, 0.24%)</title><rect x="554.0" y="307.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="557.0" y="318.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.24%)</title><rect x="556.8" y="467.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="559.8" y="478.0"></text>
</g>
<g>
<title>up_write (1 samples, 0.24%)</title><rect x="559.6" y="467.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="562.6" y="478.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.24%)</title><rect x="562.3" y="563.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="565.3" y="574.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.24%)</title><rect x="562.3" y="547.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="565.3" y="558.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.24%)</title><rect x="562.3" y="531.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="565.3" y="542.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (1 samples, 0.24%)</title><rect x="562.3" y="515.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="565.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (13 samples, 3.07%)</title><rect x="565.1" y="707.0" width="36.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="568.1" y="718.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (12 samples, 2.84%)</title><rect x="565.1" y="691.0" width="33.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="568.1" y="702.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 2.84%)</title><rect x="565.1" y="675.0" width="33.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="568.1" y="686.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (12 samples, 2.84%)</title><rect x="565.1" y="659.0" width="33.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="568.1" y="670.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (12 samples, 2.84%)</title><rect x="565.1" y="643.0" width="33.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="568.1" y="654.0">ro..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (12 samples, 2.84%)</title><rect x="565.1" y="627.0" width="33.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="568.1" y="638.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (8 samples, 1.89%)</title><rect x="565.1" y="611.0" width="22.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="568.1" y="622.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (5 samples, 1.18%)</title><rect x="565.1" y="595.0" width="14.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="568.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 1.18%)</title><rect x="565.1" y="579.0" width="14.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="568.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 1.18%)</title><rect x="565.1" y="563.0" width="14.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="568.1" y="574.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.47%)</title><rect x="565.1" y="547.0" width="5.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="568.1" y="558.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.47%)</title><rect x="565.1" y="531.0" width="5.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="568.1" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.24%)</title><rect x="567.9" y="515.0" width="2.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="570.9" y="526.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.47%)</title><rect x="570.7" y="547.0" width="5.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="573.7" y="558.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.47%)</title><rect x="570.7" y="531.0" width="5.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="573.7" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.24%)</title><rect x="570.7" y="515.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="573.7" y="526.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.24%)</title><rect x="573.5" y="515.0" width="2.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="576.5" y="526.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.24%)</title><rect x="576.3" y="547.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="579.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.71%)</title><rect x="579.1" y="595.0" width="8.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="582.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.71%)</title><rect x="579.1" y="579.0" width="8.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="582.1" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="579.1" y="563.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="582.1" y="574.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.24%)</title><rect x="579.1" y="547.0" width="2.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="582.1" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.24%)</title><rect x="579.1" y="531.0" width="2.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="582.1" y="542.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.24%)</title><rect x="579.1" y="515.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="582.1" y="526.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="581.9" y="563.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="584.9" y="574.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.24%)</title><rect x="581.9" y="547.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="584.9" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.24%)</title><rect x="581.9" y="531.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="584.9" y="542.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.24%)</title><rect x="581.9" y="515.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="584.9" y="526.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.24%)</title><rect x="581.9" y="499.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="584.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.24%)</title><rect x="584.7" y="563.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="587.7" y="574.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.24%)</title><rect x="584.7" y="547.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="587.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (4 samples, 0.95%)</title><rect x="587.4" y="611.0" width="11.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="590.4" y="622.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="587.4" y="595.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="590.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.71%)</title><rect x="590.2" y="595.0" width="8.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="593.2" y="606.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.47%)</title><rect x="590.2" y="579.0" width="5.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="593.2" y="590.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.47%)</title><rect x="590.2" y="563.0" width="5.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="593.2" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.24%)</title><rect x="590.2" y="547.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="593.2" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.24%)</title><rect x="593.0" y="547.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="596.0" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.24%)</title><rect x="593.0" y="531.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="596.0" y="542.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.24%)</title><rect x="593.0" y="515.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="596.0" y="526.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.24%)</title><rect x="595.8" y="579.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="598.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.24%)</title><rect x="598.6" y="691.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="601.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (6 samples, 1.42%)</title><rect x="601.4" y="707.0" width="16.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="604.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 1.42%)</title><rect x="601.4" y="691.0" width="16.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="604.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 1.42%)</title><rect x="601.4" y="675.0" width="16.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="604.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.24%)</title><rect x="601.4" y="659.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="604.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (5 samples, 1.18%)</title><rect x="604.2" y="659.0" width="13.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="607.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (5 samples, 1.18%)</title><rect x="604.2" y="643.0" width="13.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="607.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (5 samples, 1.18%)</title><rect x="604.2" y="627.0" width="13.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="607.2" y="638.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 1.18%)</title><rect x="604.2" y="611.0" width="13.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="607.2" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (5 samples, 1.18%)</title><rect x="604.2" y="595.0" width="13.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="607.2" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (4 samples, 0.95%)</title><rect x="607.0" y="579.0" width="11.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="610.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.95%)</title><rect x="607.0" y="563.0" width="11.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="610.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.95%)</title><rect x="607.0" y="547.0" width="11.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="610.0" y="558.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="607.0" y="531.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="610.0" y="542.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.24%)</title><rect x="607.0" y="515.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="610.0" y="526.0"></text>
</g>
<g>
<title>__lll_lock_wait (2 samples, 0.47%)</title><rect x="609.8" y="531.0" width="5.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="612.8" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.47%)</title><rect x="609.8" y="515.0" width="5.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="612.8" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.47%)</title><rect x="609.8" y="499.0" width="5.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="612.8" y="510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="609.8" y="483.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="612.8" y="494.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.24%)</title><rect x="609.8" y="467.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="612.8" y="478.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.24%)</title><rect x="612.6" y="483.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="615.6" y="494.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="612.6" y="467.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="615.6" y="478.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.24%)</title><rect x="612.6" y="451.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="615.6" y="462.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.24%)</title><rect x="612.6" y="435.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="615.6" y="446.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.24%)</title><rect x="612.6" y="419.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="615.6" y="430.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.24%)</title><rect x="612.6" y="403.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="615.6" y="414.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.24%)</title><rect x="612.6" y="387.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="615.6" y="398.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.24%)</title><rect x="612.6" y="371.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="615.6" y="382.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.24%)</title><rect x="612.6" y="355.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="615.6" y="366.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.24%)</title><rect x="615.3" y="531.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="618.3" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.24%)</title><rect x="615.3" y="515.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="618.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (5 samples, 1.18%)</title><rect x="618.1" y="707.0" width="14.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="621.1" y="718.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.47%)</title><rect x="626.5" y="691.0" width="5.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="629.5" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="629.3" y="675.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="632.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="629.3" y="659.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="632.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.47%)</title><rect x="632.1" y="707.0" width="5.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="635.1" y="718.0"></text>
</g>
<g>
<title>__sched_yield (1 samples, 0.24%)</title><rect x="632.1" y="691.0" width="2.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="635.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.24%)</title><rect x="634.9" y="691.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="637.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (1 samples, 0.24%)</title><rect x="637.7" y="707.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="640.7" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.24%)</title><rect x="637.7" y="691.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="640.7" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="637.7" y="675.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="640.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="637.7" y="659.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="640.7" y="670.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="637.7" y="643.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="640.7" y="654.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.24%)</title><rect x="637.7" y="627.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="640.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.47%)</title><rect x="640.4" y="739.0" width="5.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="643.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.47%)</title><rect x="640.4" y="723.0" width="5.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="643.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="646.0" y="739.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="649.0" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (10 samples, 2.36%)</title><rect x="648.8" y="819.0" width="27.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.8" y="830.0">o..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (10 samples, 2.36%)</title><rect x="648.8" y="803.0" width="27.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.8" y="814.0">o..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (10 samples, 2.36%)</title><rect x="648.8" y="787.0" width="27.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.8" y="798.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (10 samples, 2.36%)</title><rect x="648.8" y="771.0" width="27.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.8" y="782.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (10 samples, 2.36%)</title><rect x="648.8" y="755.0" width="27.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="651.8" y="766.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (9 samples, 2.13%)</title><rect x="648.8" y="739.0" width="25.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="651.8" y="750.0">J..</text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.24%)</title><rect x="648.8" y="723.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="651.8" y="734.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.24%)</title><rect x="651.6" y="723.0" width="2.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="654.6" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (6 samples, 1.42%)</title><rect x="654.4" y="723.0" width="16.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="657.4" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.24%)</title><rect x="654.4" y="707.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="657.4" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.24%)</title><rect x="657.2" y="707.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="660.2" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.95%)</title><rect x="660.0" y="707.0" width="11.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="663.0" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.95%)</title><rect x="660.0" y="691.0" width="11.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="663.0" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.95%)</title><rect x="660.0" y="675.0" width="11.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="663.0" y="686.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.24%)</title><rect x="662.8" y="659.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="665.8" y="670.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.24%)</title><rect x="662.8" y="643.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="665.8" y="654.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.24%)</title><rect x="662.8" y="627.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="665.8" y="638.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.24%)</title><rect x="662.8" y="611.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="665.8" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.24%)</title><rect x="662.8" y="595.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="665.8" y="606.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.24%)</title><rect x="665.6" y="659.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="668.6" y="670.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.24%)</title><rect x="668.3" y="659.0" width="2.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="671.3" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.24%)</title><rect x="671.1" y="723.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="674.1" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.24%)</title><rect x="671.1" y="707.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="674.1" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.24%)</title><rect x="673.9" y="739.0" width="2.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="676.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (1 samples, 0.24%)</title><rect x="676.7" y="851.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.7" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method(JavaThread*) (1 samples, 0.24%)</title><rect x="676.7" y="835.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="679.7" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::reresolve_call_site(JavaThread*, Thread*) (1 samples, 0.24%)</title><rect x="676.7" y="819.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="679.7" y="830.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_method(JavaThread*, Thread*) (1 samples, 0.24%)</title><rect x="676.7" y="803.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="679.7" y="814.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.24%)</title><rect x="676.7" y="787.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="679.7" y="798.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.24%)</title><rect x="676.7" y="771.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="679.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.24%)</title><rect x="679.5" y="931.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="682.5" y="942.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.24%)</title><rect x="679.5" y="915.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="682.5" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.24%)</title><rect x="679.5" y="899.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.5" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.24%)</title><rect x="682.3" y="931.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.3" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.47%)</title><rect x="685.1" y="947.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="688.1" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.47%)</title><rect x="685.1" y="931.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="685.1" y="915.0" width="2.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="688.1" y="926.0"></text>
</g>
<g>
<title>__vsnprintf (1 samples, 0.24%)</title><rect x="685.1" y="899.0" width="2.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="688.1" y="910.0"></text>
</g>
<g>
<title>__strchrnul (1 samples, 0.24%)</title><rect x="685.1" y="883.0" width="2.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="688.1" y="894.0"></text>
</g>
<g>
<title>__libc_recv (1 samples, 0.24%)</title><rect x="687.9" y="915.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="690.9" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="687.9" y="899.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="690.9" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="687.9" y="883.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="690.9" y="894.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.24%)</title><rect x="687.9" y="867.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="690.9" y="878.0"></text>
</g>
<g>
<title>default_wake_function (1 samples, 0.24%)</title><rect x="687.9" y="851.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="690.9" y="862.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.24%)</title><rect x="687.9" y="835.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="690.9" y="846.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.24%)</title><rect x="687.9" y="819.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="690.9" y="830.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.24%)</title><rect x="687.9" y="803.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="690.9" y="814.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.24%)</title><rect x="687.9" y="787.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="690.9" y="798.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=2811] (78 samples, 18.44%)</title><rect x="690.7" y="1011.0" width="217.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="693.7" y="1022.0">[NIO Selector #3 tid=2811]</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.24%)</title><rect x="690.7" y="995.0" width="2.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="693.7" y="1006.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.24%)</title><rect x="690.7" y="979.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="693.7" y="990.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.24%)</title><rect x="690.7" y="963.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="693.7" y="974.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="690.7" y="947.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="693.7" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="690.7" y="931.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="693.7" y="942.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="690.7" y="915.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="693.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.24%)</title><rect x="690.7" y="899.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="693.7" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.24%)</title><rect x="690.7" y="883.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="693.7" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.24%)</title><rect x="690.7" y="867.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="693.7" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.24%)</title><rect x="690.7" y="851.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="693.7" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="690.7" y="835.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="693.7" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.24%)</title><rect x="690.7" y="819.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="693.7" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.24%)</title><rect x="690.7" y="803.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="693.7" y="814.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.24%)</title><rect x="690.7" y="787.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="693.7" y="798.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (1 samples, 0.24%)</title><rect x="690.7" y="771.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="693.7" y="782.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (1 samples, 0.24%)</title><rect x="690.7" y="755.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="693.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.24%)</title><rect x="690.7" y="739.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="693.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.24%)</title><rect x="690.7" y="723.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="693.7" y="734.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="690.7" y="707.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="693.7" y="718.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.24%)</title><rect x="690.7" y="691.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="693.7" y="702.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.24%)</title><rect x="690.7" y="675.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="693.7" y="686.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.24%)</title><rect x="690.7" y="659.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="693.7" y="670.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.24%)</title><rect x="690.7" y="643.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="693.7" y="654.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (77 samples, 18.20%)</title><rect x="693.5" y="995.0" width="214.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="696.5" y="1006.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.24%)</title><rect x="704.6" y="979.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.6" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.24%)</title><rect x="707.4" y="979.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.4" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 1.42%)</title><rect x="710.2" y="979.0" width="16.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.2" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 1.18%)</title><rect x="713.0" y="963.0" width="13.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.0" y="974.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.95%)</title><rect x="715.8" y="947.0" width="11.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="718.8" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.47%)</title><rect x="721.3" y="931.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="724.3" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.47%)</title><rect x="721.3" y="915.0" width="5.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="724.3" y="926.0"></text>
</g>
<g>
<title>sys_epoll_wait (2 samples, 0.47%)</title><rect x="721.3" y="899.0" width="5.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="724.3" y="910.0"></text>
</g>
<g>
<title>default_wake_function (2 samples, 0.47%)</title><rect x="721.3" y="883.0" width="5.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="724.3" y="894.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.47%)</title><rect x="721.3" y="867.0" width="5.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="724.3" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.24%)</title><rect x="721.3" y="851.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="724.3" y="862.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (1 samples, 0.24%)</title><rect x="724.1" y="851.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="727.1" y="862.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.24%)</title><rect x="724.1" y="835.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="727.1" y="846.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.24%)</title><rect x="724.1" y="819.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="727.1" y="830.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.24%)</title><rect x="724.1" y="803.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="727.1" y="814.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.24%)</title><rect x="724.1" y="787.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="727.1" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.24%)</title><rect x="724.1" y="771.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="727.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (65 samples, 15.37%)</title><rect x="726.9" y="979.0" width="181.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="729.9" y="990.0">one/nio/net/Session.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (65 samples, 15.37%)</title><rect x="726.9" y="963.0" width="181.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.9" y="974.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (61 samples, 14.42%)</title><rect x="726.9" y="947.0" width="170.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="729.9" y="958.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (58 samples, 13.71%)</title><rect x="729.7" y="931.0" width="161.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.7" y="942.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (58 samples, 13.71%)</title><rect x="729.7" y="915.0" width="161.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.7" y="926.0">one/nio/http/HttpServ..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (58 samples, 13.71%)</title><rect x="729.7" y="899.0" width="161.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.7" y="910.0">RequestHandler0_entit..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 2.36%)</title><rect x="729.7" y="883.0" width="27.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.7" y="894.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 2.36%)</title><rect x="729.7" y="867.0" width="27.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.7" y="878.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 2.36%)</title><rect x="729.7" y="851.0" width="27.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.7" y="862.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 2.36%)</title><rect x="729.7" y="835.0" width="27.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="732.7" y="846.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10 samples, 2.36%)</title><rect x="729.7" y="819.0" width="27.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="732.7" y="830.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (10 samples, 2.36%)</title><rect x="729.7" y="803.0" width="27.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.7" y="814.0">o..</text>
</g>
<g>
<title>__send (10 samples, 2.36%)</title><rect x="729.7" y="787.0" width="27.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="732.7" y="798.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (10 samples, 2.36%)</title><rect x="729.7" y="771.0" width="27.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="732.7" y="782.0">e..</text>
</g>
<g>
<title>do_syscall_64 (10 samples, 2.36%)</title><rect x="729.7" y="755.0" width="27.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="732.7" y="766.0">d..</text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.24%)</title><rect x="729.7" y="739.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="732.7" y="750.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.24%)</title><rect x="729.7" y="723.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="732.7" y="734.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.24%)</title><rect x="729.7" y="707.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="732.7" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.24%)</title><rect x="729.7" y="691.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="732.7" y="702.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.24%)</title><rect x="729.7" y="675.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="732.7" y="686.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.24%)</title><rect x="729.7" y="659.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="732.7" y="670.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.24%)</title><rect x="729.7" y="643.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="732.7" y="654.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.24%)</title><rect x="729.7" y="627.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="732.7" y="638.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.24%)</title><rect x="729.7" y="611.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="732.7" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.24%)</title><rect x="729.7" y="595.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="732.7" y="606.0"></text>
</g>
<g>
<title>sys_write (9 samples, 2.13%)</title><rect x="732.5" y="739.0" width="25.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="735.5" y="750.0">s..</text>
</g>
<g>
<title>sys_futex (3 samples, 0.71%)</title><rect x="732.5" y="723.0" width="8.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="735.5" y="734.0"></text>
</g>
<g>
<title>SYSC_sendto (3 samples, 0.71%)</title><rect x="732.5" y="707.0" width="8.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="735.5" y="718.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.71%)</title><rect x="732.5" y="691.0" width="8.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="735.5" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (3 samples, 0.71%)</title><rect x="732.5" y="675.0" width="8.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="735.5" y="686.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.71%)</title><rect x="732.5" y="659.0" width="8.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="735.5" y="670.0"></text>
</g>
<g>
<title>tcp_write_xmit (3 samples, 0.71%)</title><rect x="732.5" y="643.0" width="8.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="735.5" y="654.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.71%)</title><rect x="732.5" y="627.0" width="8.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="735.5" y="638.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.71%)</title><rect x="732.5" y="611.0" width="8.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="735.5" y="622.0"></text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.71%)</title><rect x="732.5" y="595.0" width="8.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="735.5" y="606.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.71%)</title><rect x="732.5" y="579.0" width="8.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="735.5" y="590.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.71%)</title><rect x="732.5" y="563.0" width="8.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="735.5" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.71%)</title><rect x="732.5" y="547.0" width="8.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="735.5" y="558.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.24%)</title><rect x="732.5" y="531.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="735.5" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.47%)</title><rect x="735.3" y="531.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="738.3" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.18 (2 samples, 0.47%)</title><rect x="735.3" y="515.0" width="5.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="738.3" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.47%)</title><rect x="735.3" y="499.0" width="5.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="738.3" y="510.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.47%)</title><rect x="735.3" y="483.0" width="5.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="738.3" y="494.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.47%)</title><rect x="735.3" y="467.0" width="5.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="738.3" y="478.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.47%)</title><rect x="735.3" y="451.0" width="5.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="738.3" y="462.0"></text>
</g>
<g>
<title>tcp_write_timer (1 samples, 0.24%)</title><rect x="735.3" y="435.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="738.3" y="446.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.24%)</title><rect x="735.3" y="419.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="738.3" y="430.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.24%)</title><rect x="735.3" y="403.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="738.3" y="414.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.24%)</title><rect x="735.3" y="387.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="738.3" y="398.0"></text>
</g>
<g>
<title>task_tick_fair (1 samples, 0.24%)</title><rect x="735.3" y="371.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="738.3" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.24%)</title><rect x="735.3" y="355.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="738.3" y="366.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.24%)</title><rect x="735.3" y="339.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="738.3" y="350.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.24%)</title><rect x="735.3" y="323.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="738.3" y="334.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.24%)</title><rect x="735.3" y="307.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="738.3" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.24%)</title><rect x="735.3" y="291.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="738.3" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.24%)</title><rect x="735.3" y="275.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="738.3" y="286.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.24%)</title><rect x="735.3" y="259.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="738.3" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.24%)</title><rect x="735.3" y="243.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="738.3" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.24%)</title><rect x="735.3" y="227.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="738.3" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.24%)</title><rect x="735.3" y="211.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="738.3" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.24%)</title><rect x="735.3" y="195.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="738.3" y="206.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.24%)</title><rect x="735.3" y="179.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="738.3" y="190.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.24%)</title><rect x="735.3" y="163.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="738.3" y="174.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.24%)</title><rect x="735.3" y="147.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="738.3" y="158.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.24%)</title><rect x="735.3" y="131.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="738.3" y="142.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.24%)</title><rect x="735.3" y="115.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="738.3" y="126.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.24%)</title><rect x="735.3" y="99.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="738.3" y="110.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.24%)</title><rect x="735.3" y="83.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="738.3" y="94.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.24%)</title><rect x="735.3" y="67.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="738.3" y="78.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.24%)</title><rect x="735.3" y="51.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="738.3" y="62.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.24%)</title><rect x="735.3" y="35.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="738.3" y="46.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.24%)</title><rect x="738.1" y="435.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="741.1" y="446.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.24%)</title><rect x="738.1" y="419.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="741.1" y="430.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.24%)</title><rect x="738.1" y="403.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="741.1" y="414.0"></text>
</g>
<g>
<title>task_tick_fair (1 samples, 0.24%)</title><rect x="738.1" y="387.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="741.1" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.24%)</title><rect x="738.1" y="371.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="741.1" y="382.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.24%)</title><rect x="738.1" y="355.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="741.1" y="366.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.24%)</title><rect x="738.1" y="339.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="741.1" y="350.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.24%)</title><rect x="738.1" y="323.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="741.1" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.24%)</title><rect x="738.1" y="307.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="741.1" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.24%)</title><rect x="738.1" y="291.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="741.1" y="302.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.24%)</title><rect x="738.1" y="275.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="741.1" y="286.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.24%)</title><rect x="738.1" y="259.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="741.1" y="270.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.24%)</title><rect x="738.1" y="243.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="741.1" y="254.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.24%)</title><rect x="738.1" y="227.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="741.1" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.24%)</title><rect x="738.1" y="211.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="741.1" y="222.0"></text>
</g>
<g>
<title>__tcp_send_ack (1 samples, 0.24%)</title><rect x="738.1" y="195.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="741.1" y="206.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.24%)</title><rect x="738.1" y="179.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="741.1" y="190.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.35 (1 samples, 0.24%)</title><rect x="738.1" y="163.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="741.1" y="174.0"></text>
</g>
<g>
<title>ep_poll_callback (1 samples, 0.24%)</title><rect x="738.1" y="147.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="741.1" y="158.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node_trace (1 samples, 0.24%)</title><rect x="738.1" y="131.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="741.1" y="142.0"></text>
</g>
<g>
<title>vfs_write (6 samples, 1.42%)</title><rect x="740.9" y="723.0" width="16.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="743.9" y="734.0"></text>
</g>
<g>
<title>SYSC_sendto (6 samples, 1.42%)</title><rect x="740.9" y="707.0" width="16.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="743.9" y="718.0"></text>
</g>
<g>
<title>sock_sendmsg (6 samples, 1.42%)</title><rect x="740.9" y="691.0" width="16.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="743.9" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (6 samples, 1.42%)</title><rect x="740.9" y="675.0" width="16.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="743.9" y="686.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (5 samples, 1.18%)</title><rect x="740.9" y="659.0" width="13.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="743.9" y="670.0"></text>
</g>
<g>
<title>tcp_write_xmit (5 samples, 1.18%)</title><rect x="740.9" y="643.0" width="13.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="743.9" y="654.0"></text>
</g>
<g>
<title>__ext4_journal_stop	[ext4] (2 samples, 0.47%)</title><rect x="740.9" y="627.0" width="5.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="743.9" y="638.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.47%)</title><rect x="740.9" y="611.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="743.9" y="622.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.24%)</title><rect x="740.9" y="595.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="743.9" y="606.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.24%)</title><rect x="740.9" y="579.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="743.9" y="590.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.24%)</title><rect x="743.7" y="595.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="746.7" y="606.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.71%)</title><rect x="746.5" y="627.0" width="8.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="749.5" y="638.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.71%)</title><rect x="746.5" y="611.0" width="8.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="749.5" y="622.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.24%)</title><rect x="746.5" y="595.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="749.5" y="606.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.47%)</title><rect x="749.2" y="595.0" width="5.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="752.2" y="606.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.47%)</title><rect x="749.2" y="579.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="752.2" y="590.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.47%)</title><rect x="749.2" y="563.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="752.2" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.47%)</title><rect x="749.2" y="547.0" width="5.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="752.2" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.24%)</title><rect x="752.0" y="531.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="755.0" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.24%)</title><rect x="752.0" y="515.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="755.0" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.24%)</title><rect x="752.0" y="499.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="755.0" y="510.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.24%)</title><rect x="752.0" y="483.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="755.0" y="494.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.24%)</title><rect x="752.0" y="467.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="755.0" y="478.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.24%)</title><rect x="752.0" y="451.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="755.0" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.24%)</title><rect x="752.0" y="435.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="755.0" y="446.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.24%)</title><rect x="752.0" y="419.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="755.0" y="430.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.24%)</title><rect x="752.0" y="403.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="755.0" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.24%)</title><rect x="752.0" y="387.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="755.0" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.24%)</title><rect x="752.0" y="371.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="755.0" y="382.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.24%)</title><rect x="752.0" y="355.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="755.0" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.24%)</title><rect x="752.0" y="339.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="755.0" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.24%)</title><rect x="752.0" y="323.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="755.0" y="334.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.24%)</title><rect x="752.0" y="307.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="755.0" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.24%)</title><rect x="752.0" y="291.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="755.0" y="302.0"></text>
</g>
<g>
<title>__tcp_send_ack (1 samples, 0.24%)</title><rect x="752.0" y="275.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="755.0" y="286.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.24%)</title><rect x="752.0" y="259.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="755.0" y="270.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.24%)</title><rect x="752.0" y="243.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="755.0" y="254.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.24%)</title><rect x="754.8" y="659.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="757.8" y="670.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.24%)</title><rect x="754.8" y="643.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="757.8" y="654.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.24%)</title><rect x="754.8" y="627.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="757.8" y="638.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.24%)</title><rect x="754.8" y="611.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="757.8" y="622.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.24%)</title><rect x="754.8" y="595.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="757.8" y="606.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.24%)</title><rect x="754.8" y="579.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="757.8" y="590.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.24%)</title><rect x="754.8" y="563.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="757.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/MyHttpServer.entity (48 samples, 11.35%)</title><rect x="757.6" y="883.0" width="133.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="760.6" y="894.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.71%)</title><rect x="757.6" y="867.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.24%)</title><rect x="760.4" y="851.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="763.4" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.24%)</title><rect x="763.2" y="851.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="766.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (45 samples, 10.64%)</title><rect x="766.0" y="867.0" width="125.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.0" y="878.0">ru/mail/polis/d..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (45 samples, 10.64%)</title><rect x="766.0" y="851.0" width="125.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.0" y="862.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (45 samples, 10.64%)</title><rect x="766.0" y="835.0" width="125.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.0" y="846.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.24%)</title><rect x="766.0" y="819.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.0" y="830.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (38 samples, 8.98%)</title><rect x="768.8" y="819.0" width="106.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="771.8" y="830.0">Java_org_rock..</text>
</g>
<g>
<title>__malloc (2 samples, 0.47%)</title><rect x="768.8" y="803.0" width="5.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="771.8" y="814.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (36 samples, 8.51%)</title><rect x="774.3" y="803.0" width="100.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="777.3" y="814.0">rocksdb_put_..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (36 samples, 8.51%)</title><rect x="774.3" y="787.0" width="100.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="777.3" y="798.0">rocksdb::DB:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (36 samples, 8.51%)</title><rect x="774.3" y="771.0" width="100.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="777.3" y="782.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (36 samples, 8.51%)</title><rect x="774.3" y="755.0" width="100.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="777.3" y="766.0">rocksdb::DB:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (35 samples, 8.27%)</title><rect x="774.3" y="739.0" width="97.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="777.3" y="750.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (34 samples, 8.04%)</title><rect x="774.3" y="723.0" width="94.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="777.3" y="734.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (7 samples, 1.65%)</title><rect x="782.7" y="707.0" width="19.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="785.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (6 samples, 1.42%)</title><rect x="782.7" y="691.0" width="16.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="785.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (6 samples, 1.42%)</title><rect x="782.7" y="675.0" width="16.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="785.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (6 samples, 1.42%)</title><rect x="782.7" y="659.0" width="16.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="785.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (6 samples, 1.42%)</title><rect x="782.7" y="643.0" width="16.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="785.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (6 samples, 1.42%)</title><rect x="782.7" y="627.0" width="16.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="785.7" y="638.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (6 samples, 1.42%)</title><rect x="782.7" y="611.0" width="16.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="785.7" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (6 samples, 1.42%)</title><rect x="782.7" y="595.0" width="16.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="785.7" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.42%)</title><rect x="782.7" y="579.0" width="16.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="785.7" y="590.0"></text>
</g>
<g>
<title>sys_epoll_wait (4 samples, 0.95%)</title><rect x="785.5" y="563.0" width="11.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="788.5" y="574.0"></text>
</g>
<g>
<title>sys_write (4 samples, 0.95%)</title><rect x="785.5" y="547.0" width="11.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="788.5" y="558.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.95%)</title><rect x="785.5" y="531.0" width="11.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="788.5" y="542.0"></text>
</g>
<g>
<title>new_sync_write (4 samples, 0.95%)</title><rect x="785.5" y="515.0" width="11.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="788.5" y="526.0"></text>
</g>
<g>
<title>inet_recvmsg (4 samples, 0.95%)</title><rect x="785.5" y="499.0" width="11.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="788.5" y="510.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (4 samples, 0.95%)</title><rect x="785.5" y="483.0" width="11.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="788.5" y="494.0"></text>
</g>
<g>
<title>__generic_file_write_iter (4 samples, 0.95%)</title><rect x="785.5" y="467.0" width="11.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="788.5" y="478.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.24%)</title><rect x="785.5" y="451.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="788.5" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.24%)</title><rect x="785.5" y="435.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="788.5" y="446.0"></text>
</g>
<g>
<title>ext4_da_write_begin	[ext4] (1 samples, 0.24%)</title><rect x="785.5" y="419.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="788.5" y="430.0"></text>
</g>
<g>
<title>jbd2__journal_start	[jbd2] (1 samples, 0.24%)</title><rect x="785.5" y="403.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="788.5" y="414.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (1 samples, 0.24%)</title><rect x="785.5" y="387.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="788.5" y="398.0"></text>
</g>
<g>
<title>start_this_handle	[jbd2] (1 samples, 0.24%)</title><rect x="785.5" y="371.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="788.5" y="382.0"></text>
</g>
<g>
<title>add_transaction_credits	[jbd2] (1 samples, 0.24%)</title><rect x="785.5" y="355.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="788.5" y="366.0"></text>
</g>
<g>
<title>generic_perform_write (2 samples, 0.47%)</title><rect x="788.3" y="451.0" width="5.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="791.3" y="462.0"></text>
</g>
<g>
<title>ext4_da_write_end	[ext4] (2 samples, 0.47%)</title><rect x="788.3" y="435.0" width="5.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="791.3" y="446.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.47%)</title><rect x="788.3" y="419.0" width="5.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="791.3" y="430.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.47%)</title><rect x="788.3" y="403.0" width="5.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="791.3" y="414.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (2 samples, 0.47%)</title><rect x="788.3" y="387.0" width="5.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="791.3" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb	[ext4] (1 samples, 0.24%)</title><rect x="788.3" y="371.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="791.3" y="382.0"></text>
</g>
<g>
<title>ext4_journal_check_start	[ext4] (1 samples, 0.24%)</title><rect x="788.3" y="355.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="791.3" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (1 samples, 0.24%)</title><rect x="791.1" y="371.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="794.1" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.24%)</title><rect x="791.1" y="355.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="794.1" y="366.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write	[ext4] (1 samples, 0.24%)</title><rect x="791.1" y="339.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="794.1" y="350.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access	[ext4] (1 samples, 0.24%)</title><rect x="791.1" y="323.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="794.1" y="334.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access	[jbd2] (1 samples, 0.24%)</title><rect x="791.1" y="307.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="794.1" y="318.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.8	[jbd2] (1 samples, 0.24%)</title><rect x="791.1" y="291.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="794.1" y="302.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.24%)</title><rect x="793.9" y="451.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="796.9" y="462.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.24%)</title><rect x="793.9" y="435.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="796.9" y="446.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.24%)</title><rect x="793.9" y="419.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="796.9" y="430.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.24%)</title><rect x="793.9" y="403.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="796.9" y="414.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.24%)</title><rect x="793.9" y="387.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="796.9" y="398.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.24%)</title><rect x="793.9" y="371.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="796.9" y="382.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb	[ext4] (1 samples, 0.24%)</title><rect x="793.9" y="355.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="796.9" y="366.0"></text>
</g>
<g>
<title>ext4_journal_check_start	[ext4] (1 samples, 0.24%)</title><rect x="793.9" y="339.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="796.9" y="350.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.24%)</title><rect x="796.7" y="563.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="799.7" y="574.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.24%)</title><rect x="796.7" y="547.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="799.7" y="558.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.24%)</title><rect x="796.7" y="531.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="799.7" y="542.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.24%)</title><rect x="796.7" y="515.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="799.7" y="526.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (1 samples, 0.24%)</title><rect x="796.7" y="499.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="799.7" y="510.0"></text>
</g>
<g>
<title>__generic_file_write_iter (1 samples, 0.24%)</title><rect x="796.7" y="483.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="799.7" y="494.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.24%)</title><rect x="796.7" y="467.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="799.7" y="478.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.24%)</title><rect x="796.7" y="451.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="799.7" y="462.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.24%)</title><rect x="796.7" y="435.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="799.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="799.5" y="691.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="802.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (9 samples, 2.13%)</title><rect x="802.2" y="707.0" width="25.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="805.2" y="718.0">r..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 2.13%)</title><rect x="802.2" y="691.0" width="25.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="805.2" y="702.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 2.13%)</title><rect x="802.2" y="675.0" width="25.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="805.2" y="686.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (9 samples, 2.13%)</title><rect x="802.2" y="659.0" width="25.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="805.2" y="670.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (9 samples, 2.13%)</title><rect x="802.2" y="643.0" width="25.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="805.2" y="654.0">r..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (9 samples, 2.13%)</title><rect x="802.2" y="627.0" width="25.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="805.2" y="638.0">b..</text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (9 samples, 2.13%)</title><rect x="802.2" y="611.0" width="25.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="805.2" y="622.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (4 samples, 0.95%)</title><rect x="802.2" y="595.0" width="11.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="805.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.95%)</title><rect x="802.2" y="579.0" width="11.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="805.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.95%)</title><rect x="802.2" y="563.0" width="11.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="805.2" y="574.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.47%)</title><rect x="802.2" y="547.0" width="5.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="805.2" y="558.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.47%)</title><rect x="802.2" y="531.0" width="5.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="805.2" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.24%)</title><rect x="802.2" y="515.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="805.2" y="526.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.24%)</title><rect x="805.0" y="515.0" width="2.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="808.0" y="526.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.47%)</title><rect x="807.8" y="547.0" width="5.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="810.8" y="558.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.47%)</title><rect x="807.8" y="531.0" width="5.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="810.8" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.47%)</title><rect x="807.8" y="515.0" width="5.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="810.8" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.24%)</title><rect x="813.4" y="595.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="816.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.95%)</title><rect x="816.2" y="595.0" width="11.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="819.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.95%)</title><rect x="816.2" y="579.0" width="11.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="819.2" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="816.2" y="563.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="819.2" y="574.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.24%)</title><rect x="816.2" y="547.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="819.2" y="558.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.24%)</title><rect x="816.2" y="531.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="819.2" y="542.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.47%)</title><rect x="819.0" y="563.0" width="5.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="822.0" y="574.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.47%)</title><rect x="819.0" y="547.0" width="5.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="822.0" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.47%)</title><rect x="819.0" y="531.0" width="5.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="822.0" y="542.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.47%)</title><rect x="819.0" y="515.0" width="5.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="822.0" y="526.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.24%)</title><rect x="819.0" y="499.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="822.0" y="510.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.24%)</title><rect x="821.8" y="499.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="824.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.24%)</title><rect x="824.6" y="563.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="827.6" y="574.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.24%)</title><rect x="824.6" y="547.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="827.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (7 samples, 1.65%)</title><rect x="827.4" y="707.0" width="19.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="830.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (7 samples, 1.65%)</title><rect x="827.4" y="691.0" width="19.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="830.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 1.65%)</title><rect x="827.4" y="675.0" width="19.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="830.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (7 samples, 1.65%)</title><rect x="827.4" y="659.0" width="19.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="830.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.24%)</title><rect x="827.4" y="643.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="830.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (6 samples, 1.42%)</title><rect x="830.1" y="643.0" width="16.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="833.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (6 samples, 1.42%)</title><rect x="830.1" y="627.0" width="16.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="833.1" y="638.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (6 samples, 1.42%)</title><rect x="830.1" y="611.0" width="16.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="833.1" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (6 samples, 1.42%)</title><rect x="830.1" y="595.0" width="16.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="833.1" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18269627170544765477.so (6 samples, 1.42%)</title><rect x="830.1" y="579.0" width="16.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="833.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 1.42%)</title><rect x="830.1" y="563.0" width="16.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="833.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (6 samples, 1.42%)</title><rect x="830.1" y="547.0" width="16.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="833.1" y="558.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.47%)</title><rect x="830.1" y="531.0" width="5.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="833.1" y="542.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.47%)</title><rect x="830.1" y="515.0" width="5.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="833.1" y="526.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.47%)</title><rect x="830.1" y="499.0" width="5.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="833.1" y="510.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.47%)</title><rect x="830.1" y="483.0" width="5.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="833.1" y="494.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.24%)</title><rect x="830.1" y="467.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="833.1" y="478.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.24%)</title><rect x="832.9" y="467.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="835.9" y="478.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.24%)</title><rect x="835.7" y="531.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="838.7" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="835.7" y="515.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="838.7" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="835.7" y="499.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="838.7" y="510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="835.7" y="483.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="838.7" y="494.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.24%)</title><rect x="835.7" y="467.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="838.7" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.24%)</title><rect x="835.7" y="451.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="838.7" y="462.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.24%)</title><rect x="835.7" y="435.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="838.7" y="446.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.24%)</title><rect x="835.7" y="419.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="838.7" y="430.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.24%)</title><rect x="835.7" y="403.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="838.7" y="414.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.24%)</title><rect x="835.7" y="387.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="838.7" y="398.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.24%)</title><rect x="835.7" y="371.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="838.7" y="382.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.47%)</title><rect x="838.5" y="531.0" width="5.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="841.5" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.47%)</title><rect x="838.5" y="515.0" width="5.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="841.5" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.47%)</title><rect x="838.5" y="499.0" width="5.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="841.5" y="510.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.24%)</title><rect x="838.5" y="483.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="841.5" y="494.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="838.5" y="467.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="841.5" y="478.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.24%)</title><rect x="838.5" y="451.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="841.5" y="462.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.24%)</title><rect x="838.5" y="435.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="841.5" y="446.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.24%)</title><rect x="838.5" y="419.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="841.5" y="430.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.24%)</title><rect x="838.5" y="403.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="841.5" y="414.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.24%)</title><rect x="838.5" y="387.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="841.5" y="398.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.24%)</title><rect x="838.5" y="371.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="841.5" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.24%)</title><rect x="838.5" y="355.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="841.5" y="366.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="841.3" y="483.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="844.3" y="494.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.24%)</title><rect x="841.3" y="467.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="844.3" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.24%)</title><rect x="841.3" y="451.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="844.3" y="462.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.24%)</title><rect x="841.3" y="435.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="844.3" y="446.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.24%)</title><rect x="841.3" y="419.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="844.3" y="430.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.24%)</title><rect x="841.3" y="403.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="844.3" y="414.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.24%)</title><rect x="841.3" y="387.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="844.3" y="398.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.24%)</title><rect x="844.1" y="531.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="847.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.47%)</title><rect x="846.9" y="707.0" width="5.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="849.9" y="718.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.24%)</title><rect x="849.7" y="691.0" width="2.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="852.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.71%)</title><rect x="852.5" y="707.0" width="8.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="855.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.71%)</title><rect x="852.5" y="691.0" width="8.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="855.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.24%)</title><rect x="860.8" y="707.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="863.8" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.24%)</title><rect x="860.8" y="691.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="863.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="860.8" y="675.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="863.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="860.8" y="659.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="863.8" y="670.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.24%)</title><rect x="860.8" y="643.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="863.8" y="654.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="860.8" y="627.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="863.8" y="638.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rdx (1 samples, 0.24%)</title><rect x="860.8" y="611.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="863.8" y="622.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rdx (1 samples, 0.24%)</title><rect x="860.8" y="595.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="863.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (1 samples, 0.24%)</title><rect x="863.6" y="707.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="866.6" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.24%)</title><rect x="863.6" y="691.0" width="2.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="866.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.24%)</title><rect x="866.4" y="707.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="869.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.24%)</title><rect x="869.2" y="723.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="872.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="872.0" y="739.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="875.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (1 samples, 0.24%)</title><rect x="872.0" y="723.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="875.0" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (6 samples, 1.42%)</title><rect x="874.8" y="819.0" width="16.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="877.8" y="830.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (6 samples, 1.42%)</title><rect x="874.8" y="803.0" width="16.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="877.8" y="814.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (4 samples, 0.95%)</title><rect x="874.8" y="787.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="877.8" y="798.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 0.95%)</title><rect x="874.8" y="771.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="877.8" y="782.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 0.95%)</title><rect x="874.8" y="755.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="877.8" y="766.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (4 samples, 0.95%)</title><rect x="874.8" y="739.0" width="11.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="877.8" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.24%)</title><rect x="874.8" y="723.0" width="2.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="877.8" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.24%)</title><rect x="874.8" y="707.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="877.8" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.47%)</title><rect x="877.6" y="723.0" width="5.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="880.6" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.24%)</title><rect x="877.6" y="707.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="880.6" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.24%)</title><rect x="880.4" y="707.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="883.4" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.24%)</title><rect x="880.4" y="691.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="883.4" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.24%)</title><rect x="880.4" y="675.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="883.4" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.24%)</title><rect x="883.1" y="723.0" width="2.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="886.1" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.24%)</title><rect x="883.1" y="707.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="886.1" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (2 samples, 0.47%)</title><rect x="885.9" y="787.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="888.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.47%)</title><rect x="885.9" y="771.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="888.9" y="782.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.47%)</title><rect x="885.9" y="755.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="888.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.47%)</title><rect x="891.5" y="931.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="894.5" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.47%)</title><rect x="891.5" y="915.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="894.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.95%)</title><rect x="897.1" y="947.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="900.1" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.95%)</title><rect x="897.1" y="931.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="900.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.71%)</title><rect x="897.1" y="915.0" width="8.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="900.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.71%)</title><rect x="897.1" y="899.0" width="8.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="900.1" y="910.0"></text>
</g>
<g>
<title>/snap/intellij-idea-community/177/jbr/lib/server/libjvm.so (1 samples, 0.24%)</title><rect x="897.1" y="883.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="900.1" y="894.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.24%)</title><rect x="897.1" y="867.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="900.1" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.24%)</title><rect x="899.9" y="883.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="902.9" y="894.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.24%)</title><rect x="899.9" y="867.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="902.9" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.24%)</title><rect x="902.7" y="883.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="905.7" y="894.0"></text>
</g>
<g>
<title>__libc_recv (1 samples, 0.24%)</title><rect x="905.5" y="915.0" width="2.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="908.5" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="905.5" y="899.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="908.5" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="905.5" y="883.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="908.5" y="894.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.24%)</title><rect x="905.5" y="867.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="908.5" y="878.0"></text>
</g>
<g>
<title>default_wake_function (1 samples, 0.24%)</title><rect x="905.5" y="851.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="908.5" y="862.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.24%)</title><rect x="905.5" y="835.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="908.5" y="846.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.24%)</title><rect x="905.5" y="819.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="908.5" y="830.0"></text>
</g>
<g>
<title>[tid=2781] (82 samples, 19.39%)</title><rect x="908.3" y="1011.0" width="228.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="911.3" y="1022.0">[tid=2781]</text>
</g>
<g>
<title>[not_walkable] (1 samples, 0.24%)</title><rect x="908.3" y="995.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="911.3" y="1006.0"></text>
</g>
<g>
<title>open (1 samples, 0.24%)</title><rect x="911.0" y="995.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="914.0" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="911.0" y="979.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="914.0" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="911.0" y="963.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="914.0" y="974.0"></text>
</g>
<g>
<title>do_sys_open (1 samples, 0.24%)</title><rect x="911.0" y="947.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="914.0" y="958.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.24%)</title><rect x="911.0" y="931.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="914.0" y="942.0"></text>
</g>
<g>
<title>do_filp_open (1 samples, 0.24%)</title><rect x="911.0" y="915.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="914.0" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.24%)</title><rect x="911.0" y="899.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="914.0" y="910.0"></text>
</g>
<g>
<title>path_openat (1 samples, 0.24%)</title><rect x="911.0" y="883.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="914.0" y="894.0"></text>
</g>
<g>
<title>link_path_walk (1 samples, 0.24%)</title><rect x="911.0" y="867.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="914.0" y="878.0"></text>
</g>
<g>
<title>__inode_permission (1 samples, 0.24%)</title><rect x="911.0" y="851.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="914.0" y="862.0"></text>
</g>
<g>
<title>start_thread (80 samples, 18.91%)</title><rect x="913.8" y="995.0" width="223.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="916.8" y="1006.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (80 samples, 18.91%)</title><rect x="913.8" y="979.0" width="223.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="916.8" y="990.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (80 samples, 18.91%)</title><rect x="913.8" y="963.0" width="223.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="916.8" y="974.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::run() (80 samples, 18.91%)</title><rect x="913.8" y="947.0" width="223.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="916.8" y="958.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (80 samples, 18.91%)</title><rect x="913.8" y="931.0" width="223.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="916.8" y="942.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (80 samples, 18.91%)</title><rect x="913.8" y="915.0" width="223.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="916.8" y="926.0">CompileBroker::compiler_threa..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (80 samples, 18.91%)</title><rect x="913.8" y="899.0" width="223.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="916.8" y="910.0">CompileBroker::invoke_compile..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (79 samples, 18.68%)</title><rect x="913.8" y="883.0" width="220.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="916.8" y="894.0">C2Compiler::compile_method(ci..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (79 samples, 18.68%)</title><rect x="913.8" y="867.0" width="220.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="916.8" y="878.0">Compile::Compile(ciEnv*, C2Co..</text>
</g>
<g>
<title>Compile::Code_Gen() (37 samples, 8.75%)</title><rect x="916.6" y="851.0" width="103.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="919.6" y="862.0">Compile::Cod..</text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.47%)</title><rect x="916.6" y="835.0" width="5.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="919.6" y="846.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.24%)</title><rect x="916.6" y="819.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="919.6" y="830.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.24%)</title><rect x="916.6" y="803.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="919.6" y="814.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (1 samples, 0.24%)</title><rect x="916.6" y="787.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="919.6" y="798.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.24%)</title><rect x="919.4" y="819.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="922.4" y="830.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.24%)</title><rect x="919.4" y="803.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="922.4" y="814.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (1 samples, 0.24%)</title><rect x="919.4" y="787.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="922.4" y="798.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.24%)</title><rect x="922.2" y="835.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="925.2" y="846.0"></text>
</g>
<g>
<title>Assembler::movq(RegisterImpl*, RegisterImpl*) (1 samples, 0.24%)</title><rect x="922.2" y="819.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="925.2" y="830.0"></text>
</g>
<g>
<title>Matcher::match() (3 samples, 0.71%)</title><rect x="925.0" y="835.0" width="8.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="928.0" y="846.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (3 samples, 0.71%)</title><rect x="925.0" y="819.0" width="8.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="928.0" y="830.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (3 samples, 0.71%)</title><rect x="925.0" y="803.0" width="8.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="928.0" y="814.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.47%)</title><rect x="925.0" y="787.0" width="5.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="928.0" y="798.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.24%)</title><rect x="925.0" y="771.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="928.0" y="782.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.24%)</title><rect x="925.0" y="755.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="928.0" y="766.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.24%)</title><rect x="925.0" y="739.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="928.0" y="750.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.24%)</title><rect x="925.0" y="723.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="928.0" y="734.0"></text>
</g>
<g>
<title>Node::match_edge(unsigned int) const (1 samples, 0.24%)</title><rect x="927.8" y="771.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="930.8" y="782.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.24%)</title><rect x="930.6" y="787.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="933.6" y="798.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.24%)</title><rect x="930.6" y="771.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="933.6" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (6 samples, 1.42%)</title><rect x="933.4" y="835.0" width="16.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="936.4" y="846.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (6 samples, 1.42%)</title><rect x="933.4" y="819.0" width="16.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="936.4" y="830.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.47%)</title><rect x="936.1" y="803.0" width="5.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="939.1" y="814.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (1 samples, 0.24%)</title><rect x="936.1" y="787.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="939.1" y="798.0"></text>
</g>
<g>
<title>GrowableArray&lt;unsigned int&gt;::grow(int) (1 samples, 0.24%)</title><rect x="936.1" y="771.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="939.1" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (1 samples, 0.24%)</title><rect x="938.9" y="787.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="941.9" y="798.0"></text>
</g>
<g>
<title>MachNode::adr_type() const (1 samples, 0.24%)</title><rect x="938.9" y="771.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="941.9" y="782.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.24%)</title><rect x="938.9" y="755.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="941.9" y="766.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.24%)</title><rect x="938.9" y="739.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="941.9" y="750.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.24%)</title><rect x="941.7" y="803.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="944.7" y="814.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (1 samples, 0.24%)</title><rect x="941.7" y="787.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="944.7" y="798.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.24%)</title><rect x="944.5" y="803.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="947.5" y="814.0"></text>
</g>
<g>
<title>loadNNode::oper_input_base() const (1 samples, 0.24%)</title><rect x="947.3" y="803.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="950.3" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (25 samples, 5.91%)</title><rect x="950.1" y="835.0" width="69.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="953.1" y="846.0">PhaseCh..</text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.24%)</title><rect x="950.1" y="819.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="953.1" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.24%)</title><rect x="952.9" y="819.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="955.9" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (7 samples, 1.65%)</title><rect x="955.7" y="819.0" width="19.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="958.7" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.24%)</title><rect x="958.5" y="803.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="961.5" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_initial_block_pressure(Block*, IndexSet*, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;, double) (1 samples, 0.24%)</title><rect x="961.3" y="803.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="964.3" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.47%)</title><rect x="964.0" y="803.0" width="5.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="967.0" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.47%)</title><rect x="969.6" y="803.0" width="5.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="972.6" y="814.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.24%)</title><rect x="969.6" y="787.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="972.6" y="798.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.24%)</title><rect x="972.4" y="787.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="975.4" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.178] (1 samples, 0.24%)</title><rect x="975.2" y="819.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="978.2" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.179] (4 samples, 0.95%)</title><rect x="978.0" y="819.0" width="11.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="981.0" y="830.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.24%)</title><rect x="986.4" y="803.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="989.4" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.24%)</title><rect x="989.1" y="819.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="992.1" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (6 samples, 1.42%)</title><rect x="991.9" y="819.0" width="16.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="994.9" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 0.47%)</title><rect x="994.7" y="803.0" width="5.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="997.7" y="814.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (3 samples, 0.71%)</title><rect x="1000.3" y="803.0" width="8.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1003.3" y="814.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.24%)</title><rect x="1008.7" y="819.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1011.7" y="830.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.24%)</title><rect x="1008.7" y="803.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1011.7" y="814.0"></text>
</g>
<g>
<title>PhaseCoalesce::combine_these_two(Node*, Node*) (1 samples, 0.24%)</title><rect x="1008.7" y="787.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1011.7" y="798.0"></text>
</g>
<g>
<title>PhaseIFG::Union(unsigned int, unsigned int) (1 samples, 0.24%)</title><rect x="1008.7" y="771.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1011.7" y="782.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.47%)</title><rect x="1011.5" y="819.0" width="5.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1014.5" y="830.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.24%)</title><rect x="1014.3" y="803.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1017.3" y="814.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.24%)</title><rect x="1014.3" y="787.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1017.3" y="798.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.24%)</title><rect x="1017.0" y="819.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1020.0" y="830.0"></text>
</g>
<g>
<title>Compile::Optimize() (30 samples, 7.09%)</title><rect x="1019.8" y="851.0" width="83.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1022.8" y="862.0">Compile::..</text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.24%)</title><rect x="1019.8" y="835.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1022.8" y="846.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.24%)</title><rect x="1019.8" y="819.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1022.8" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (22 samples, 5.20%)</title><rect x="1022.6" y="835.0" width="61.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1025.6" y="846.0">PhaseI..</text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.47%)</title><rect x="1022.6" y="819.0" width="5.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1025.6" y="830.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.47%)</title><rect x="1022.6" y="803.0" width="5.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1025.6" y="814.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.47%)</title><rect x="1022.6" y="787.0" width="5.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1025.6" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unroll(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.24%)</title><rect x="1022.6" y="771.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1025.6" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.24%)</title><rect x="1022.6" y="755.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1025.6" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.24%)</title><rect x="1022.6" y="739.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1025.6" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::insert_pre_post_loops(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.24%)</title><rect x="1025.4" y="771.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1028.4" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::insert_post_loop(IdealLoopTree*, Node_List&amp;, CountedLoopNode*, CountedLoopEndNode*, Node*, Node*, CountedLoopNode*&amp;) (1 samples, 0.24%)</title><rect x="1025.4" y="755.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1028.4" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.24%)</title><rect x="1025.4" y="739.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1028.4" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_outer_loop(LoopNode*, PhaseIdealLoop::CloneLoopMode, IdealLoopTree*, IdealLoopTree*, int, Node_List&amp;, Node_List&amp;) (1 samples, 0.24%)</title><rect x="1025.4" y="723.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1028.4" y="734.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.24%)</title><rect x="1028.2" y="819.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1031.2" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) (1 samples, 0.24%)</title><rect x="1028.2" y="803.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1031.2" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (1 samples, 0.24%)</title><rect x="1028.2" y="787.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1031.2" y="798.0"></text>
</g>
<g>
<title>PathFrequency::to(Node*) (1 samples, 0.24%)</title><rect x="1028.2" y="771.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1031.2" y="782.0"></text>
</g>
<g>
<title>IdealLoopTree::compute_profile_trip_cnt_helper(Node*) (1 samples, 0.24%)</title><rect x="1028.2" y="755.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1031.2" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.71%)</title><rect x="1031.0" y="819.0" width="8.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1034.0" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (12 samples, 2.84%)</title><rect x="1039.4" y="819.0" width="33.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1042.4" y="830.0">Ph..</text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (12 samples, 2.84%)</title><rect x="1039.4" y="803.0" width="33.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1042.4" y="814.0">Ph..</text>
</g>
<g>
<title>MemBarVolatileNode::Opcode() const (1 samples, 0.24%)</title><rect x="1042.2" y="787.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1045.2" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (10 samples, 2.36%)</title><rect x="1044.9" y="787.0" width="27.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1047.9" y="798.0">P..</text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (10 samples, 2.36%)</title><rect x="1044.9" y="771.0" width="27.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1047.9" y="782.0">P..</text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (2 samples, 0.47%)</title><rect x="1072.8" y="819.0" width="5.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1075.8" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.24%)</title><rect x="1075.6" y="803.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1078.6" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.24%)</title><rect x="1075.6" y="787.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1078.6" y="798.0"></text>
</g>
<g>
<title>PhaseIterGVN::register_new_node_with_optimizer(Node*, Node*) (1 samples, 0.24%)</title><rect x="1075.6" y="771.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1078.6" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.47%)</title><rect x="1078.4" y="819.0" width="5.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1081.4" y="830.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.47%)</title><rect x="1078.4" y="803.0" width="5.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1081.4" y="814.0"></text>
</g>
<g>
<title>RangeCheckNode::Ideal(PhaseGVN*, bool) (2 samples, 0.47%)</title><rect x="1078.4" y="787.0" width="5.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1081.4" y="798.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 1.18%)</title><rect x="1084.0" y="835.0" width="13.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1087.0" y="846.0"></text>
</g>
<g>
<title>CastIINode::Value(PhaseGVN*) const (1 samples, 0.24%)</title><rect x="1084.0" y="819.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1087.0" y="830.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.71%)</title><rect x="1086.8" y="819.0" width="8.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1089.8" y="830.0"></text>
</g>
<g>
<title>AndINode::Opcode() const (1 samples, 0.24%)</title><rect x="1086.8" y="803.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1089.8" y="814.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.24%)</title><rect x="1089.6" y="803.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1092.6" y="814.0"></text>
</g>
<g>
<title>IfNode::fold_compares(PhaseIterGVN*) (1 samples, 0.24%)</title><rect x="1089.6" y="787.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1092.6" y="798.0"></text>
</g>
<g>
<title>ProjNode::Value(PhaseGVN*) const (1 samples, 0.24%)</title><rect x="1092.4" y="803.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1095.4" y="814.0"></text>
</g>
<g>
<title>TypeNarrowPtr::singleton() const (1 samples, 0.24%)</title><rect x="1095.2" y="819.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1098.2" y="830.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.24%)</title><rect x="1097.9" y="835.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1100.9" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.24%)</title><rect x="1097.9" y="819.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1100.9" y="830.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.24%)</title><rect x="1097.9" y="803.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1100.9" y="814.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.24%)</title><rect x="1097.9" y="787.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1100.9" y="798.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.24%)</title><rect x="1100.7" y="835.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1103.7" y="846.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.24%)</title><rect x="1100.7" y="819.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1103.7" y="830.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.24%)</title><rect x="1100.7" y="803.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1103.7" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 2.60%)</title><rect x="1103.5" y="851.0" width="30.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1106.5" y="862.0">Pa..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 2.60%)</title><rect x="1103.5" y="835.0" width="30.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1106.5" y="846.0">Pa..</text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 2.60%)</title><rect x="1103.5" y="819.0" width="30.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1106.5" y="830.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 2.60%)</title><rect x="1103.5" y="803.0" width="30.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1106.5" y="814.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 2.60%)</title><rect x="1103.5" y="787.0" width="30.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1106.5" y="798.0">Pa..</text>
</g>
<g>
<title>Parse::do_call() (11 samples, 2.60%)</title><rect x="1103.5" y="771.0" width="30.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1106.5" y="782.0">Pa..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.24%)</title><rect x="1103.5" y="755.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1106.5" y="766.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.24%)</title><rect x="1103.5" y="739.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1106.5" y="750.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.24%)</title><rect x="1103.5" y="723.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1106.5" y="734.0"></text>
</g>
<g>
<title>InlineTree::should_not_inline(ciMethod*, ciMethod*, JVMState*, WarmCallInfo*) (1 samples, 0.24%)</title><rect x="1103.5" y="707.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1106.5" y="718.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (1 samples, 0.24%)</title><rect x="1103.5" y="691.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1106.5" y="702.0"></text>
</g>
<g>
<title>Method::has_unloaded_classes_in_signature(methodHandle const&amp;, Thread*) (1 samples, 0.24%)</title><rect x="1103.5" y="675.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1106.5" y="686.0"></text>
</g>
<g>
<title>SignatureStream::SignatureStream(Symbol*, bool) (1 samples, 0.24%)</title><rect x="1103.5" y="659.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1106.5" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 1.65%)</title><rect x="1106.3" y="755.0" width="19.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1109.3" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 1.65%)</title><rect x="1106.3" y="739.0" width="19.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1109.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 1.65%)</title><rect x="1106.3" y="723.0" width="19.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1109.3" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 1.65%)</title><rect x="1106.3" y="707.0" width="19.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1109.3" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 1.65%)</title><rect x="1106.3" y="691.0" width="19.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1109.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 1.18%)</title><rect x="1106.3" y="675.0" width="14.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1109.3" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 1.18%)</title><rect x="1106.3" y="659.0" width="14.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1109.3" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 1.18%)</title><rect x="1106.3" y="643.0" width="14.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1109.3" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 1.18%)</title><rect x="1106.3" y="627.0" width="14.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1109.3" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 1.18%)</title><rect x="1106.3" y="611.0" width="14.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1109.3" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 1.18%)</title><rect x="1106.3" y="595.0" width="14.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1109.3" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.71%)</title><rect x="1106.3" y="579.0" width="8.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1109.3" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.71%)</title><rect x="1106.3" y="563.0" width="8.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1109.3" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.71%)</title><rect x="1106.3" y="547.0" width="8.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1109.3" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.71%)</title><rect x="1106.3" y="531.0" width="8.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1109.3" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.71%)</title><rect x="1106.3" y="515.0" width="8.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1109.3" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.71%)</title><rect x="1106.3" y="499.0" width="8.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1109.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.47%)</title><rect x="1106.3" y="483.0" width="5.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1109.3" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.47%)</title><rect x="1106.3" y="467.0" width="5.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1109.3" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.47%)</title><rect x="1106.3" y="451.0" width="5.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1109.3" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.47%)</title><rect x="1106.3" y="435.0" width="5.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1109.3" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.47%)</title><rect x="1106.3" y="419.0" width="5.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1109.3" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.47%)</title><rect x="1106.3" y="403.0" width="5.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1109.3" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.24%)</title><rect x="1106.3" y="387.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1109.3" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.24%)</title><rect x="1106.3" y="371.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1109.3" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.24%)</title><rect x="1106.3" y="355.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1109.3" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.24%)</title><rect x="1106.3" y="339.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1109.3" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.24%)</title><rect x="1106.3" y="323.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1109.3" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.24%)</title><rect x="1106.3" y="307.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1109.3" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.24%)</title><rect x="1106.3" y="291.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1109.3" y="302.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.24%)</title><rect x="1106.3" y="275.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1109.3" y="286.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.24%)</title><rect x="1106.3" y="259.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1109.3" y="270.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.24%)</title><rect x="1106.3" y="243.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1109.3" y="254.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (1 samples, 0.24%)</title><rect x="1106.3" y="227.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1109.3" y="238.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int) (1 samples, 0.24%)</title><rect x="1106.3" y="211.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1109.3" y="222.0"></text>
</g>
<g>
<title>ArenaBitMap::ArenaBitMap(Arena*, unsigned long) (1 samples, 0.24%)</title><rect x="1106.3" y="195.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1109.3" y="206.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.24%)</title><rect x="1109.1" y="387.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1112.1" y="398.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.24%)</title><rect x="1109.1" y="371.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1112.1" y="382.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.24%)</title><rect x="1109.1" y="355.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1112.1" y="366.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.24%)</title><rect x="1109.1" y="339.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1112.1" y="350.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.24%)</title><rect x="1109.1" y="323.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1112.1" y="334.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.24%)</title><rect x="1109.1" y="307.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1112.1" y="318.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.24%)</title><rect x="1109.1" y="291.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1112.1" y="302.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.24%)</title><rect x="1109.1" y="275.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1112.1" y="286.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.24%)</title><rect x="1111.9" y="483.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1114.9" y="494.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.24%)</title><rect x="1111.9" y="467.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1114.9" y="478.0"></text>
</g>
<g>
<title>Parse::Block::successor_for_bci(int) (1 samples, 0.24%)</title><rect x="1111.9" y="451.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1114.9" y="462.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.24%)</title><rect x="1114.7" y="579.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1117.7" y="590.0"></text>
</g>
<g>
<title>ciObject::klass() (1 samples, 0.24%)</title><rect x="1114.7" y="563.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1117.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.24%)</title><rect x="1117.5" y="579.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1120.5" y="590.0"></text>
</g>
<g>
<title>IfProjNode::Identity(PhaseGVN*) (1 samples, 0.24%)</title><rect x="1117.5" y="563.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1120.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.24%)</title><rect x="1120.3" y="675.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1123.3" y="686.0"></text>
</g>
<g>
<title>PhaseValues::uncached_makecon(Type const*) (1 samples, 0.24%)</title><rect x="1120.3" y="659.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1123.3" y="670.0"></text>
</g>
<g>
<title>ConNode::make(Type const*) (1 samples, 0.24%)</title><rect x="1120.3" y="643.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1123.3" y="654.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.24%)</title><rect x="1123.0" y="675.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1126.0" y="686.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.71%)</title><rect x="1125.8" y="755.0" width="8.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1128.8" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.71%)</title><rect x="1125.8" y="739.0" width="8.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1128.8" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.71%)</title><rect x="1125.8" y="723.0" width="8.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1128.8" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.71%)</title><rect x="1125.8" y="707.0" width="8.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1128.8" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.71%)</title><rect x="1125.8" y="691.0" width="8.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1128.8" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.71%)</title><rect x="1125.8" y="675.0" width="8.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1128.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.71%)</title><rect x="1125.8" y="659.0" width="8.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1128.8" y="670.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.24%)</title><rect x="1125.8" y="643.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1128.8" y="654.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.24%)</title><rect x="1125.8" y="627.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1128.8" y="638.0"></text>
</g>
<g>
<title>TypeTuple::make_domain(ciInstanceKlass*, ciSignature*) (1 samples, 0.24%)</title><rect x="1125.8" y="611.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1128.8" y="622.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.24%)</title><rect x="1125.8" y="595.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1128.8" y="606.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.24%)</title><rect x="1125.8" y="579.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1128.8" y="590.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.24%)</title><rect x="1125.8" y="563.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1128.8" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.47%)</title><rect x="1128.6" y="643.0" width="5.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1131.6" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.47%)</title><rect x="1128.6" y="627.0" width="5.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1131.6" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.47%)</title><rect x="1128.6" y="611.0" width="5.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1131.6" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.47%)</title><rect x="1128.6" y="595.0" width="5.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1131.6" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.47%)</title><rect x="1128.6" y="579.0" width="5.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1131.6" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.47%)</title><rect x="1128.6" y="563.0" width="5.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1131.6" y="574.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.24%)</title><rect x="1128.6" y="547.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1131.6" y="558.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.24%)</title><rect x="1128.6" y="531.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1131.6" y="542.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.24%)</title><rect x="1128.6" y="515.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1131.6" y="526.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.24%)</title><rect x="1128.6" y="499.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1131.6" y="510.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.24%)</title><rect x="1128.6" y="483.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1131.6" y="494.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.24%)</title><rect x="1128.6" y="467.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1131.6" y="478.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.24%)</title><rect x="1128.6" y="451.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1131.6" y="462.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.24%)</title><rect x="1128.6" y="435.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1131.6" y="446.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_putstatic(ciBytecodeStream*) (1 samples, 0.24%)</title><rect x="1128.6" y="419.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1131.6" y="430.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.24%)</title><rect x="1128.6" y="403.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1131.6" y="414.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.24%)</title><rect x="1128.6" y="387.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1131.6" y="398.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.24%)</title><rect x="1128.6" y="371.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1131.6" y="382.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.24%)</title><rect x="1128.6" y="355.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1131.6" y="366.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.24%)</title><rect x="1128.6" y="339.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1131.6" y="350.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.24%)</title><rect x="1128.6" y="323.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1131.6" y="334.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.24%)</title><rect x="1128.6" y="307.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1131.6" y="318.0"></text>
</g>
<g>
<title>FieldType::get_array_info(Symbol*, FieldArrayInfo&amp;, Thread*) (1 samples, 0.24%)</title><rect x="1128.6" y="291.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1131.6" y="302.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (1 samples, 0.24%)</title><rect x="1128.6" y="275.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1131.6" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.24%)</title><rect x="1131.4" y="547.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1134.4" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.24%)</title><rect x="1131.4" y="531.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1134.4" y="542.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.24%)</title><rect x="1131.4" y="515.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.4" y="526.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.24%)</title><rect x="1131.4" y="499.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1134.4" y="510.0"></text>
</g>
<g>
<title>BarrierSetC2::register_potential_barrier_node(Node*) const (1 samples, 0.24%)</title><rect x="1131.4" y="483.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1134.4" y="494.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (1 samples, 0.24%)</title><rect x="1134.2" y="883.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1137.2" y="894.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (1 samples, 0.24%)</title><rect x="1134.2" y="867.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1137.2" y="878.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.24%)</title><rect x="1134.2" y="851.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1137.2" y="862.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.24%)</title><rect x="1134.2" y="835.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1137.2" y="846.0"></text>
</g>
<g>
<title>ciInstanceKlass::ciInstanceKlass(Klass*) (1 samples, 0.24%)</title><rect x="1134.2" y="819.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1137.2" y="830.0"></text>
</g>
<g>
<title>ciKlass::ciKlass(Klass*) (1 samples, 0.24%)</title><rect x="1134.2" y="803.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1137.2" y="814.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.24%)</title><rect x="1134.2" y="787.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1137.2" y="798.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.24%)</title><rect x="1134.2" y="771.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1137.2" y="782.0"></text>
</g>
<g>
<title>[tid=2782] (16 samples, 3.78%)</title><rect x="1137.0" y="1011.0" width="44.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1140.0" y="1022.0">[tid..</text>
</g>
<g>
<title>__GI___libc_read (1 samples, 0.24%)</title><rect x="1137.0" y="995.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1140.0" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="1137.0" y="979.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1140.0" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="1137.0" y="963.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1140.0" y="974.0"></text>
</g>
<g>
<title>sys_read (1 samples, 0.24%)</title><rect x="1137.0" y="947.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1140.0" y="958.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.24%)</title><rect x="1137.0" y="931.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1140.0" y="942.0"></text>
</g>
<g>
<title>seq_read (1 samples, 0.24%)</title><rect x="1137.0" y="915.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1140.0" y="926.0"></text>
</g>
<g>
<title>cgroup_seqfile_show (1 samples, 0.24%)</title><rect x="1137.0" y="899.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1140.0" y="910.0"></text>
</g>
<g>
<title>mem_cgroup_read_u64 (1 samples, 0.24%)</title><rect x="1137.0" y="883.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1140.0" y="894.0"></text>
</g>
<g>
<title>start_thread (15 samples, 3.55%)</title><rect x="1139.8" y="995.0" width="41.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1142.8" y="1006.0">sta..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (15 samples, 3.55%)</title><rect x="1139.8" y="979.0" width="41.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1142.8" y="990.0">thr..</text>
</g>
<g>
<title>Thread::call_run() (15 samples, 3.55%)</title><rect x="1139.8" y="963.0" width="41.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1142.8" y="974.0">Thr..</text>
</g>
<g>
<title>JavaThread::run() (15 samples, 3.55%)</title><rect x="1139.8" y="947.0" width="41.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1142.8" y="958.0">Jav..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (15 samples, 3.55%)</title><rect x="1139.8" y="931.0" width="41.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1142.8" y="942.0">Jav..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (15 samples, 3.55%)</title><rect x="1139.8" y="915.0" width="41.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1142.8" y="926.0">Com..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (15 samples, 3.55%)</title><rect x="1139.8" y="899.0" width="41.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1142.8" y="910.0">Com..</text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (14 samples, 3.31%)</title><rect x="1139.8" y="883.0" width="39.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1142.8" y="894.0">Com..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (14 samples, 3.31%)</title><rect x="1139.8" y="867.0" width="39.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1142.8" y="878.0">Com..</text>
</g>
<g>
<title>Compilation::compile_method() (14 samples, 3.31%)</title><rect x="1139.8" y="851.0" width="39.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1142.8" y="862.0">Com..</text>
</g>
<g>
<title>Compilation::compile_java_method() (13 samples, 3.07%)</title><rect x="1139.8" y="835.0" width="36.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1142.8" y="846.0">Com..</text>
</g>
<g>
<title>Compilation::build_hir() (4 samples, 0.95%)</title><rect x="1139.8" y="819.0" width="11.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1142.8" y="830.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (4 samples, 0.95%)</title><rect x="1139.8" y="803.0" width="11.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1142.8" y="814.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (4 samples, 0.95%)</title><rect x="1139.8" y="787.0" width="11.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1142.8" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (4 samples, 0.95%)</title><rect x="1139.8" y="771.0" width="11.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1142.8" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 0.95%)</title><rect x="1139.8" y="755.0" width="11.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1142.8" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (4 samples, 0.95%)</title><rect x="1139.8" y="739.0" width="11.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1142.8" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::if_node(Instruction*, Instruction::Condition, Instruction*, ValueStack*) (1 samples, 0.24%)</title><rect x="1139.8" y="723.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1142.8" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.24%)</title><rect x="1139.8" y="707.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1142.8" y="718.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.24%)</title><rect x="1139.8" y="691.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1142.8" y="702.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.24%)</title><rect x="1139.8" y="675.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1142.8" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 0.71%)</title><rect x="1142.6" y="723.0" width="8.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1145.6" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.47%)</title><rect x="1142.6" y="707.0" width="5.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1145.6" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.47%)</title><rect x="1142.6" y="691.0" width="5.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1145.6" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.47%)</title><rect x="1142.6" y="675.0" width="5.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1145.6" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.47%)</title><rect x="1142.6" y="659.0" width="5.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1145.6" y="670.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.47%)</title><rect x="1142.6" y="643.0" width="5.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1145.6" y="654.0"></text>
</g>
<g>
<title>GraphBuilder::profile_call(ciMethod*, Instruction*, ciKlass*, GrowableArray&lt;Instruction*&gt;*, bool) (1 samples, 0.24%)</title><rect x="1142.6" y="627.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1145.6" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.24%)</title><rect x="1145.4" y="627.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1148.4" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.24%)</title><rect x="1145.4" y="611.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1148.4" y="622.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.24%)</title><rect x="1145.4" y="595.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1148.4" y="606.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.24%)</title><rect x="1145.4" y="579.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1148.4" y="590.0"></text>
</g>
<g>
<title>GraphBuilder::convert(Bytecodes::Code, BasicType, BasicType) (1 samples, 0.24%)</title><rect x="1145.4" y="563.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1148.4" y="574.0"></text>
</g>
<g>
<title>Convert::visit(InstructionVisitor*) (1 samples, 0.24%)</title><rect x="1145.4" y="547.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1148.4" y="558.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.24%)</title><rect x="1148.2" y="707.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1151.2" y="718.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.24%)</title><rect x="1148.2" y="691.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1151.2" y="702.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.24%)</title><rect x="1148.2" y="675.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.2" y="686.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call_or_null(LinkInfo const&amp;) (1 samples, 0.24%)</title><rect x="1148.2" y="659.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1151.2" y="670.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.24%)</title><rect x="1148.2" y="643.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.2" y="654.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_static_method(LinkInfo const&amp;, Thread*) (1 samples, 0.24%)</title><rect x="1148.2" y="627.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.2" y="638.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.24%)</title><rect x="1148.2" y="611.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.2" y="622.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.24%)</title><rect x="1148.2" y="595.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1151.2" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.24%)</title><rect x="1148.2" y="579.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1151.2" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.24%)</title><rect x="1148.2" y="563.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.2" y="574.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (2 samples, 0.47%)</title><rect x="1150.9" y="819.0" width="5.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1153.9" y="830.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (2 samples, 0.47%)</title><rect x="1150.9" y="803.0" width="5.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1153.9" y="814.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_profile_call(LIR_OpProfileCall*) (2 samples, 0.47%)</title><rect x="1150.9" y="787.0" width="5.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.9" y="798.0"></text>
</g>
<g>
<title>LIR_Assembler::type_profile_helper(RegisterImpl*, ciMethodData*, ProfileData*, RegisterImpl*, Label*) (1 samples, 0.24%)</title><rect x="1150.9" y="771.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1153.9" y="782.0"></text>
</g>
<g>
<title>VirtualCallData::cell_count() const (1 samples, 0.24%)</title><rect x="1153.7" y="771.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1156.7" y="782.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (7 samples, 1.65%)</title><rect x="1156.5" y="819.0" width="19.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.5" y="830.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (3 samples, 0.71%)</title><rect x="1156.5" y="803.0" width="8.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.5" y="814.0"></text>
</g>
<g>
<title>LIRGenerator::block_do(BlockBegin*) (3 samples, 0.71%)</title><rect x="1156.5" y="787.0" width="8.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.5" y="798.0"></text>
</g>
<g>
<title>LIRGenerator::do_Base(Base*) (1 samples, 0.24%)</title><rect x="1156.5" y="771.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.5" y="782.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (1 samples, 0.24%)</title><rect x="1159.3" y="771.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1162.3" y="782.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (1 samples, 0.24%)</title><rect x="1159.3" y="755.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.3" y="766.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (1 samples, 0.24%)</title><rect x="1159.3" y="739.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.3" y="750.0"></text>
</g>
<g>
<title>GrowableArray&lt;ResolveNode*&gt;::grow(int) (1 samples, 0.24%)</title><rect x="1159.3" y="723.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.3" y="734.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.24%)</title><rect x="1159.3" y="707.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.3" y="718.0"></text>
</g>
<g>
<title>LIRGenerator::do_NewObjectArray(NewObjectArray*) (1 samples, 0.24%)</title><rect x="1162.1" y="771.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.1" y="782.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.24%)</title><rect x="1162.1" y="755.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1165.1" y="766.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (4 samples, 0.95%)</title><rect x="1164.9" y="803.0" width="11.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1167.9" y="814.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (1 samples, 0.24%)</title><rect x="1164.9" y="787.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1167.9" y="798.0"></text>
</g>
<g>
<title>LinearScanWalker::LinearScanWalker(LinearScan*, Interval*, Interval*) (1 samples, 0.24%)</title><rect x="1164.9" y="771.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1167.9" y="782.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.24%)</title><rect x="1164.9" y="755.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1167.9" y="766.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.24%)</title><rect x="1167.7" y="787.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1170.7" y="798.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (1 samples, 0.24%)</title><rect x="1167.7" y="771.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1170.7" y="782.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (1 samples, 0.24%)</title><rect x="1167.7" y="755.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.7" y="766.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 0.24%)</title><rect x="1167.7" y="739.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1170.7" y="750.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (2 samples, 0.47%)</title><rect x="1170.5" y="787.0" width="5.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.5" y="798.0"></text>
</g>
<g>
<title>Interval::add_range(int, int) (1 samples, 0.24%)</title><rect x="1173.3" y="771.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.3" y="782.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.24%)</title><rect x="1176.1" y="835.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.1" y="846.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.24%)</title><rect x="1176.1" y="819.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.1" y="830.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.24%)</title><rect x="1176.1" y="803.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.1" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (1 samples, 0.24%)</title><rect x="1178.8" y="883.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.8" y="894.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.24%)</title><rect x="1178.8" y="867.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.8" y="878.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.24%)</title><rect x="1178.8" y="851.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.8" y="862.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.24%)</title><rect x="1178.8" y="835.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.8" y="846.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.24%)</title><rect x="1178.8" y="819.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.8" y="830.0"></text>
</g>
<g>
<title>[tid=2784] (1 samples, 0.24%)</title><rect x="1181.6" y="1011.0" width="2.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1184.6" y="1022.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.24%)</title><rect x="1181.6" y="995.0" width="2.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1184.6" y="1006.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.24%)</title><rect x="1181.6" y="979.0" width="2.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1184.6" y="990.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.24%)</title><rect x="1181.6" y="963.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.6" y="974.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.24%)</title><rect x="1181.6" y="947.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.6" y="958.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.24%)</title><rect x="1181.6" y="931.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.6" y="942.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.24%)</title><rect x="1181.6" y="915.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.6" y="926.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 0.24%)</title><rect x="1181.6" y="899.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.6" y="910.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.24%)</title><rect x="1181.6" y="883.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.6" y="894.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (1 samples, 0.24%)</title><rect x="1181.6" y="867.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1184.6" y="878.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.24%)</title><rect x="1181.6" y="851.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.6" y="862.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.24%)</title><rect x="1181.6" y="835.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.6" y="846.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.24%)</title><rect x="1181.6" y="819.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.6" y="830.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.24%)</title><rect x="1181.6" y="803.0" width="2.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1184.6" y="814.0"></text>
</g>
<g>
<title>[tid=2785] (1 samples, 0.24%)</title><rect x="1184.4" y="1011.0" width="2.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1187.4" y="1022.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.24%)</title><rect x="1184.4" y="995.0" width="2.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1187.4" y="1006.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.24%)</title><rect x="1184.4" y="979.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1187.4" y="990.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.24%)</title><rect x="1184.4" y="963.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.4" y="974.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.24%)</title><rect x="1184.4" y="947.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.4" y="958.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.24%)</title><rect x="1184.4" y="931.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.4" y="942.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.24%)</title><rect x="1184.4" y="915.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.4" y="926.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.24%)</title><rect x="1184.4" y="899.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.4" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.24%)</title><rect x="1184.4" y="883.0" width="2.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1187.4" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="1184.4" y="867.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1187.4" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="1184.4" y="851.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1187.4" y="862.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.24%)</title><rect x="1184.4" y="835.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1187.4" y="846.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.24%)</title><rect x="1184.4" y="819.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1187.4" y="830.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.24%)</title><rect x="1184.4" y="803.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1187.4" y="814.0"></text>
</g>
<g>
<title>[tid=2815] (1 samples, 0.24%)</title><rect x="1187.2" y="1011.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1190.2" y="1022.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.24%)</title><rect x="1187.2" y="995.0" width="2.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1190.2" y="1006.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.24%)</title><rect x="1187.2" y="979.0" width="2.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1190.2" y="990.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.24%)</title><rect x="1187.2" y="963.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.2" y="974.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.24%)</title><rect x="1187.2" y="947.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.2" y="958.0"></text>
</g>
<g>
<title>__new_sem_post (1 samples, 0.24%)</title><rect x="1187.2" y="931.0" width="2.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1190.2" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.24%)</title><rect x="1187.2" y="915.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1190.2" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="1187.2" y="899.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1190.2" y="910.0"></text>
</g>
</g>
</svg>
