<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="357"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="357"> </text>
<g id="frames">
<g>
<title>all (278 samples, 100.00%)</title><rect x="10.0" y="323.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="334.0">all</text>
</g>
<g>
<title>[Attach Listener tid=3102] (1 samples, 0.36%)</title><rect x="10.0" y="307.0" width="4.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>[not_walkable] (1 samples, 0.36%)</title><rect x="10.0" y="291.0" width="4.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.36%)</title><rect x="10.0" y="275.0" width="4.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=3070] (18 samples, 6.47%)</title><rect x="14.2" y="307.0" width="76.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="17.2" y="318.0">[NIO Acc..</text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (18 samples, 6.47%)</title><rect x="14.2" y="291.0" width="76.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.2" y="302.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (3 samples, 1.08%)</title><rect x="14.2" y="275.0" width="12.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.2" y="286.0"></text>
</g>
<g>
<title>one.nio.net.NativeSocket (3 samples, 1.08%)</title><rect x="14.2" y="259.0" width="12.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="17.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.createSession (15 samples, 5.40%)</title><rect x="27.0" y="275.0" width="63.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.0" y="286.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.createSession (15 samples, 5.40%)</title><rect x="27.0" y="259.0" width="63.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="30.0" y="270.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/StorageSession.&lt;init&gt; (15 samples, 5.40%)</title><rect x="27.0" y="243.0" width="63.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.0" y="254.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (15 samples, 5.40%)</title><rect x="27.0" y="227.0" width="63.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.0" y="238.0">one/nio..</text>
</g>
<g>
<title>byte[] (13 samples, 4.68%)</title><rect x="27.0" y="211.0" width="55.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="30.0" y="222.0">byte[]</text>
</g>
<g>
<title>byte[] (2 samples, 0.72%)</title><rect x="82.2" y="211.0" width="8.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="85.2" y="222.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=3066] (15 samples, 5.40%)</title><rect x="90.6" y="307.0" width="63.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="93.6" y="318.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (15 samples, 5.40%)</title><rect x="90.6" y="291.0" width="63.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.6" y="302.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 1.08%)</title><rect x="90.6" y="275.0" width="12.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.6" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.36%)</title><rect x="90.6" y="259.0" width="4.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="93.6" y="270.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2 samples, 0.72%)</title><rect x="94.9" y="259.0" width="8.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="97.9" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (12 samples, 4.32%)</title><rect x="103.4" y="275.0" width="50.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="106.4" y="286.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (12 samples, 4.32%)</title><rect x="103.4" y="259.0" width="50.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.4" y="270.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (10 samples, 3.60%)</title><rect x="103.4" y="243.0" width="42.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.4" y="254.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2 samples, 0.72%)</title><rect x="103.4" y="227.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.4" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.72%)</title><rect x="103.4" y="211.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.4" y="222.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (2 samples, 0.72%)</title><rect x="103.4" y="195.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (2 samples, 0.72%)</title><rect x="103.4" y="179.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="106.4" y="190.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.36%)</title><rect x="103.4" y="163.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.4" y="174.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.36%)</title><rect x="103.4" y="147.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.36%)</title><rect x="103.4" y="131.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="106.4" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.36%)</title><rect x="103.4" y="115.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="106.4" y="126.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.36%)</title><rect x="103.4" y="99.0" width="4.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="106.4" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.36%)</title><rect x="107.6" y="163.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.36%)</title><rect x="107.6" y="147.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/1397497046.get$Lambda (1 samples, 0.36%)</title><rect x="107.6" y="131.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.6" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.AsyncHttpServer$$Lambda$63 (1 samples, 0.36%)</title><rect x="107.6" y="115.0" width="4.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="110.6" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 1.44%)</title><rect x="111.9" y="227.0" width="16.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.9" y="238.0"></text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.72%)</title><rect x="111.9" y="211.0" width="8.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="114.9" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.36%)</title><rect x="120.4" y="211.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.4" y="222.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.36%)</title><rect x="120.4" y="195.0" width="4.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="123.4" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.36%)</title><rect x="124.6" y="211.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="127.6" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.36%)</title><rect x="124.6" y="195.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.6" y="206.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.36%)</title><rect x="124.6" y="179.0" width="4.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="127.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.36%)</title><rect x="128.8" y="227.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.8" y="238.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.36%)</title><rect x="128.8" y="211.0" width="4.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="131.8" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 1.08%)</title><rect x="133.1" y="227.0" width="12.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.1" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 1.08%)</title><rect x="133.1" y="211.0" width="12.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.1" y="222.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.72%)</title><rect x="133.1" y="195.0" width="8.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="136.1" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.36%)</title><rect x="141.6" y="195.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.36%)</title><rect x="141.6" y="179.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="144.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.36%)</title><rect x="141.6" y="163.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.6" y="174.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.36%)</title><rect x="141.6" y="147.0" width="4.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="144.6" y="158.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.72%)</title><rect x="145.8" y="243.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="148.8" y="254.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.72%)</title><rect x="145.8" y="227.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.8" y="238.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (2 samples, 0.72%)</title><rect x="145.8" y="211.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.8" y="222.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (2 samples, 0.72%)</title><rect x="145.8" y="195.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.8" y="206.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (2 samples, 0.72%)</title><rect x="145.8" y="179.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.8" y="190.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.72%)</title><rect x="145.8" y="163.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.8" y="174.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.72%)</title><rect x="145.8" y="147.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="148.8" y="158.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.72%)</title><rect x="145.8" y="131.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.8" y="142.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.72%)</title><rect x="145.8" y="115.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.8" y="126.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.36%)</title><rect x="145.8" y="99.0" width="4.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="148.8" y="110.0"></text>
</g>
<g>
<title>short[] (1 samples, 0.36%)</title><rect x="150.1" y="99.0" width="4.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="153.1" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=3067] (21 samples, 7.55%)</title><rect x="154.3" y="307.0" width="89.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="157.3" y="318.0">[NIO Selec..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (21 samples, 7.55%)</title><rect x="154.3" y="291.0" width="89.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.3" y="302.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 1.44%)</title><rect x="154.3" y="275.0" width="17.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.3" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.36%)</title><rect x="154.3" y="259.0" width="4.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="157.3" y="270.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.36%)</title><rect x="158.6" y="259.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="161.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.36%)</title><rect x="158.6" y="243.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.36%)</title><rect x="158.6" y="227.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.36%)</title><rect x="158.6" y="211.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.6" y="222.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass (1 samples, 0.36%)</title><rect x="158.6" y="195.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.6" y="206.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass0 (1 samples, 0.36%)</title><rect x="158.6" y="179.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="161.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.36%)</title><rect x="158.6" y="163.0" width="4.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="161.6" y="174.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2 samples, 0.72%)</title><rect x="162.8" y="259.0" width="8.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="165.8" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (17 samples, 6.12%)</title><rect x="171.3" y="275.0" width="72.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.3" y="286.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (17 samples, 6.12%)</title><rect x="171.3" y="259.0" width="72.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="174.3" y="270.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (16 samples, 5.76%)</title><rect x="171.3" y="243.0" width="67.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.3" y="254.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5 samples, 1.80%)</title><rect x="171.3" y="227.0" width="21.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.3" y="238.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 1.80%)</title><rect x="171.3" y="211.0" width="21.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.3" y="222.0">o..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (4 samples, 1.44%)</title><rect x="171.3" y="195.0" width="17.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.3" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.36%)</title><rect x="171.3" y="179.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.3" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.36%)</title><rect x="171.3" y="163.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.3" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.36%)</title><rect x="171.3" y="147.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.3" y="158.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.36%)</title><rect x="171.3" y="131.0" width="4.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="174.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (3 samples, 1.08%)</title><rect x="175.5" y="179.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.5" y="190.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.36%)</title><rect x="175.5" y="163.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="178.5" y="174.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.36%)</title><rect x="175.5" y="147.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="178.5" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.36%)</title><rect x="175.5" y="131.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.36%)</title><rect x="175.5" y="115.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="178.5" y="126.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.36%)</title><rect x="175.5" y="99.0" width="4.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="178.5" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.36%)</title><rect x="179.8" y="163.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="182.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.36%)</title><rect x="179.8" y="147.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/1397497046.get$Lambda (1 samples, 0.36%)</title><rect x="179.8" y="131.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="182.8" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.AsyncHttpServer$$Lambda$63 (1 samples, 0.36%)</title><rect x="179.8" y="115.0" width="4.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="182.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.36%)</title><rect x="184.0" y="163.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="187.0" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.36%)</title><rect x="184.0" y="147.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.36%)</title><rect x="184.0" y="131.0" width="4.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="187.0" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.36%)</title><rect x="188.3" y="195.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.3" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.36%)</title><rect x="188.3" y="179.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.3" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.36%)</title><rect x="188.3" y="163.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.36%)</title><rect x="188.3" y="147.0" width="4.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="191.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 1.44%)</title><rect x="192.5" y="227.0" width="17.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.5" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 1.44%)</title><rect x="192.5" y="211.0" width="17.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.5" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 1.44%)</title><rect x="192.5" y="195.0" width="17.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.5" y="206.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.72%)</title><rect x="192.5" y="179.0" width="8.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="195.5" y="190.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.72%)</title><rect x="201.0" y="179.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.0" y="190.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.72%)</title><rect x="201.0" y="163.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.0" y="174.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.72%)</title><rect x="201.0" y="147.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="204.0" y="158.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.72%)</title><rect x="201.0" y="131.0" width="8.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="204.0" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.36%)</title><rect x="209.5" y="227.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.5" y="238.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.36%)</title><rect x="209.5" y="211.0" width="4.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="212.5" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 2.16%)</title><rect x="213.7" y="227.0" width="25.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.7" y="238.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 2.16%)</title><rect x="213.7" y="211.0" width="25.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.7" y="222.0">o..</text>
</g>
<g>
<title>char[] (2 samples, 0.72%)</title><rect x="213.7" y="195.0" width="8.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="216.7" y="206.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.72%)</title><rect x="222.2" y="195.0" width="8.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="225.2" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.72%)</title><rect x="230.7" y="195.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.7" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.72%)</title><rect x="230.7" y="179.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="233.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.72%)</title><rect x="230.7" y="163.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="233.7" y="174.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.72%)</title><rect x="230.7" y="147.0" width="8.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="233.7" y="158.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.36%)</title><rect x="239.2" y="243.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.2" y="254.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.36%)</title><rect x="239.2" y="227.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.2" y="238.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (1 samples, 0.36%)</title><rect x="239.2" y="211.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.2" y="222.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (1 samples, 0.36%)</title><rect x="239.2" y="195.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="242.2" y="206.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (1 samples, 0.36%)</title><rect x="239.2" y="179.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="242.2" y="190.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.36%)</title><rect x="239.2" y="163.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.2" y="174.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.36%)</title><rect x="239.2" y="147.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.2" y="158.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.36%)</title><rect x="239.2" y="131.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="242.2" y="142.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.36%)</title><rect x="239.2" y="115.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.2" y="126.0"></text>
</g>
<g>
<title>long[] (1 samples, 0.36%)</title><rect x="239.2" y="99.0" width="4.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="242.2" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=3068] (14 samples, 5.04%)</title><rect x="243.5" y="307.0" width="59.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="246.5" y="318.0">[NIO S..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14 samples, 5.04%)</title><rect x="243.5" y="291.0" width="59.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="246.5" y="302.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.72%)</title><rect x="243.5" y="275.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="246.5" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.36%)</title><rect x="243.5" y="259.0" width="4.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="246.5" y="270.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1 samples, 0.36%)</title><rect x="247.7" y="259.0" width="4.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="250.7" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (12 samples, 4.32%)</title><rect x="251.9" y="275.0" width="51.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="254.9" y="286.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (12 samples, 4.32%)</title><rect x="251.9" y="259.0" width="51.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="254.9" y="270.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (12 samples, 4.32%)</title><rect x="251.9" y="243.0" width="51.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.9" y="254.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4 samples, 1.44%)</title><rect x="251.9" y="227.0" width="17.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4 samples, 1.44%)</title><rect x="251.9" y="211.0" width="17.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="254.9" y="222.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (2 samples, 0.72%)</title><rect x="251.9" y="195.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="254.9" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.36%)</title><rect x="251.9" y="179.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="254.9" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.36%)</title><rect x="251.9" y="163.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="254.9" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.36%)</title><rect x="251.9" y="147.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="254.9" y="158.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.36%)</title><rect x="251.9" y="131.0" width="4.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="254.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (1 samples, 0.36%)</title><rect x="256.2" y="179.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (1 samples, 0.36%)</title><rect x="256.2" y="163.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="259.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.36%)</title><rect x="256.2" y="147.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.36%)</title><rect x="256.2" y="131.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.2" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1 samples, 0.36%)</title><rect x="256.2" y="115.0" width="4.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="259.2" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.72%)</title><rect x="260.4" y="195.0" width="8.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="263.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.72%)</title><rect x="260.4" y="179.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.4" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.72%)</title><rect x="260.4" y="163.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="263.4" y="174.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.36%)</title><rect x="260.4" y="147.0" width="4.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="263.4" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.36%)</title><rect x="264.7" y="147.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="267.7" y="158.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.36%)</title><rect x="264.7" y="131.0" width="4.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="267.7" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 1.08%)</title><rect x="268.9" y="227.0" width="12.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="271.9" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 1.08%)</title><rect x="268.9" y="211.0" width="12.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="271.9" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 1.08%)</title><rect x="268.9" y="195.0" width="12.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.9" y="206.0"></text>
</g>
<g>
<title>char[] (3 samples, 1.08%)</title><rect x="268.9" y="179.0" width="12.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="271.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.36%)</title><rect x="281.7" y="227.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="284.7" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.36%)</title><rect x="281.7" y="211.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.7" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.36%)</title><rect x="281.7" y="195.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.7" y="206.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.36%)</title><rect x="281.7" y="179.0" width="4.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="284.7" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 1.44%)</title><rect x="285.9" y="227.0" width="17.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="288.9" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 1.44%)</title><rect x="285.9" y="211.0" width="17.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="288.9" y="222.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.72%)</title><rect x="285.9" y="195.0" width="8.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="288.9" y="206.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.36%)</title><rect x="294.4" y="195.0" width="4.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="297.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.36%)</title><rect x="298.6" y="195.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.36%)</title><rect x="298.6" y="179.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="301.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.36%)</title><rect x="298.6" y="163.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.6" y="174.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.36%)</title><rect x="298.6" y="147.0" width="4.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="301.6" y="158.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=3069] (10 samples, 3.60%)</title><rect x="302.9" y="307.0" width="42.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="305.9" y="318.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (10 samples, 3.60%)</title><rect x="302.9" y="291.0" width="42.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="305.9" y="302.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 1.08%)</title><rect x="302.9" y="275.0" width="12.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.9" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.36%)</title><rect x="302.9" y="259.0" width="4.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="305.9" y="270.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2 samples, 0.72%)</title><rect x="307.1" y="259.0" width="8.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="310.1" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (7 samples, 2.52%)</title><rect x="315.6" y="275.0" width="29.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.6" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (7 samples, 2.52%)</title><rect x="315.6" y="259.0" width="29.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.6" y="270.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6 samples, 2.16%)</title><rect x="315.6" y="243.0" width="25.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.6" y="254.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 1.08%)</title><rect x="315.6" y="227.0" width="12.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 1.08%)</title><rect x="315.6" y="211.0" width="12.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="318.6" y="222.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (3 samples, 1.08%)</title><rect x="315.6" y="195.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="318.6" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.36%)</title><rect x="315.6" y="179.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="318.6" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.36%)</title><rect x="315.6" y="163.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="318.6" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.36%)</title><rect x="315.6" y="147.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.36%)</title><rect x="315.6" y="131.0" width="4.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="318.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (2 samples, 0.72%)</title><rect x="319.9" y="179.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="322.9" y="190.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.36%)</title><rect x="319.9" y="163.0" width="4.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="322.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (1 samples, 0.36%)</title><rect x="324.1" y="163.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="327.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.36%)</title><rect x="324.1" y="147.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="327.1" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.36%)</title><rect x="324.1" y="131.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="327.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$66/82316169.get$Lambda (1 samples, 0.36%)</title><rect x="324.1" y="115.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="327.1" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.AsyncHttpServer$$Lambda$66 (1 samples, 0.36%)</title><rect x="324.1" y="99.0" width="4.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="327.1" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.72%)</title><rect x="328.3" y="227.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="331.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.36%)</title><rect x="328.3" y="211.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="331.3" y="222.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.36%)</title><rect x="328.3" y="195.0" width="4.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="331.3" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.36%)</title><rect x="332.6" y="211.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="335.6" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.36%)</title><rect x="332.6" y="195.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="335.6" y="206.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.36%)</title><rect x="332.6" y="179.0" width="4.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="335.6" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.36%)</title><rect x="336.8" y="227.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.8" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.36%)</title><rect x="336.8" y="211.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="339.8" y="222.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.36%)</title><rect x="336.8" y="195.0" width="4.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="339.8" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.36%)</title><rect x="341.1" y="243.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="344.1" y="254.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.36%)</title><rect x="341.1" y="227.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="344.1" y="238.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (1 samples, 0.36%)</title><rect x="341.1" y="211.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.1" y="222.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (1 samples, 0.36%)</title><rect x="341.1" y="195.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.1" y="206.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (1 samples, 0.36%)</title><rect x="341.1" y="179.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="344.1" y="190.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.36%)</title><rect x="341.1" y="163.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="344.1" y="174.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.36%)</title><rect x="341.1" y="147.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.1" y="158.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.36%)</title><rect x="341.1" y="131.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.1" y="142.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.36%)</title><rect x="341.1" y="115.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.1" y="126.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.36%)</title><rect x="341.1" y="99.0" width="4.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="344.1" y="110.0"></text>
</g>
<g>
<title>[tid=3040] (1 samples, 0.36%)</title><rect x="345.3" y="307.0" width="4.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="348.3" y="318.0"></text>
</g>
<g>
<title>[not_walkable] (1 samples, 0.36%)</title><rect x="345.3" y="291.0" width="4.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="348.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.36%)</title><rect x="345.3" y="275.0" width="4.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="348.3" y="286.0"></text>
</g>
<g>
<title>[worker tid=3109] (49 samples, 17.63%)</title><rect x="349.6" y="307.0" width="208.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="352.6" y="318.0">[worker tid=3109]</text>
</g>
<g>
<title>java/lang/Thread.run (49 samples, 17.63%)</title><rect x="349.6" y="291.0" width="208.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.6" y="302.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (49 samples, 17.63%)</title><rect x="349.6" y="275.0" width="208.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.6" y="286.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (49 samples, 17.63%)</title><rect x="349.6" y="259.0" width="208.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="352.6" y="270.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$66/82316169.run (49 samples, 17.63%)</title><rect x="349.6" y="243.0" width="208.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.6" y="254.0">ru/mail/polis/service/impl/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (49 samples, 17.63%)</title><rect x="349.6" y="227.0" width="208.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.6" y="238.0">ru/mail/polis/service/impl/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 2.16%)</title><rect x="349.6" y="211.0" width="25.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="352.6" y="222.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 2.16%)</title><rect x="349.6" y="195.0" width="25.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.6" y="206.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 1.44%)</title><rect x="349.6" y="179.0" width="16.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="352.6" y="190.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 1.44%)</title><rect x="349.6" y="163.0" width="16.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="352.6" y="174.0"></text>
</g>
<g>
<title>byte[] (4 samples, 1.44%)</title><rect x="349.6" y="147.0" width="16.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="352.6" y="158.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.72%)</title><rect x="366.5" y="179.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.5" y="190.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.72%)</title><rect x="366.5" y="163.0" width="8.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="369.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/1397497046.act (43 samples, 15.47%)</title><rect x="375.0" y="211.0" width="182.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.0" y="222.0">ru/mail/polis/service/im..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (43 samples, 15.47%)</title><rect x="375.0" y="195.0" width="182.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.0" y="206.0">ru/mail/polis/service/im..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (43 samples, 15.47%)</title><rect x="375.0" y="179.0" width="182.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="378.0" y="190.0">ru/mail/polis/service/im..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.36%)</title><rect x="375.0" y="163.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="378.0" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.36%)</title><rect x="375.0" y="147.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="378.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.36%)</title><rect x="375.0" y="131.0" width="4.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="378.0" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.36%)</title><rect x="379.3" y="163.0" width="4.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="382.3" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 1.80%)</title><rect x="383.5" y="163.0" width="21.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.5" y="174.0">o..</text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.36%)</title><rect x="383.5" y="147.0" width="4.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="386.5" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.36%)</title><rect x="387.8" y="147.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.8" y="158.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.36%)</title><rect x="387.8" y="131.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.8" y="142.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.36%)</title><rect x="387.8" y="115.0" width="4.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="390.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 1.08%)</title><rect x="392.0" y="147.0" width="12.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="395.0" y="158.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 1.08%)</title><rect x="392.0" y="131.0" width="12.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="395.0" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 1.08%)</title><rect x="392.0" y="115.0" width="12.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="395.0" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 1.08%)</title><rect x="392.0" y="99.0" width="12.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="395.0" y="110.0"></text>
</g>
<g>
<title>byte[] (3 samples, 1.08%)</title><rect x="392.0" y="83.0" width="12.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="395.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (36 samples, 12.95%)</title><rect x="404.7" y="163.0" width="152.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.7" y="174.0">ru/mail/polis/dao/i..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (33 samples, 11.87%)</title><rect x="404.7" y="147.0" width="140.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="407.7" y="158.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (33 samples, 11.87%)</title><rect x="404.7" y="131.0" width="140.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="407.7" y="142.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (33 samples, 11.87%)</title><rect x="404.7" y="115.0" width="140.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="407.7" y="126.0">org/rocksdb/util/B..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (33 samples, 11.87%)</title><rect x="404.7" y="99.0" width="140.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.7" y="110.0">org/rocksdb/util/B..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (30 samples, 10.79%)</title><rect x="404.7" y="83.0" width="127.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.7" y="94.0">org/rocksdb/Abst..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (30 samples, 10.79%)</title><rect x="404.7" y="67.0" width="127.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.7" y="78.0">org/rocksdb/Slic..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (30 samples, 10.79%)</title><rect x="404.7" y="51.0" width="127.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="407.7" y="62.0">org/rocksdb/Slic..</text>
</g>
<g>
<title>byte[] (30 samples, 10.79%)</title><rect x="404.7" y="35.0" width="127.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="407.7" y="46.0">byte[]</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (3 samples, 1.08%)</title><rect x="532.1" y="83.0" width="12.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="535.1" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 1.08%)</title><rect x="532.1" y="67.0" width="12.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="535.1" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 1.08%)</title><rect x="532.1" y="51.0" width="12.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="535.1" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 1.08%)</title><rect x="532.1" y="35.0" width="12.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="535.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (3 samples, 1.08%)</title><rect x="544.8" y="147.0" width="12.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="547.8" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 1.08%)</title><rect x="544.8" y="131.0" width="12.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.8" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 1.08%)</title><rect x="544.8" y="115.0" width="12.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.8" y="126.0"></text>
</g>
<g>
<title>byte[] (3 samples, 1.08%)</title><rect x="544.8" y="99.0" width="12.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="547.8" y="110.0"></text>
</g>
<g>
<title>[worker tid=3110] (48 samples, 17.27%)</title><rect x="557.6" y="307.0" width="203.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="560.6" y="318.0">[worker tid=3110]</text>
</g>
<g>
<title>java/lang/Thread.run (48 samples, 17.27%)</title><rect x="557.6" y="291.0" width="203.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.6" y="302.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (48 samples, 17.27%)</title><rect x="557.6" y="275.0" width="203.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="560.6" y="286.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (48 samples, 17.27%)</title><rect x="557.6" y="259.0" width="203.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="560.6" y="270.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.72%)</title><rect x="557.6" y="243.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.72%)</title><rect x="557.6" y="227.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="560.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.72%)</title><rect x="557.6" y="211.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="560.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.72%)</title><rect x="557.6" y="195.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="560.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.72%)</title><rect x="557.6" y="179.0" width="8.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="560.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$66/82316169.run (46 samples, 16.55%)</title><rect x="566.0" y="243.0" width="195.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="569.0" y="254.0">ru/mail/polis/service/imp..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (46 samples, 16.55%)</title><rect x="566.0" y="227.0" width="195.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.0" y="238.0">ru/mail/polis/service/imp..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 2.16%)</title><rect x="566.0" y="211.0" width="25.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.0" y="222.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 2.16%)</title><rect x="566.0" y="195.0" width="25.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="569.0" y="206.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 1.08%)</title><rect x="566.0" y="179.0" width="12.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.0" y="190.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 1.08%)</title><rect x="566.0" y="163.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.0" y="174.0"></text>
</g>
<g>
<title>byte[] (3 samples, 1.08%)</title><rect x="566.0" y="147.0" width="12.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="569.0" y="158.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 1.08%)</title><rect x="578.8" y="179.0" width="12.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="581.8" y="190.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 1.08%)</title><rect x="578.8" y="163.0" width="12.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="581.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/1397497046.act (40 samples, 14.39%)</title><rect x="591.5" y="211.0" width="169.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="594.5" y="222.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (40 samples, 14.39%)</title><rect x="591.5" y="195.0" width="169.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.5" y="206.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (40 samples, 14.39%)</title><rect x="591.5" y="179.0" width="169.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="594.5" y="190.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 1.80%)</title><rect x="591.5" y="163.0" width="21.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.5" y="174.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 1.80%)</title><rect x="591.5" y="147.0" width="21.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="594.5" y="158.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 1.80%)</title><rect x="591.5" y="131.0" width="21.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="594.5" y="142.0">j..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 1.44%)</title><rect x="612.7" y="163.0" width="17.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="615.7" y="174.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.72%)</title><rect x="612.7" y="147.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="615.7" y="158.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.72%)</title><rect x="612.7" y="131.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="615.7" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.72%)</title><rect x="612.7" y="115.0" width="8.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="615.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.36%)</title><rect x="621.2" y="147.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.2" y="158.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.36%)</title><rect x="621.2" y="131.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.2" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.36%)</title><rect x="621.2" y="115.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="624.2" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.36%)</title><rect x="621.2" y="99.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="624.2" y="110.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.36%)</title><rect x="621.2" y="83.0" width="4.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="624.2" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.36%)</title><rect x="625.5" y="147.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.5" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.36%)</title><rect x="625.5" y="131.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.36%)</title><rect x="625.5" y="115.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.5" y="126.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.36%)</title><rect x="625.5" y="99.0" width="4.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="628.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (31 samples, 11.15%)</title><rect x="629.7" y="163.0" width="131.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="632.7" y="174.0">ru/mail/polis/da..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (29 samples, 10.43%)</title><rect x="629.7" y="147.0" width="123.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.7" y="158.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (29 samples, 10.43%)</title><rect x="629.7" y="131.0" width="123.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.7" y="142.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (29 samples, 10.43%)</title><rect x="629.7" y="115.0" width="123.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.7" y="126.0">org/rocksdb/uti..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (29 samples, 10.43%)</title><rect x="629.7" y="99.0" width="123.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="632.7" y="110.0">org/rocksdb/uti..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (28 samples, 10.07%)</title><rect x="629.7" y="83.0" width="118.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.7" y="94.0">org/rocksdb/Ab..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (28 samples, 10.07%)</title><rect x="629.7" y="67.0" width="118.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.7" y="78.0">org/rocksdb/Sl..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (28 samples, 10.07%)</title><rect x="629.7" y="51.0" width="118.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.7" y="62.0">org/rocksdb/Sl..</text>
</g>
<g>
<title>byte[] (28 samples, 10.07%)</title><rect x="629.7" y="35.0" width="118.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="632.7" y="46.0">byte[]</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (1 samples, 0.36%)</title><rect x="748.6" y="83.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.6" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.36%)</title><rect x="748.6" y="67.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.6" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.36%)</title><rect x="748.6" y="51.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.6" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.36%)</title><rect x="748.6" y="35.0" width="4.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="751.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (2 samples, 0.72%)</title><rect x="752.8" y="147.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="755.8" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.72%)</title><rect x="752.8" y="131.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.8" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.36%)</title><rect x="752.8" y="115.0" width="4.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="755.8" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.36%)</title><rect x="757.1" y="115.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="760.1" y="126.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.36%)</title><rect x="757.1" y="99.0" width="4.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="760.1" y="110.0"></text>
</g>
<g>
<title>[worker tid=3111] (49 samples, 17.63%)</title><rect x="761.3" y="307.0" width="208.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="764.3" y="318.0">[worker tid=3111]</text>
</g>
<g>
<title>java/lang/Thread.run (49 samples, 17.63%)</title><rect x="761.3" y="291.0" width="208.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="764.3" y="302.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (49 samples, 17.63%)</title><rect x="761.3" y="275.0" width="208.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.3" y="286.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (49 samples, 17.63%)</title><rect x="761.3" y="259.0" width="208.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="764.3" y="270.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.36%)</title><rect x="761.3" y="243.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="764.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.36%)</title><rect x="761.3" y="227.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="764.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.36%)</title><rect x="761.3" y="211.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.36%)</title><rect x="761.3" y="195.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.36%)</title><rect x="761.3" y="179.0" width="4.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="764.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$66/82316169.run (48 samples, 17.27%)</title><rect x="765.5" y="243.0" width="203.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="768.5" y="254.0">ru/mail/polis/service/impl/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (48 samples, 17.27%)</title><rect x="765.5" y="227.0" width="203.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="768.5" y="238.0">ru/mail/polis/service/impl/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 1.80%)</title><rect x="765.5" y="211.0" width="21.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="768.5" y="222.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 1.80%)</title><rect x="765.5" y="195.0" width="21.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.5" y="206.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 1.44%)</title><rect x="765.5" y="179.0" width="17.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.5" y="190.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 1.44%)</title><rect x="765.5" y="163.0" width="17.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="768.5" y="174.0"></text>
</g>
<g>
<title>byte[] (4 samples, 1.44%)</title><rect x="765.5" y="147.0" width="17.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="768.5" y="158.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.36%)</title><rect x="782.5" y="179.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="785.5" y="190.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.36%)</title><rect x="782.5" y="163.0" width="4.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="785.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/1397497046.act (43 samples, 15.47%)</title><rect x="786.8" y="211.0" width="182.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.8" y="222.0">ru/mail/polis/service/im..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (43 samples, 15.47%)</title><rect x="786.8" y="195.0" width="182.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.8" y="206.0">ru/mail/polis/service/im..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (43 samples, 15.47%)</title><rect x="786.8" y="179.0" width="182.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="789.8" y="190.0">ru/mail/polis/service/im..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.72%)</title><rect x="786.8" y="163.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.72%)</title><rect x="786.8" y="147.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.72%)</title><rect x="786.8" y="131.0" width="8.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="789.8" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.72%)</title><rect x="795.3" y="163.0" width="8.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="798.3" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 1.08%)</title><rect x="803.7" y="163.0" width="12.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.7" y="174.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.36%)</title><rect x="803.7" y="147.0" width="4.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="806.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.36%)</title><rect x="808.0" y="147.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="811.0" y="158.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.36%)</title><rect x="808.0" y="131.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="811.0" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.36%)</title><rect x="808.0" y="115.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="811.0" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.36%)</title><rect x="808.0" y="99.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="811.0" y="110.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.36%)</title><rect x="808.0" y="83.0" width="4.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="811.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.36%)</title><rect x="812.2" y="147.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="815.2" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.36%)</title><rect x="812.2" y="131.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="815.2" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.36%)</title><rect x="812.2" y="115.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="815.2" y="126.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.36%)</title><rect x="812.2" y="99.0" width="4.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="815.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (36 samples, 12.95%)</title><rect x="816.5" y="163.0" width="152.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.5" y="174.0">ru/mail/polis/dao/i..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (33 samples, 11.87%)</title><rect x="816.5" y="147.0" width="140.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.5" y="158.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (33 samples, 11.87%)</title><rect x="816.5" y="131.0" width="140.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="819.5" y="142.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (33 samples, 11.87%)</title><rect x="816.5" y="115.0" width="140.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="819.5" y="126.0">org/rocksdb/util/B..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (33 samples, 11.87%)</title><rect x="816.5" y="99.0" width="140.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.5" y="110.0">org/rocksdb/util/B..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (31 samples, 11.15%)</title><rect x="816.5" y="83.0" width="131.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="819.5" y="94.0">org/rocksdb/Abst..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (31 samples, 11.15%)</title><rect x="816.5" y="67.0" width="131.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="819.5" y="78.0">org/rocksdb/Slic..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (31 samples, 11.15%)</title><rect x="816.5" y="51.0" width="131.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.5" y="62.0">org/rocksdb/Slic..</text>
</g>
<g>
<title>byte[] (31 samples, 11.15%)</title><rect x="816.5" y="35.0" width="131.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="819.5" y="46.0">byte[]</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (2 samples, 0.72%)</title><rect x="948.1" y="83.0" width="8.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="951.1" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.72%)</title><rect x="948.1" y="67.0" width="8.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="951.1" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.72%)</title><rect x="948.1" y="51.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="951.1" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.72%)</title><rect x="948.1" y="35.0" width="8.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="951.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (3 samples, 1.08%)</title><rect x="956.5" y="147.0" width="12.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="959.5" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 1.08%)</title><rect x="956.5" y="131.0" width="12.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="959.5" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 1.08%)</title><rect x="956.5" y="115.0" width="12.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="959.5" y="126.0"></text>
</g>
<g>
<title>[worker tid=3112] (52 samples, 18.71%)</title><rect x="969.3" y="307.0" width="220.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="972.3" y="318.0">[worker tid=3112]</text>
</g>
<g>
<title>java/lang/Thread.run (52 samples, 18.71%)</title><rect x="969.3" y="291.0" width="220.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="972.3" y="302.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (52 samples, 18.71%)</title><rect x="969.3" y="275.0" width="220.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="972.3" y="286.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (52 samples, 18.71%)</title><rect x="969.3" y="259.0" width="220.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="972.3" y="270.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.36%)</title><rect x="969.3" y="243.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="972.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.36%)</title><rect x="969.3" y="227.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="972.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.36%)</title><rect x="969.3" y="211.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="972.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.36%)</title><rect x="969.3" y="195.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="972.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.36%)</title><rect x="969.3" y="179.0" width="4.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="972.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$66/82316169.run (51 samples, 18.35%)</title><rect x="973.5" y="243.0" width="216.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="976.5" y="254.0">ru/mail/polis/service/impl/A..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (51 samples, 18.35%)</title><rect x="973.5" y="227.0" width="216.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.5" y="238.0">ru/mail/polis/service/impl/A..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 1.08%)</title><rect x="973.5" y="211.0" width="12.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="976.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 1.08%)</title><rect x="973.5" y="195.0" width="12.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="976.5" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 1.08%)</title><rect x="973.5" y="179.0" width="12.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="976.5" y="190.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 1.08%)</title><rect x="973.5" y="163.0" width="12.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.5" y="174.0"></text>
</g>
<g>
<title>byte[] (3 samples, 1.08%)</title><rect x="973.5" y="147.0" width="12.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="976.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/1397497046.act (48 samples, 17.27%)</title><rect x="986.3" y="211.0" width="203.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="989.3" y="222.0">ru/mail/polis/service/impl/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (48 samples, 17.27%)</title><rect x="986.3" y="195.0" width="203.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="989.3" y="206.0">ru/mail/polis/service/impl/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (48 samples, 17.27%)</title><rect x="986.3" y="179.0" width="203.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="989.3" y="190.0">ru/mail/polis/service/impl/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 1.08%)</title><rect x="986.3" y="163.0" width="12.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="989.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 1.08%)</title><rect x="986.3" y="147.0" width="12.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="989.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 1.08%)</title><rect x="986.3" y="131.0" width="12.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="989.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 1.80%)</title><rect x="999.0" y="163.0" width="21.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1002.0" y="174.0">o..</text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.36%)</title><rect x="999.0" y="147.0" width="4.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1002.0" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.36%)</title><rect x="1003.2" y="147.0" width="4.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1006.2" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 1.08%)</title><rect x="1007.5" y="147.0" width="12.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1010.5" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 1.08%)</title><rect x="1007.5" y="131.0" width="12.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1010.5" y="142.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.72%)</title><rect x="1007.5" y="115.0" width="8.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1010.5" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.36%)</title><rect x="1016.0" y="115.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1019.0" y="126.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.36%)</title><rect x="1016.0" y="99.0" width="4.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1019.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (40 samples, 14.39%)</title><rect x="1020.2" y="163.0" width="169.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1023.2" y="174.0">ru/mail/polis/dao/impl..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (34 samples, 12.23%)</title><rect x="1020.2" y="147.0" width="144.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1023.2" y="158.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (34 samples, 12.23%)</title><rect x="1020.2" y="131.0" width="144.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1023.2" y="142.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (34 samples, 12.23%)</title><rect x="1020.2" y="115.0" width="144.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1023.2" y="126.0">org/rocksdb/util/B..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (34 samples, 12.23%)</title><rect x="1020.2" y="99.0" width="144.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1023.2" y="110.0">org/rocksdb/util/B..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (32 samples, 11.51%)</title><rect x="1020.2" y="83.0" width="135.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1023.2" y="94.0">org/rocksdb/Abstr..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (32 samples, 11.51%)</title><rect x="1020.2" y="67.0" width="135.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1023.2" y="78.0">org/rocksdb/Slice..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (32 samples, 11.51%)</title><rect x="1020.2" y="51.0" width="135.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1023.2" y="62.0">org/rocksdb/Slice..</text>
</g>
<g>
<title>byte[] (32 samples, 11.51%)</title><rect x="1020.2" y="35.0" width="135.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1023.2" y="46.0">byte[]</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (2 samples, 0.72%)</title><rect x="1156.0" y="83.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1159.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.72%)</title><rect x="1156.0" y="67.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1159.0" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.72%)</title><rect x="1156.0" y="51.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1159.0" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.72%)</title><rect x="1156.0" y="35.0" width="8.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1159.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (6 samples, 2.16%)</title><rect x="1164.5" y="147.0" width="25.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1167.5" y="158.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 2.16%)</title><rect x="1164.5" y="131.0" width="25.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1167.5" y="142.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.36%)</title><rect x="1164.5" y="115.0" width="4.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1167.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 1.80%)</title><rect x="1168.8" y="115.0" width="21.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1171.8" y="126.0">j..</text>
</g>
<g>
<title>byte[] (5 samples, 1.80%)</title><rect x="1168.8" y="99.0" width="21.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1171.8" y="110.0">b..</text>
</g>
</g>
</svg>
