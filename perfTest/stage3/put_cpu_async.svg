<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="917"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="917"> </text>
<g id="frames">
<g>
<title>all (442 samples, 100.00%)</title><rect x="10.0" y="883.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="894.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=2068] (4 samples, 0.90%)</title><rect x="10.0" y="867.0" width="10.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (4 samples, 0.90%)</title><rect x="10.0" y="851.0" width="10.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>one/nio/server/Server.register (1 samples, 0.23%)</title><rect x="15.3" y="835.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.3" y="846.0"></text>
</g>
<g>
<title>one/nio/server/Server.getSmallestSelector (1 samples, 0.23%)</title><rect x="15.3" y="819.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.current (1 samples, 0.23%)</title><rect x="15.3" y="803.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.createSession (1 samples, 0.23%)</title><rect x="18.0" y="835.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.0" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=2064] (14 samples, 3.17%)</title><rect x="20.7" y="867.0" width="37.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="23.7" y="878.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14 samples, 3.17%)</title><rect x="20.7" y="851.0" width="37.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.7" y="862.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.45%)</title><rect x="20.7" y="835.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.45%)</title><rect x="20.7" y="819.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.7" y="830.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.23%)</title><rect x="23.3" y="803.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="26.3" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="23.3" y="787.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="26.3" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="23.3" y="771.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="26.3" y="782.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.23%)</title><rect x="23.3" y="755.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="26.3" y="766.0"></text>
</g>
<g>
<title>fput (1 samples, 0.23%)</title><rect x="23.3" y="739.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="26.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (12 samples, 2.71%)</title><rect x="26.0" y="835.0" width="32.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="29.0" y="846.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (11 samples, 2.49%)</title><rect x="28.7" y="819.0" width="29.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.7" y="830.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (2 samples, 0.45%)</title><rect x="28.7" y="803.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="31.7" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (2 samples, 0.45%)</title><rect x="28.7" y="787.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.7" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (2 samples, 0.45%)</title><rect x="28.7" y="771.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (2 samples, 0.45%)</title><rect x="28.7" y="755.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="28.7" y="739.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="31.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="28.7" y="723.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="31.7" y="734.0"></text>
</g>
<g>
<title>__GI___shutdown (1 samples, 0.23%)</title><rect x="28.7" y="707.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="31.7" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="28.7" y="691.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="31.7" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="28.7" y="675.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="31.7" y="686.0"></text>
</g>
<g>
<title>sys_shutdown (1 samples, 0.23%)</title><rect x="28.7" y="659.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="31.7" y="670.0"></text>
</g>
<g>
<title>inet_shutdown (1 samples, 0.23%)</title><rect x="28.7" y="643.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="31.7" y="654.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.23%)</title><rect x="28.7" y="627.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="31.7" y="638.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.23%)</title><rect x="28.7" y="611.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="31.7" y="622.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.23%)</title><rect x="28.7" y="595.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="31.7" y="606.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.23%)</title><rect x="28.7" y="579.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="31.7" y="590.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.23%)</title><rect x="28.7" y="563.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="31.7" y="574.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.23%)</title><rect x="28.7" y="547.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="31.7" y="558.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.23%)</title><rect x="28.7" y="531.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="31.7" y="542.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.23%)</title><rect x="28.7" y="515.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="31.7" y="526.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.23%)</title><rect x="28.7" y="499.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="31.7" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.23%)</title><rect x="28.7" y="483.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="31.7" y="494.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.23%)</title><rect x="28.7" y="467.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="31.7" y="478.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.23%)</title><rect x="28.7" y="451.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="31.7" y="462.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.23%)</title><rect x="28.7" y="435.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="31.7" y="446.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.23%)</title><rect x="28.7" y="419.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="31.7" y="430.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.23%)</title><rect x="28.7" y="403.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="31.7" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="28.7" y="387.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="31.7" y="398.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="28.7" y="371.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="31.7" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="28.7" y="355.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="31.7" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="28.7" y="339.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="31.7" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="28.7" y="323.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="31.7" y="334.0"></text>
</g>
<g>
<title>__GI___close (1 samples, 0.23%)</title><rect x="31.4" y="739.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="34.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="31.4" y="723.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="34.4" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="31.4" y="707.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="34.4" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.23%)</title><rect x="31.4" y="691.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="34.4" y="702.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.23%)</title><rect x="31.4" y="675.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="34.4" y="686.0"></text>
</g>
<g>
<title>__fput (1 samples, 0.23%)</title><rect x="31.4" y="659.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="34.4" y="670.0"></text>
</g>
<g>
<title>sock_close (1 samples, 0.23%)</title><rect x="31.4" y="643.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="34.4" y="654.0"></text>
</g>
<g>
<title>sock_release (1 samples, 0.23%)</title><rect x="31.4" y="627.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="34.4" y="638.0"></text>
</g>
<g>
<title>inet_release (1 samples, 0.23%)</title><rect x="31.4" y="611.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="34.4" y="622.0"></text>
</g>
<g>
<title>tcp_close (1 samples, 0.23%)</title><rect x="31.4" y="595.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="34.4" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.23%)</title><rect x="31.4" y="579.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="34.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7 samples, 1.58%)</title><rect x="34.0" y="803.0" width="18.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (6 samples, 1.36%)</title><rect x="34.0" y="787.0" width="16.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (6 samples, 1.36%)</title><rect x="34.0" y="771.0" width="16.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.0" y="782.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (6 samples, 1.36%)</title><rect x="34.0" y="755.0" width="16.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.23%)</title><rect x="34.0" y="739.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.23%)</title><rect x="34.0" y="723.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.23%)</title><rect x="34.0" y="707.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.0" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.23%)</title><rect x="34.0" y="691.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (5 samples, 1.13%)</title><rect x="36.7" y="739.0" width="13.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="39.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (5 samples, 1.13%)</title><rect x="36.7" y="723.0" width="13.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 1.13%)</title><rect x="36.7" y="707.0" width="13.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="39.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 1.13%)</title><rect x="36.7" y="691.0" width="13.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 1.13%)</title><rect x="36.7" y="675.0" width="13.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="39.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 1.13%)</title><rect x="36.7" y="659.0" width="13.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 1.13%)</title><rect x="36.7" y="643.0" width="13.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 1.13%)</title><rect x="36.7" y="627.0" width="13.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 1.13%)</title><rect x="36.7" y="611.0" width="13.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 1.13%)</title><rect x="36.7" y="595.0" width="13.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.7" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.45%)</title><rect x="36.7" y="579.0" width="5.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="39.7" y="590.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.23%)</title><rect x="36.7" y="563.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="39.7" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.23%)</title><rect x="39.4" y="563.0" width="2.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="42.4" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.68%)</title><rect x="42.0" y="579.0" width="8.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="45.0" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.68%)</title><rect x="42.0" y="563.0" width="8.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="45.0" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.68%)</title><rect x="42.0" y="547.0" width="8.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="45.0" y="558.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.68%)</title><rect x="42.0" y="531.0" width="8.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="45.0" y="542.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.45%)</title><rect x="44.7" y="515.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="47.7" y="526.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.45%)</title><rect x="44.7" y="499.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="47.7" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.45%)</title><rect x="44.7" y="483.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="47.7" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="47.4" y="467.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="50.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.23%)</title><rect x="50.0" y="787.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.23%)</title><rect x="50.0" y="771.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.23%)</title><rect x="50.0" y="755.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.0" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.45%)</title><rect x="52.7" y="803.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.7" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.45%)</title><rect x="52.7" y="787.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.7" y="798.0"></text>
</g>
<g>
<title>__libc_recv (2 samples, 0.45%)</title><rect x="52.7" y="771.0" width="5.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="55.7" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.45%)</title><rect x="52.7" y="755.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="55.7" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.45%)</title><rect x="52.7" y="739.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="55.7" y="750.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=2065] (15 samples, 3.39%)</title><rect x="58.1" y="867.0" width="40.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="61.1" y="878.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (15 samples, 3.39%)</title><rect x="58.1" y="851.0" width="40.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.1" y="862.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.23%)</title><rect x="66.1" y="835.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.45%)</title><rect x="68.7" y="835.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.45%)</title><rect x="68.7" y="819.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.7" y="830.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.45%)</title><rect x="68.7" y="803.0" width="5.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="71.7" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="71.4" y="787.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="74.4" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="71.4" y="771.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="74.4" y="782.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.23%)</title><rect x="71.4" y="755.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="74.4" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.23%)</title><rect x="71.4" y="739.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="74.4" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.23%)</title><rect x="71.4" y="723.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="74.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (9 samples, 2.04%)</title><rect x="74.1" y="835.0" width="24.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.1" y="846.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9 samples, 2.04%)</title><rect x="74.1" y="819.0" width="24.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.1" y="830.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (1 samples, 0.23%)</title><rect x="74.1" y="803.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.1" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (1 samples, 0.23%)</title><rect x="74.1" y="787.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.1" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 0.23%)</title><rect x="74.1" y="771.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (1 samples, 0.23%)</title><rect x="74.1" y="755.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.1" y="766.0"></text>
</g>
<g>
<title>__GI___close (1 samples, 0.23%)</title><rect x="74.1" y="739.0" width="2.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="77.1" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="74.1" y="723.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="77.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="74.1" y="707.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="77.1" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.23%)</title><rect x="74.1" y="691.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="77.1" y="702.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.23%)</title><rect x="74.1" y="675.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="77.1" y="686.0"></text>
</g>
<g>
<title>__fput (1 samples, 0.23%)</title><rect x="74.1" y="659.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="77.1" y="670.0"></text>
</g>
<g>
<title>__dentry_kill (1 samples, 0.23%)</title><rect x="74.1" y="643.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="77.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6 samples, 1.36%)</title><rect x="76.7" y="803.0" width="16.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5 samples, 1.13%)</title><rect x="76.7" y="787.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 1.13%)</title><rect x="76.7" y="771.0" width="13.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.7" y="782.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (5 samples, 1.13%)</title><rect x="76.7" y="755.0" width="13.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="79.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (5 samples, 1.13%)</title><rect x="76.7" y="739.0" width="13.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (5 samples, 1.13%)</title><rect x="76.7" y="723.0" width="13.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 1.13%)</title><rect x="76.7" y="707.0" width="13.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 1.13%)</title><rect x="76.7" y="691.0" width="13.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.90%)</title><rect x="76.7" y="675.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.90%)</title><rect x="76.7" y="659.0" width="10.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="79.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.90%)</title><rect x="76.7" y="643.0" width="10.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.90%)</title><rect x="76.7" y="627.0" width="10.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.90%)</title><rect x="76.7" y="611.0" width="10.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.90%)</title><rect x="76.7" y="595.0" width="10.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.7" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.68%)</title><rect x="76.7" y="579.0" width="8.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="79.7" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.23%)</title><rect x="76.7" y="563.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="79.7" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.45%)</title><rect x="79.4" y="563.0" width="5.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="82.4" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.23%)</title><rect x="84.8" y="579.0" width="2.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="87.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="84.8" y="563.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="87.8" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="84.8" y="547.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="87.8" y="558.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="84.8" y="531.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="87.8" y="542.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="84.8" y="515.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="87.8" y="526.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.23%)</title><rect x="84.8" y="499.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="87.8" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="84.8" y="483.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="87.8" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="84.8" y="467.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="87.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.23%)</title><rect x="87.4" y="675.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.23%)</title><rect x="87.4" y="659.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.23%)</title><rect x="87.4" y="643.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.23%)</title><rect x="87.4" y="627.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.23%)</title><rect x="87.4" y="611.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.23%)</title><rect x="87.4" y="595.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.4" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.23%)</title><rect x="87.4" y="579.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="90.4" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.23%)</title><rect x="87.4" y="563.0" width="2.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="90.4" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="87.4" y="547.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="90.4" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="87.4" y="531.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="90.4" y="542.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="87.4" y="515.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="90.4" y="526.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.23%)</title><rect x="87.4" y="499.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="90.4" y="510.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.23%)</title><rect x="87.4" y="483.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="90.4" y="494.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="87.4" y="467.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="90.4" y="478.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.23%)</title><rect x="87.4" y="451.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="90.4" y="462.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="87.4" y="435.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="90.4" y="446.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.23%)</title><rect x="87.4" y="419.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="90.4" y="430.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.23%)</title><rect x="87.4" y="403.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="90.4" y="414.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.23%)</title><rect x="87.4" y="387.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="90.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.23%)</title><rect x="90.1" y="787.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="93.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.23%)</title><rect x="90.1" y="771.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.23%)</title><rect x="90.1" y="755.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="93.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.23%)</title><rect x="90.1" y="739.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.23%)</title><rect x="90.1" y="723.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.1" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.23%)</title><rect x="90.1" y="707.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.45%)</title><rect x="92.8" y="803.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="95.8" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.45%)</title><rect x="92.8" y="787.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="95.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="92.8" y="771.0" width="2.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="95.8" y="782.0"></text>
</g>
<g>
<title>/snap/intellij-idea-community/177/jbr/lib/server/libjvm.so (1 samples, 0.23%)</title><rect x="92.8" y="755.0" width="2.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="95.8" y="766.0"></text>
</g>
<g>
<title>__vsnprintf (1 samples, 0.23%)</title><rect x="92.8" y="739.0" width="2.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="95.8" y="750.0"></text>
</g>
<g>
<title>_IO_vfprintf_internal (1 samples, 0.23%)</title><rect x="92.8" y="723.0" width="2.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="95.8" y="734.0"></text>
</g>
<g>
<title>__libc_recv (1 samples, 0.23%)</title><rect x="95.4" y="771.0" width="2.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="98.4" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="95.4" y="755.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="98.4" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="95.4" y="739.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="98.4" y="750.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=2066] (14 samples, 3.17%)</title><rect x="98.1" y="867.0" width="37.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="101.1" y="878.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14 samples, 3.17%)</title><rect x="98.1" y="851.0" width="37.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.1" y="862.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.90%)</title><rect x="98.1" y="835.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="101.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.90%)</title><rect x="98.1" y="819.0" width="10.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.1" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.23%)</title><rect x="98.1" y="803.0" width="2.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="101.1" y="814.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.23%)</title><rect x="100.8" y="803.0" width="2.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="103.8" y="814.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.45%)</title><rect x="103.4" y="803.0" width="5.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="106.4" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="106.1" y="787.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="109.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="106.1" y="771.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="109.1" y="782.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.23%)</title><rect x="106.1" y="755.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="109.1" y="766.0"></text>
</g>
<g>
<title>default_wake_function (1 samples, 0.23%)</title><rect x="106.1" y="739.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="109.1" y="750.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.23%)</title><rect x="106.1" y="723.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="109.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (10 samples, 2.26%)</title><rect x="108.8" y="835.0" width="26.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.8" y="846.0">o..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.23%)</title><rect x="108.8" y="819.0" width="2.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="111.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9 samples, 2.04%)</title><rect x="111.4" y="819.0" width="24.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.4" y="830.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (1 samples, 0.23%)</title><rect x="111.4" y="803.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.4" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (1 samples, 0.23%)</title><rect x="111.4" y="787.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="114.4" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 0.23%)</title><rect x="111.4" y="771.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="114.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (1 samples, 0.23%)</title><rect x="111.4" y="755.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.4" y="766.0"></text>
</g>
<g>
<title>__GI___close (1 samples, 0.23%)</title><rect x="111.4" y="739.0" width="2.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="114.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="111.4" y="723.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="114.4" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="111.4" y="707.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="114.4" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.23%)</title><rect x="111.4" y="691.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="114.4" y="702.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.23%)</title><rect x="111.4" y="675.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="114.4" y="686.0"></text>
</g>
<g>
<title>__fput (1 samples, 0.23%)</title><rect x="111.4" y="659.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="114.4" y="670.0"></text>
</g>
<g>
<title>__dentry_kill (1 samples, 0.23%)</title><rect x="111.4" y="643.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="114.4" y="654.0"></text>
</g>
<g>
<title>dentry_unlink_inode (1 samples, 0.23%)</title><rect x="111.4" y="627.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="114.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.45%)</title><rect x="114.1" y="803.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.23%)</title><rect x="114.1" y="787.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.23%)</title><rect x="114.1" y="771.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.1" y="782.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.23%)</title><rect x="114.1" y="755.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (1 samples, 0.23%)</title><rect x="114.1" y="739.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (1 samples, 0.23%)</title><rect x="114.1" y="723.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="117.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.23%)</title><rect x="114.1" y="707.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.23%)</title><rect x="114.1" y="691.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.23%)</title><rect x="114.1" y="675.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.23%)</title><rect x="114.1" y="659.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="117.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.23%)</title><rect x="114.1" y="643.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.23%)</title><rect x="114.1" y="627.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.23%)</title><rect x="114.1" y="611.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.23%)</title><rect x="114.1" y="595.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.1" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.23%)</title><rect x="114.1" y="579.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="117.1" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.23%)</title><rect x="114.1" y="563.0" width="2.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="117.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.23%)</title><rect x="116.8" y="787.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.23%)</title><rect x="116.8" y="771.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="119.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.23%)</title><rect x="116.8" y="755.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.8" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.23%)</title><rect x="116.8" y="739.0" width="2.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="119.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 1.36%)</title><rect x="119.5" y="803.0" width="16.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="122.5" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 1.36%)</title><rect x="119.5" y="787.0" width="16.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.68%)</title><rect x="119.5" y="771.0" width="8.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="122.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.68%)</title><rect x="119.5" y="755.0" width="8.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="122.5" y="766.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.68%)</title><rect x="119.5" y="739.0" width="8.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="122.5" y="750.0"></text>
</g>
<g>
<title>java_lang_Class::as_Klass(oopDesc*) (1 samples, 0.23%)</title><rect x="119.5" y="723.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="122.5" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.45%)</title><rect x="122.1" y="723.0" width="5.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="125.1" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.45%)</title><rect x="122.1" y="707.0" width="5.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="125.1" y="718.0"></text>
</g>
<g>
<title>__libc_recv (3 samples, 0.68%)</title><rect x="127.5" y="771.0" width="8.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="130.5" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.68%)</title><rect x="127.5" y="755.0" width="8.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="130.5" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.68%)</title><rect x="127.5" y="739.0" width="8.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="130.5" y="750.0"></text>
</g>
<g>
<title>sys_epoll_wait (2 samples, 0.45%)</title><rect x="130.1" y="723.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="133.1" y="734.0"></text>
</g>
<g>
<title>default_wake_function (2 samples, 0.45%)</title><rect x="130.1" y="707.0" width="5.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="133.1" y="718.0"></text>
</g>
<g>
<title>SYSC_recvfrom (2 samples, 0.45%)</title><rect x="130.1" y="691.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="133.1" y="702.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.23%)</title><rect x="130.1" y="675.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="133.1" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.23%)</title><rect x="130.1" y="659.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="133.1" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.23%)</title><rect x="130.1" y="643.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="133.1" y="654.0"></text>
</g>
<g>
<title>copy_to_iter (1 samples, 0.23%)</title><rect x="130.1" y="627.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="133.1" y="638.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.23%)</title><rect x="130.1" y="611.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="133.1" y="622.0"></text>
</g>
<g>
<title>is_vmalloc_or_module_addr (1 samples, 0.23%)</title><rect x="130.1" y="595.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="133.1" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.23%)</title><rect x="132.8" y="675.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="135.8" y="686.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.23%)</title><rect x="132.8" y="659.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="135.8" y="670.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.23%)</title><rect x="132.8" y="643.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="135.8" y="654.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=2067] (14 samples, 3.17%)</title><rect x="135.5" y="867.0" width="37.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="138.5" y="878.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14 samples, 3.17%)</title><rect x="135.5" y="851.0" width="37.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.5" y="862.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.68%)</title><rect x="138.1" y="835.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.45%)</title><rect x="140.8" y="819.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.8" y="830.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.45%)</title><rect x="140.8" y="803.0" width="5.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="143.8" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.45%)</title><rect x="140.8" y="787.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="143.8" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.45%)</title><rect x="140.8" y="771.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="143.8" y="782.0"></text>
</g>
<g>
<title>sys_epoll_wait (2 samples, 0.45%)</title><rect x="140.8" y="755.0" width="5.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="143.8" y="766.0"></text>
</g>
<g>
<title>default_wake_function (2 samples, 0.45%)</title><rect x="140.8" y="739.0" width="5.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="143.8" y="750.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.45%)</title><rect x="140.8" y="723.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="143.8" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="140.8" y="707.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="143.8" y="718.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (1 samples, 0.23%)</title><rect x="143.5" y="707.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="146.5" y="718.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.23%)</title><rect x="143.5" y="691.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="146.5" y="702.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.23%)</title><rect x="143.5" y="675.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="146.5" y="686.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.23%)</title><rect x="143.5" y="659.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="146.5" y="670.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.23%)</title><rect x="143.5" y="643.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="146.5" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (10 samples, 2.26%)</title><rect x="146.2" y="835.0" width="26.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="149.2" y="846.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (10 samples, 2.26%)</title><rect x="146.2" y="819.0" width="26.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.2" y="830.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (1 samples, 0.23%)</title><rect x="146.2" y="803.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.2" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.23%)</title><rect x="146.2" y="787.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.2" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.listen (1 samples, 0.23%)</title><rect x="146.2" y="771.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollCtl (1 samples, 0.23%)</title><rect x="146.2" y="755.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.2" y="766.0"></text>
</g>
<g>
<title>__GI_epoll_ctl (1 samples, 0.23%)</title><rect x="146.2" y="739.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="149.2" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="146.2" y="723.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="149.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="146.2" y="707.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="149.2" y="718.0"></text>
</g>
<g>
<title>__fput (1 samples, 0.23%)</title><rect x="146.2" y="691.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="149.2" y="702.0"></text>
</g>
<g>
<title>sys_epoll_ctl (1 samples, 0.23%)</title><rect x="146.2" y="675.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="149.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5 samples, 1.13%)</title><rect x="148.8" y="803.0" width="13.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4 samples, 0.90%)</title><rect x="148.8" y="787.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="151.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4 samples, 0.90%)</title><rect x="148.8" y="771.0" width="10.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.8" y="782.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4 samples, 0.90%)</title><rect x="148.8" y="755.0" width="10.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.23%)</title><rect x="148.8" y="739.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (3 samples, 0.68%)</title><rect x="151.5" y="739.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (3 samples, 0.68%)</title><rect x="151.5" y="723.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.68%)</title><rect x="151.5" y="707.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.68%)</title><rect x="151.5" y="691.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (1 samples, 0.23%)</title><rect x="151.5" y="675.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.23%)</title><rect x="154.2" y="675.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.23%)</title><rect x="154.2" y="659.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.23%)</title><rect x="154.2" y="643.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="157.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.23%)</title><rect x="154.2" y="627.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.23%)</title><rect x="154.2" y="611.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.23%)</title><rect x="154.2" y="595.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.2" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.23%)</title><rect x="154.2" y="579.0" width="2.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="157.2" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="154.2" y="563.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="157.2" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="154.2" y="547.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="157.2" y="558.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="154.2" y="531.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="157.2" y="542.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="154.2" y="515.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="157.2" y="526.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.23%)</title><rect x="154.2" y="499.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="157.2" y="510.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.11 (1 samples, 0.23%)</title><rect x="154.2" y="483.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="157.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.23%)</title><rect x="156.8" y="675.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.23%)</title><rect x="156.8" y="659.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="159.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.23%)</title><rect x="156.8" y="643.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="159.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.23%)</title><rect x="156.8" y="627.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.23%)</title><rect x="156.8" y="611.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="159.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.23%)</title><rect x="159.5" y="787.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.23%)</title><rect x="159.5" y="771.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.23%)</title><rect x="159.5" y="755.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.5" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.90%)</title><rect x="162.2" y="803.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.2" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.90%)</title><rect x="162.2" y="787.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="165.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="162.2" y="771.0" width="2.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="165.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="162.2" y="755.0" width="2.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="165.2" y="766.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.23%)</title><rect x="162.2" y="739.0" width="2.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="165.2" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.23%)</title><rect x="162.2" y="723.0" width="2.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="165.2" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.23%)</title><rect x="162.2" y="707.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="165.2" y="718.0"></text>
</g>
<g>
<title>__libc_recv (2 samples, 0.45%)</title><rect x="164.8" y="771.0" width="5.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="167.8" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.45%)</title><rect x="164.8" y="755.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="167.8" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.45%)</title><rect x="164.8" y="739.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="167.8" y="750.0"></text>
</g>
<g>
<title>sys_epoll_wait (2 samples, 0.45%)</title><rect x="164.8" y="723.0" width="5.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="167.8" y="734.0"></text>
</g>
<g>
<title>default_wake_function (2 samples, 0.45%)</title><rect x="164.8" y="707.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="167.8" y="718.0"></text>
</g>
<g>
<title>SYSC_recvfrom (2 samples, 0.45%)</title><rect x="164.8" y="691.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="167.8" y="702.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.45%)</title><rect x="164.8" y="675.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="167.8" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.45%)</title><rect x="164.8" y="659.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="167.8" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.23%)</title><rect x="167.5" y="643.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="170.5" y="654.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (1 samples, 0.23%)</title><rect x="170.2" y="771.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.2" y="782.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (1 samples, 0.23%)</title><rect x="170.2" y="755.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.2" y="766.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (1 samples, 0.23%)</title><rect x="170.2" y="739.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="173.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.23%)</title><rect x="170.2" y="723.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="173.2" y="734.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.23%)</title><rect x="170.2" y="707.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="173.2" y="718.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.23%)</title><rect x="170.2" y="691.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="173.2" y="702.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.23%)</title><rect x="170.2" y="675.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="173.2" y="686.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.23%)</title><rect x="170.2" y="659.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="173.2" y="670.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.23%)</title><rect x="170.2" y="643.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="173.2" y="654.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.23%)</title><rect x="170.2" y="627.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="173.2" y="638.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.23%)</title><rect x="170.2" y="611.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="173.2" y="622.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.23%)</title><rect x="170.2" y="595.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="173.2" y="606.0"></text>
</g>
<g>
<title>[tid=2036] (11 samples, 2.49%)</title><rect x="172.9" y="867.0" width="29.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="175.9" y="878.0">[t..</text>
</g>
<g>
<title>start_thread (11 samples, 2.49%)</title><rect x="172.9" y="851.0" width="29.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="175.9" y="862.0">st..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (11 samples, 2.49%)</title><rect x="172.9" y="835.0" width="29.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="175.9" y="846.0">th..</text>
</g>
<g>
<title>Thread::call_run() (11 samples, 2.49%)</title><rect x="172.9" y="819.0" width="29.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="175.9" y="830.0">Th..</text>
</g>
<g>
<title>JavaThread::run() (11 samples, 2.49%)</title><rect x="172.9" y="803.0" width="29.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="175.9" y="814.0">Ja..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (11 samples, 2.49%)</title><rect x="172.9" y="787.0" width="29.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="175.9" y="798.0">Ja..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (11 samples, 2.49%)</title><rect x="172.9" y="771.0" width="29.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="175.9" y="782.0">Co..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (11 samples, 2.49%)</title><rect x="172.9" y="755.0" width="29.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="175.9" y="766.0">Co..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (11 samples, 2.49%)</title><rect x="172.9" y="739.0" width="29.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="175.9" y="750.0">C2..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (11 samples, 2.49%)</title><rect x="172.9" y="723.0" width="29.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="175.9" y="734.0">Co..</text>
</g>
<g>
<title>Compile::Code_Gen() (6 samples, 1.36%)</title><rect x="172.9" y="707.0" width="16.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="175.9" y="718.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.45%)</title><rect x="172.9" y="691.0" width="5.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="175.9" y="702.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.45%)</title><rect x="172.9" y="675.0" width="5.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="175.9" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.23%)</title><rect x="172.9" y="659.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="175.9" y="670.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.23%)</title><rect x="175.5" y="659.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="178.5" y="670.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.23%)</title><rect x="175.5" y="643.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="178.5" y="654.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (4 samples, 0.90%)</title><rect x="178.2" y="691.0" width="10.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="181.2" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.45%)</title><rect x="178.2" y="675.0" width="5.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="181.2" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.45%)</title><rect x="178.2" y="659.0" width="5.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="181.2" y="670.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.23%)</title><rect x="180.9" y="643.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="183.9" y="654.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.23%)</title><rect x="183.5" y="675.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="186.5" y="686.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.23%)</title><rect x="183.5" y="659.0" width="2.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="186.5" y="670.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.23%)</title><rect x="186.2" y="675.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="189.2" y="686.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.23%)</title><rect x="186.2" y="659.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="189.2" y="670.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::copy_copy(Node*, Node*, Block*, unsigned int) (1 samples, 0.23%)</title><rect x="186.2" y="643.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="189.2" y="654.0"></text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (1 samples, 0.23%)</title><rect x="186.2" y="627.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="189.2" y="638.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 0.90%)</title><rect x="188.9" y="707.0" width="10.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="191.9" y="718.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.23%)</title><rect x="188.9" y="691.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="191.9" y="702.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.23%)</title><rect x="188.9" y="675.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="191.9" y="686.0"></text>
</g>
<g>
<title>ConnectionGraph::process_call_arguments(CallNode*) (1 samples, 0.23%)</title><rect x="188.9" y="659.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="191.9" y="670.0"></text>
</g>
<g>
<title>ciMethod::get_bcea() (1 samples, 0.23%)</title><rect x="188.9" y="643.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="191.9" y="654.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.23%)</title><rect x="188.9" y="627.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="191.9" y="638.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.164] (1 samples, 0.23%)</title><rect x="188.9" y="611.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="191.9" y="622.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.23%)</title><rect x="188.9" y="595.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="191.9" y="606.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (2 samples, 0.45%)</title><rect x="191.5" y="691.0" width="5.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="194.5" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.23%)</title><rect x="191.5" y="675.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="194.5" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.23%)</title><rect x="191.5" y="659.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="194.5" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.23%)</title><rect x="194.2" y="675.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="197.2" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.23%)</title><rect x="194.2" y="659.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="197.2" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::identical_backtoback_ifs(Node*) (1 samples, 0.23%)</title><rect x="194.2" y="643.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="197.2" y="654.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.23%)</title><rect x="196.9" y="691.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="199.9" y="702.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.23%)</title><rect x="196.9" y="675.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="199.9" y="686.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.23%)</title><rect x="196.9" y="659.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="199.9" y="670.0"></text>
</g>
<g>
<title>MulNode::Ideal(PhaseGVN*, bool) (1 samples, 0.23%)</title><rect x="196.9" y="643.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="199.9" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.23%)</title><rect x="199.5" y="707.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="202.5" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.23%)</title><rect x="199.5" y="691.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="202.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.23%)</title><rect x="199.5" y="675.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="202.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.23%)</title><rect x="199.5" y="659.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="202.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.23%)</title><rect x="199.5" y="643.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="202.5" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.23%)</title><rect x="199.5" y="627.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="202.5" y="638.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.23%)</title><rect x="199.5" y="611.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="202.5" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.23%)</title><rect x="199.5" y="595.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="202.5" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.23%)</title><rect x="199.5" y="579.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="202.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.23%)</title><rect x="199.5" y="563.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="202.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.23%)</title><rect x="199.5" y="547.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="202.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.23%)</title><rect x="199.5" y="531.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="202.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.23%)</title><rect x="199.5" y="515.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="202.5" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.23%)</title><rect x="199.5" y="499.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="202.5" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.23%)</title><rect x="199.5" y="483.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="202.5" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.23%)</title><rect x="199.5" y="467.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="202.5" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.23%)</title><rect x="199.5" y="451.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="202.5" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.23%)</title><rect x="199.5" y="435.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="202.5" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.23%)</title><rect x="199.5" y="419.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="202.5" y="430.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.23%)</title><rect x="199.5" y="403.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="202.5" y="414.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.23%)</title><rect x="199.5" y="387.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="202.5" y="398.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.23%)</title><rect x="199.5" y="371.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="202.5" y="382.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::compute_gen_kill_single(ciBytecodeStream*) (1 samples, 0.23%)</title><rect x="199.5" y="355.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="202.5" y="366.0"></text>
</g>
<g>
<title>[worker tid=2109] (92 samples, 20.81%)</title><rect x="202.2" y="867.0" width="245.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="205.2" y="878.0">[worker tid=2109]</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.45%)</title><rect x="202.2" y="851.0" width="5.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="205.2" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.run (90 samples, 20.36%)</title><rect x="207.6" y="851.0" width="240.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.6" y="862.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (90 samples, 20.36%)</title><rect x="207.6" y="835.0" width="240.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.6" y="846.0">java/util/concurrent/ThreadPoolE..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (90 samples, 20.36%)</title><rect x="207.6" y="819.0" width="240.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="210.6" y="830.0">java/util/concurrent/ThreadPoolE..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 1.81%)</title><rect x="210.2" y="803.0" width="21.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="213.2" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (8 samples, 1.81%)</title><rect x="210.2" y="787.0" width="21.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.2" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.dequeue (1 samples, 0.23%)</title><rect x="210.2" y="771.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="213.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 1.58%)</title><rect x="212.9" y="771.0" width="18.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="215.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 1.58%)</title><rect x="212.9" y="755.0" width="18.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="215.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 1.58%)</title><rect x="212.9" y="739.0" width="18.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.9" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 1.36%)</title><rect x="215.6" y="723.0" width="16.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="218.6" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.90%)</title><rect x="215.6" y="707.0" width="10.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="218.6" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (4 samples, 0.90%)</title><rect x="215.6" y="691.0" width="10.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="218.6" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.90%)</title><rect x="215.6" y="675.0" width="10.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="218.6" y="686.0"></text>
</g>
<g>
<title>sys_write (4 samples, 0.90%)</title><rect x="215.6" y="659.0" width="10.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="218.6" y="670.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.90%)</title><rect x="215.6" y="643.0" width="10.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="218.6" y="654.0"></text>
</g>
<g>
<title>SYSC_sendto (4 samples, 0.90%)</title><rect x="215.6" y="627.0" width="10.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="218.6" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (4 samples, 0.90%)</title><rect x="215.6" y="611.0" width="10.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="218.6" y="622.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.90%)</title><rect x="215.6" y="595.0" width="10.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="218.6" y="606.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.90%)</title><rect x="215.6" y="579.0" width="10.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="218.6" y="590.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.90%)</title><rect x="215.6" y="563.0" width="10.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="218.6" y="574.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.68%)</title><rect x="215.6" y="547.0" width="8.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="218.6" y="558.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.68%)</title><rect x="215.6" y="531.0" width="8.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="218.6" y="542.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.68%)</title><rect x="215.6" y="515.0" width="8.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="218.6" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.68%)</title><rect x="215.6" y="499.0" width="8.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="218.6" y="510.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.23%)</title><rect x="223.6" y="547.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="226.6" y="558.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.23%)</title><rect x="223.6" y="531.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="226.6" y="542.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.23%)</title><rect x="226.2" y="707.0" width="2.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="229.2" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.23%)</title><rect x="228.9" y="707.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="231.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.23%)</title><rect x="231.6" y="803.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$65/242281856.run (80 samples, 18.10%)</title><rect x="234.3" y="803.0" width="213.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.3" y="814.0">ru/mail/polis/service/impl/A..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (80 samples, 18.10%)</title><rect x="234.3" y="787.0" width="213.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.3" y="798.0">ru/mail/polis/service/impl/A..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (11 samples, 2.49%)</title><rect x="234.3" y="771.0" width="29.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.3" y="782.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (11 samples, 2.49%)</title><rect x="234.3" y="755.0" width="29.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="237.3" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 2.49%)</title><rect x="234.3" y="739.0" width="29.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.3" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 2.49%)</title><rect x="234.3" y="723.0" width="29.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.3" y="734.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (11 samples, 2.49%)</title><rect x="234.3" y="707.0" width="29.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.3" y="718.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (11 samples, 2.49%)</title><rect x="234.3" y="691.0" width="29.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.3" y="702.0">on..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.45%)</title><rect x="234.3" y="675.0" width="5.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="237.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.45%)</title><rect x="234.3" y="659.0" width="5.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="237.3" y="670.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.23%)</title><rect x="234.3" y="643.0" width="2.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="237.3" y="654.0"></text>
</g>
<g>
<title>__send (1 samples, 0.23%)</title><rect x="236.9" y="643.0" width="2.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="239.9" y="654.0"></text>
</g>
<g>
<title>__send (9 samples, 2.04%)</title><rect x="239.6" y="675.0" width="24.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="242.6" y="686.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (9 samples, 2.04%)</title><rect x="239.6" y="659.0" width="24.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="242.6" y="670.0">e..</text>
</g>
<g>
<title>do_syscall_64 (9 samples, 2.04%)</title><rect x="239.6" y="643.0" width="24.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="242.6" y="654.0">d..</text>
</g>
<g>
<title>sys_write (9 samples, 2.04%)</title><rect x="239.6" y="627.0" width="24.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="242.6" y="638.0">s..</text>
</g>
<g>
<title>sys_futex (4 samples, 0.90%)</title><rect x="239.6" y="611.0" width="10.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="242.6" y="622.0"></text>
</g>
<g>
<title>SYSC_sendto (4 samples, 0.90%)</title><rect x="239.6" y="595.0" width="10.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="242.6" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (4 samples, 0.90%)</title><rect x="239.6" y="579.0" width="10.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="242.6" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 0.90%)</title><rect x="239.6" y="563.0" width="10.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="242.6" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (4 samples, 0.90%)</title><rect x="239.6" y="547.0" width="10.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="242.6" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (4 samples, 0.90%)</title><rect x="239.6" y="531.0" width="10.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="242.6" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.68%)</title><rect x="239.6" y="515.0" width="8.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="242.6" y="526.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.68%)</title><rect x="239.6" y="499.0" width="8.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="242.6" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.68%)</title><rect x="239.6" y="483.0" width="8.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="242.6" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.68%)</title><rect x="239.6" y="467.0" width="8.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="242.6" y="478.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.68%)</title><rect x="239.6" y="451.0" width="8.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="242.6" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.68%)</title><rect x="239.6" y="435.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="242.6" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.68%)</title><rect x="239.6" y="419.0" width="8.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="242.6" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.18 (3 samples, 0.68%)</title><rect x="239.6" y="403.0" width="8.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="242.6" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.68%)</title><rect x="239.6" y="387.0" width="8.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="242.6" y="398.0"></text>
</g>
<g>
<title>__do_softirq (3 samples, 0.68%)</title><rect x="239.6" y="371.0" width="8.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="242.6" y="382.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.68%)</title><rect x="239.6" y="355.0" width="8.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="242.6" y="366.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.68%)</title><rect x="239.6" y="339.0" width="8.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="242.6" y="350.0"></text>
</g>
<g>
<title>sched_clock (3 samples, 0.68%)</title><rect x="239.6" y="323.0" width="8.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="242.6" y="334.0"></text>
</g>
<g>
<title>sched_clock (3 samples, 0.68%)</title><rect x="239.6" y="307.0" width="8.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="242.6" y="318.0"></text>
</g>
<g>
<title>enqueue_task_fair (3 samples, 0.68%)</title><rect x="239.6" y="291.0" width="8.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="242.6" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.68%)</title><rect x="239.6" y="275.0" width="8.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="242.6" y="286.0"></text>
</g>
<g>
<title>enqueue_entity (2 samples, 0.45%)</title><rect x="239.6" y="259.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="242.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.45%)</title><rect x="239.6" y="243.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="242.6" y="254.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (2 samples, 0.45%)</title><rect x="239.6" y="227.0" width="5.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="242.6" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.45%)</title><rect x="239.6" y="211.0" width="5.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="242.6" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.45%)</title><rect x="239.6" y="195.0" width="5.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="242.6" y="206.0"></text>
</g>
<g>
<title>find_busiest_group (2 samples, 0.45%)</title><rect x="239.6" y="179.0" width="5.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="242.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.45%)</title><rect x="239.6" y="163.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="242.6" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.45%)</title><rect x="239.6" y="147.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="242.6" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.45%)</title><rect x="239.6" y="131.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="242.6" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.45%)</title><rect x="239.6" y="115.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="242.6" y="126.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.23%)</title><rect x="239.6" y="99.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="242.6" y="110.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.23%)</title><rect x="239.6" y="83.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="242.6" y="94.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.23%)</title><rect x="239.6" y="67.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="242.6" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.23%)</title><rect x="242.3" y="99.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="245.3" y="110.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.23%)</title><rect x="244.9" y="259.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="247.9" y="270.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="244.9" y="243.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="247.9" y="254.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="244.9" y="227.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="247.9" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="244.9" y="211.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="247.9" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="244.9" y="195.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="247.9" y="206.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.23%)</title><rect x="244.9" y="179.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="247.9" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="244.9" y="163.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="247.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="244.9" y="147.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="247.9" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="244.9" y="131.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="247.9" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="244.9" y="115.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="247.9" y="126.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.23%)</title><rect x="244.9" y="99.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="247.9" y="110.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.23%)</title><rect x="244.9" y="83.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="247.9" y="94.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.23%)</title><rect x="247.6" y="515.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="250.6" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.23%)</title><rect x="247.6" y="499.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="250.6" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.23%)</title><rect x="247.6" y="483.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="250.6" y="494.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="247.6" y="467.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="250.6" y="478.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.23%)</title><rect x="247.6" y="451.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="250.6" y="462.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.23%)</title><rect x="247.6" y="435.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="250.6" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.23%)</title><rect x="247.6" y="419.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="250.6" y="430.0"></text>
</g>
<g>
<title>vfs_write (5 samples, 1.13%)</title><rect x="250.3" y="611.0" width="13.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="253.3" y="622.0"></text>
</g>
<g>
<title>SYSC_sendto (5 samples, 1.13%)</title><rect x="250.3" y="595.0" width="13.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="253.3" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (5 samples, 1.13%)</title><rect x="250.3" y="579.0" width="13.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="253.3" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (5 samples, 1.13%)</title><rect x="250.3" y="563.0" width="13.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="253.3" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.68%)</title><rect x="250.3" y="547.0" width="8.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="253.3" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (3 samples, 0.68%)</title><rect x="250.3" y="531.0" width="8.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="253.3" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.68%)</title><rect x="250.3" y="515.0" width="8.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="253.3" y="526.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.68%)</title><rect x="250.3" y="499.0" width="8.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="253.3" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.68%)</title><rect x="250.3" y="483.0" width="8.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="253.3" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.68%)</title><rect x="250.3" y="467.0" width="8.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="253.3" y="478.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.68%)</title><rect x="250.3" y="451.0" width="8.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="253.3" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.68%)</title><rect x="250.3" y="435.0" width="8.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="253.3" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.68%)</title><rect x="250.3" y="419.0" width="8.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="253.3" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.18 (3 samples, 0.68%)</title><rect x="250.3" y="403.0" width="8.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="253.3" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.68%)</title><rect x="250.3" y="387.0" width="8.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="253.3" y="398.0"></text>
</g>
<g>
<title>__do_softirq (3 samples, 0.68%)</title><rect x="250.3" y="371.0" width="8.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.3" y="382.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.68%)</title><rect x="250.3" y="355.0" width="8.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.3" y="366.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.68%)</title><rect x="250.3" y="339.0" width="8.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="253.3" y="350.0"></text>
</g>
<g>
<title>check_preempt_wakeup (1 samples, 0.23%)</title><rect x="250.3" y="323.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="253.3" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="250.3" y="307.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="253.3" y="318.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="250.3" y="291.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="253.3" y="302.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="250.3" y="275.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="253.3" y="286.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.23%)</title><rect x="250.3" y="259.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="253.3" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="250.3" y="243.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="253.3" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="250.3" y="227.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="253.3" y="238.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.23%)</title><rect x="250.3" y="211.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="253.3" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="250.3" y="195.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.3" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="250.3" y="179.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="253.3" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="250.3" y="163.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="253.3" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="250.3" y="147.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="253.3" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.23%)</title><rect x="250.3" y="131.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="253.3" y="142.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="252.9" y="323.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="255.9" y="334.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.23%)</title><rect x="252.9" y="307.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="255.9" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="252.9" y="291.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="255.9" y="302.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="252.9" y="275.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="255.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="252.9" y="259.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="255.9" y="270.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.23%)</title><rect x="252.9" y="243.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="255.9" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="252.9" y="227.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="255.9" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="252.9" y="211.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="255.9" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="252.9" y="195.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="255.9" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="252.9" y="179.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="255.9" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="252.9" y="163.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="255.9" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="252.9" y="147.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="255.9" y="158.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.23%)</title><rect x="252.9" y="131.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="255.9" y="142.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.23%)</title><rect x="252.9" y="115.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="255.9" y="126.0"></text>
</g>
<g>
<title>tcp_write_timer (1 samples, 0.23%)</title><rect x="255.6" y="323.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="258.6" y="334.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.23%)</title><rect x="255.6" y="307.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="258.6" y="318.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.23%)</title><rect x="255.6" y="291.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="258.6" y="302.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="255.6" y="275.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="258.6" y="286.0"></text>
</g>
<g>
<title>task_tick_fair (1 samples, 0.23%)</title><rect x="255.6" y="259.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="258.6" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="255.6" y="243.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="258.6" y="254.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.23%)</title><rect x="255.6" y="227.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="258.6" y="238.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="255.6" y="211.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="258.6" y="222.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="255.6" y="195.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="258.6" y="206.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.23%)</title><rect x="258.3" y="547.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="261.3" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.23%)</title><rect x="258.3" y="531.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="261.3" y="542.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.23%)</title><rect x="258.3" y="515.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="261.3" y="526.0"></text>
</g>
<g>
<title>tcp_cwnd_restart (1 samples, 0.23%)</title><rect x="261.0" y="547.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="264.0" y="558.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.23%)</title><rect x="261.0" y="531.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="264.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/11998182.act (69 samples, 15.61%)</title><rect x="263.6" y="771.0" width="184.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.6" y="782.0">ru/mail/polis/service/im..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (69 samples, 15.61%)</title><rect x="263.6" y="755.0" width="184.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="266.6" y="766.0">ru/mail/polis/service/im..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (69 samples, 15.61%)</title><rect x="263.6" y="739.0" width="184.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="266.6" y="750.0">ru/mail/polis/service/im..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (69 samples, 15.61%)</title><rect x="263.6" y="723.0" width="184.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="266.6" y="734.0">ru/mail/polis/dao/impl/R..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (69 samples, 15.61%)</title><rect x="263.6" y="707.0" width="184.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="266.6" y="718.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (69 samples, 15.61%)</title><rect x="263.6" y="691.0" width="184.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="266.6" y="702.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.23%)</title><rect x="263.6" y="675.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="266.6" y="686.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (57 samples, 12.90%)</title><rect x="266.3" y="675.0" width="152.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="269.3" y="686.0">Java_org_rocksdb_Ro..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="266.3" y="659.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="269.3" y="670.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (56 samples, 12.67%)</title><rect x="269.0" y="659.0" width="149.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="272.0" y="670.0">rocksdb_put_helper(..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (55 samples, 12.44%)</title><rect x="271.6" y="643.0" width="146.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="274.6" y="654.0">rocksdb::DB::Put(r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="271.6" y="627.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="274.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (54 samples, 12.22%)</title><rect x="274.3" y="627.0" width="144.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="277.3" y="638.0">rocksdb::DBImpl::P..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (54 samples, 12.22%)</title><rect x="274.3" y="611.0" width="144.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="277.3" y="622.0">rocksdb::DB::Put(r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (53 samples, 11.99%)</title><rect x="274.3" y="595.0" width="141.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="277.3" y="606.0">rocksdb::DBImpl::W..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (52 samples, 11.76%)</title><rect x="277.0" y="579.0" width="138.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="280.0" y="590.0">rocksdb::DBImpl::..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.23%)</title><rect x="279.6" y="563.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="282.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (7 samples, 1.58%)</title><rect x="282.3" y="563.0" width="18.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="285.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (7 samples, 1.58%)</title><rect x="282.3" y="547.0" width="18.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="285.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (7 samples, 1.58%)</title><rect x="282.3" y="531.0" width="18.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="285.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (7 samples, 1.58%)</title><rect x="282.3" y="515.0" width="18.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="285.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.23%)</title><rect x="282.3" y="499.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="285.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (6 samples, 1.36%)</title><rect x="285.0" y="499.0" width="16.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="288.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (6 samples, 1.36%)</title><rect x="285.0" y="483.0" width="16.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="288.0" y="494.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (6 samples, 1.36%)</title><rect x="285.0" y="467.0" width="16.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="288.0" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (6 samples, 1.36%)</title><rect x="285.0" y="451.0" width="16.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="288.0" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.36%)</title><rect x="285.0" y="435.0" width="16.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="288.0" y="446.0"></text>
</g>
<g>
<title>sys_write (6 samples, 1.36%)</title><rect x="285.0" y="419.0" width="16.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="288.0" y="430.0"></text>
</g>
<g>
<title>vfs_write (6 samples, 1.36%)</title><rect x="285.0" y="403.0" width="16.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="288.0" y="414.0"></text>
</g>
<g>
<title>new_sync_write (6 samples, 1.36%)</title><rect x="285.0" y="387.0" width="16.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="288.0" y="398.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (1 samples, 0.23%)</title><rect x="285.0" y="371.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="288.0" y="382.0"></text>
</g>
<g>
<title>__generic_file_write_iter (1 samples, 0.23%)</title><rect x="285.0" y="355.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="288.0" y="366.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.23%)</title><rect x="285.0" y="339.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="288.0" y="350.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.23%)</title><rect x="285.0" y="323.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="288.0" y="334.0"></text>
</g>
<g>
<title>ext4_da_write_begin	[ext4] (1 samples, 0.23%)</title><rect x="285.0" y="307.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="288.0" y="318.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.23%)</title><rect x="285.0" y="291.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="288.0" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.23%)</title><rect x="285.0" y="275.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="288.0" y="286.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.23%)</title><rect x="285.0" y="259.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="288.0" y="270.0"></text>
</g>
<g>
<title>sock_sendmsg (5 samples, 1.13%)</title><rect x="287.6" y="371.0" width="13.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="290.6" y="382.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (5 samples, 1.13%)</title><rect x="287.6" y="355.0" width="13.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="290.6" y="366.0"></text>
</g>
<g>
<title>__generic_file_write_iter (5 samples, 1.13%)</title><rect x="287.6" y="339.0" width="13.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="290.6" y="350.0"></text>
</g>
<g>
<title>file_update_time (4 samples, 0.90%)</title><rect x="287.6" y="323.0" width="10.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="290.6" y="334.0"></text>
</g>
<g>
<title>generic_perform_write (3 samples, 0.68%)</title><rect x="287.6" y="307.0" width="8.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="290.6" y="318.0"></text>
</g>
<g>
<title>ext4_da_write_begin	[ext4] (3 samples, 0.68%)</title><rect x="287.6" y="291.0" width="8.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="290.6" y="302.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.45%)</title><rect x="290.3" y="275.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="293.3" y="286.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.45%)</title><rect x="290.3" y="259.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="293.3" y="270.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.45%)</title><rect x="290.3" y="243.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="293.3" y="254.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (2 samples, 0.45%)</title><rect x="290.3" y="227.0" width="5.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="293.3" y="238.0"></text>
</g>
<g>
<title>__radix_tree_lookup (2 samples, 0.45%)</title><rect x="290.3" y="211.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="293.3" y="222.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.23%)</title><rect x="295.7" y="307.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="298.7" y="318.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.23%)</title><rect x="295.7" y="291.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="298.7" y="302.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.23%)</title><rect x="295.7" y="275.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="298.7" y="286.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.23%)</title><rect x="298.3" y="323.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="301.3" y="334.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.23%)</title><rect x="298.3" y="307.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="301.3" y="318.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.23%)</title><rect x="298.3" y="291.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="301.3" y="302.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (13 samples, 2.94%)</title><rect x="301.0" y="563.0" width="34.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="304.0" y="574.0">ro..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (13 samples, 2.94%)</title><rect x="301.0" y="547.0" width="34.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="304.0" y="558.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 2.94%)</title><rect x="301.0" y="531.0" width="34.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="304.0" y="542.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (13 samples, 2.94%)</title><rect x="301.0" y="515.0" width="34.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="304.0" y="526.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (13 samples, 2.94%)</title><rect x="301.0" y="499.0" width="34.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="304.0" y="510.0">ro..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (12 samples, 2.71%)</title><rect x="301.0" y="483.0" width="32.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="304.0" y="494.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (12 samples, 2.71%)</title><rect x="301.0" y="467.0" width="32.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="304.0" y="478.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (9 samples, 2.04%)</title><rect x="303.7" y="451.0" width="24.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="306.7" y="462.0">/..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 2.04%)</title><rect x="303.7" y="435.0" width="24.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="306.7" y="446.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="303.7" y="419.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="306.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (8 samples, 1.81%)</title><rect x="306.3" y="419.0" width="21.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="309.3" y="430.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="306.3" y="403.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="309.3" y="414.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.23%)</title><rect x="306.3" y="387.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="309.3" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="306.3" y="371.0" width="2.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="309.3" y="382.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (4 samples, 0.90%)</title><rect x="309.0" y="403.0" width="10.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="312.0" y="414.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (4 samples, 0.90%)</title><rect x="309.0" y="387.0" width="10.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="312.0" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="309.0" y="371.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="312.0" y="382.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.23%)</title><rect x="309.0" y="355.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="312.0" y="366.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.23%)</title><rect x="309.0" y="339.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="312.0" y="350.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.23%)</title><rect x="309.0" y="323.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="312.0" y="334.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.23%)</title><rect x="309.0" y="307.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="312.0" y="318.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.23%)</title><rect x="309.0" y="291.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="312.0" y="302.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (3 samples, 0.68%)</title><rect x="311.7" y="371.0" width="8.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="314.7" y="382.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.23%)</title><rect x="311.7" y="355.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="314.7" y="366.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::get_bool() (1 samples, 0.23%)</title><rect x="311.7" y="339.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="314.7" y="350.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.45%)</title><rect x="314.3" y="355.0" width="5.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="317.3" y="366.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="314.3" y="339.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="317.3" y="350.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.23%)</title><rect x="317.0" y="339.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="320.0" y="350.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.45%)</title><rect x="319.7" y="403.0" width="5.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="322.7" y="414.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="325.0" y="403.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="328.0" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.45%)</title><rect x="327.7" y="451.0" width="5.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="330.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="327.7" y="435.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="330.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::releaseJniEnv(unsigned char&amp;) const (1 samples, 0.23%)</title><rect x="330.4" y="435.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="333.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.23%)</title><rect x="333.0" y="483.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="336.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (15 samples, 3.39%)</title><rect x="335.7" y="563.0" width="40.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="338.7" y="574.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (15 samples, 3.39%)</title><rect x="335.7" y="547.0" width="40.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="338.7" y="558.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (15 samples, 3.39%)</title><rect x="335.7" y="531.0" width="40.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="338.7" y="542.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (15 samples, 3.39%)</title><rect x="335.7" y="515.0" width="40.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="338.7" y="526.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (15 samples, 3.39%)</title><rect x="335.7" y="499.0" width="40.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="338.7" y="510.0">roc..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (15 samples, 3.39%)</title><rect x="335.7" y="483.0" width="40.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="338.7" y="494.0">roc..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (15 samples, 3.39%)</title><rect x="335.7" y="467.0" width="40.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="338.7" y="478.0">boo..</text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (14 samples, 3.17%)</title><rect x="335.7" y="451.0" width="37.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="338.7" y="462.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (14 samples, 3.17%)</title><rect x="335.7" y="435.0" width="37.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="338.7" y="446.0">/tm..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (14 samples, 3.17%)</title><rect x="335.7" y="419.0" width="37.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="338.7" y="430.0">roc..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.23%)</title><rect x="335.7" y="403.0" width="2.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="338.7" y="414.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (13 samples, 2.94%)</title><rect x="338.4" y="403.0" width="34.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="341.4" y="414.0">ro..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.45%)</title><rect x="338.4" y="387.0" width="5.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="341.4" y="398.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.45%)</title><rect x="338.4" y="371.0" width="5.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="341.4" y="382.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.23%)</title><rect x="341.0" y="355.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="344.0" y="366.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.23%)</title><rect x="343.7" y="387.0" width="2.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="346.7" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="343.7" y="371.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="346.7" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="343.7" y="355.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="346.7" y="366.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="343.7" y="339.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="346.7" y="350.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.23%)</title><rect x="343.7" y="323.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="346.7" y="334.0"></text>
</g>
<g>
<title>__switch_to (1 samples, 0.23%)</title><rect x="343.7" y="307.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="346.7" y="318.0"></text>
</g>
<g>
<title>__switch_to_asm (1 samples, 0.23%)</title><rect x="343.7" y="291.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="346.7" y="302.0"></text>
</g>
<g>
<title>__switch_to_asm (1 samples, 0.23%)</title><rect x="343.7" y="275.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="346.7" y="286.0"></text>
</g>
<g>
<title>__switch_to_asm (1 samples, 0.23%)</title><rect x="343.7" y="259.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="346.7" y="270.0"></text>
</g>
<g>
<title>__perf_event_task_sched_in (1 samples, 0.23%)</title><rect x="343.7" y="243.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="346.7" y="254.0"></text>
</g>
<g>
<title>perf_pmu_nop_void (1 samples, 0.23%)</title><rect x="343.7" y="227.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="346.7" y="238.0"></text>
</g>
<g>
<title>ctx_sched_in (1 samples, 0.23%)</title><rect x="343.7" y="211.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="346.7" y="222.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="343.7" y="195.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="346.7" y="206.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="343.7" y="179.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="346.7" y="190.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="343.7" y="163.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="346.7" y="174.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 1.81%)</title><rect x="346.4" y="387.0" width="21.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="349.4" y="398.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (8 samples, 1.81%)</title><rect x="346.4" y="371.0" width="21.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="349.4" y="382.0">e..</text>
</g>
<g>
<title>do_syscall_64 (8 samples, 1.81%)</title><rect x="346.4" y="355.0" width="21.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="349.4" y="366.0">d..</text>
</g>
<g>
<title>sys_futex (2 samples, 0.45%)</title><rect x="349.0" y="339.0" width="5.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="352.0" y="350.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="349.0" y="323.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="352.0" y="334.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="349.0" y="307.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="352.0" y="318.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="349.0" y="291.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="352.0" y="302.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.23%)</title><rect x="349.0" y="275.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="352.0" y="286.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.23%)</title><rect x="349.0" y="259.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="352.0" y="270.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="349.0" y="243.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="352.0" y="254.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="349.0" y="227.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="352.0" y="238.0"></text>
</g>
<g>
<title>__switch_to (1 samples, 0.23%)</title><rect x="351.7" y="323.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="354.7" y="334.0"></text>
</g>
<g>
<title>__switch_to_asm (1 samples, 0.23%)</title><rect x="351.7" y="307.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="354.7" y="318.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="351.7" y="291.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="354.7" y="302.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.23%)</title><rect x="351.7" y="275.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="354.7" y="286.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.23%)</title><rect x="351.7" y="259.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="354.7" y="270.0"></text>
</g>
<g>
<title>sys_write (5 samples, 1.13%)</title><rect x="354.4" y="339.0" width="13.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="357.4" y="350.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 1.13%)</title><rect x="354.4" y="323.0" width="13.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="357.4" y="334.0"></text>
</g>
<g>
<title>do_futex (5 samples, 1.13%)</title><rect x="354.4" y="307.0" width="13.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="357.4" y="318.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.90%)</title><rect x="357.1" y="291.0" width="10.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="360.1" y="302.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.23%)</title><rect x="357.1" y="275.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="360.1" y="286.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.68%)</title><rect x="359.7" y="275.0" width="8.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="362.7" y="286.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.45%)</title><rect x="359.7" y="259.0" width="5.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="362.7" y="270.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.45%)</title><rect x="359.7" y="243.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="362.7" y="254.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.45%)</title><rect x="359.7" y="227.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="362.7" y="238.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="365.1" y="259.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="368.1" y="270.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="365.1" y="243.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="368.1" y="254.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="367.7" y="387.0" width="2.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="370.7" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.23%)</title><rect x="367.7" y="371.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="370.7" y="382.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.23%)</title><rect x="370.4" y="387.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="373.4" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.23%)</title><rect x="373.1" y="451.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="376.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="373.1" y="435.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="376.1" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="373.1" y="419.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="376.1" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.23%)</title><rect x="373.1" y="403.0" width="2.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="376.1" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="373.1" y="387.0" width="2.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="376.1" y="398.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (8 samples, 1.81%)</title><rect x="375.7" y="563.0" width="21.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="378.7" y="574.0">r..</text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (1 samples, 0.23%)</title><rect x="389.1" y="547.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="392.1" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.23%)</title><rect x="391.8" y="547.0" width="2.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="394.8" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="391.8" y="531.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="394.8" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="391.8" y="515.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="394.8" y="526.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="391.8" y="499.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="394.8" y="510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="391.8" y="483.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="394.8" y="494.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="391.8" y="467.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="394.8" y="478.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="391.8" y="451.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="394.8" y="462.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="391.8" y="435.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="394.8" y="446.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.23%)</title><rect x="391.8" y="419.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="394.8" y="430.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.23%)</title><rect x="391.8" y="403.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="394.8" y="414.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.23%)</title><rect x="391.8" y="387.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="394.8" y="398.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.23%)</title><rect x="391.8" y="371.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="394.8" y="382.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.23%)</title><rect x="394.4" y="547.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="397.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (4 samples, 0.90%)</title><rect x="397.1" y="563.0" width="10.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="400.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (4 samples, 0.90%)</title><rect x="397.1" y="547.0" width="10.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="400.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.45%)</title><rect x="407.8" y="563.0" width="5.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="410.8" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.45%)</title><rect x="407.8" y="547.0" width="5.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="410.8" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="410.5" y="531.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="413.5" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="410.5" y="515.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="413.5" y="526.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="410.5" y="499.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="413.5" y="510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="410.5" y="483.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="413.5" y="494.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="410.5" y="467.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="413.5" y="478.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.23%)</title><rect x="410.5" y="451.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="413.5" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="410.5" y="435.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="413.5" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="410.5" y="419.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="413.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (1 samples, 0.23%)</title><rect x="413.1" y="563.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="416.1" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.23%)</title><rect x="413.1" y="547.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="416.1" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="413.1" y="531.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="416.1" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="413.1" y="515.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="416.1" y="526.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="413.1" y="499.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="416.1" y="510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="413.1" y="483.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="416.1" y="494.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="413.1" y="467.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="416.1" y="478.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.23%)</title><rect x="413.1" y="451.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="416.1" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="413.1" y="435.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="416.1" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="413.1" y="419.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="416.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="415.8" y="595.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="418.8" y="606.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.23%)</title><rect x="415.8" y="579.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="418.8" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (2 samples, 0.45%)</title><rect x="418.5" y="675.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="421.5" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (9 samples, 2.04%)</title><rect x="423.8" y="675.0" width="24.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.8" y="686.0">o..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (8 samples, 1.81%)</title><rect x="426.5" y="659.0" width="21.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="429.5" y="670.0">o..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (8 samples, 1.81%)</title><rect x="426.5" y="643.0" width="21.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.5" y="654.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (8 samples, 1.81%)</title><rect x="426.5" y="627.0" width="21.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.5" y="638.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (8 samples, 1.81%)</title><rect x="426.5" y="611.0" width="21.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.5" y="622.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (5 samples, 1.13%)</title><rect x="429.1" y="595.0" width="13.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="432.1" y="606.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.23%)</title><rect x="434.5" y="579.0" width="2.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="437.5" y="590.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.23%)</title><rect x="434.5" y="563.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="437.5" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.45%)</title><rect x="437.1" y="579.0" width="5.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="440.1" y="590.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.23%)</title><rect x="439.8" y="563.0" width="2.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="442.8" y="574.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="442.5" y="595.0" width="2.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="445.5" y="606.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.23%)</title><rect x="445.2" y="595.0" width="2.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="448.2" y="606.0"></text>
</g>
<g>
<title>[worker tid=2110] (93 samples, 21.04%)</title><rect x="447.8" y="867.0" width="248.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="450.8" y="878.0">[worker tid=2110]</text>
</g>
<g>
<title>[not_walkable_Java] (4 samples, 0.90%)</title><rect x="447.8" y="851.0" width="10.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="450.8" y="862.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (4 samples, 0.90%)</title><rect x="447.8" y="835.0" width="10.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="450.8" y="846.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (4 samples, 0.90%)</title><rect x="447.8" y="819.0" width="10.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="450.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.90%)</title><rect x="447.8" y="803.0" width="10.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="450.8" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.90%)</title><rect x="447.8" y="787.0" width="10.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="450.8" y="798.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.90%)</title><rect x="447.8" y="771.0" width="10.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="450.8" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (4 samples, 0.90%)</title><rect x="447.8" y="755.0" width="10.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="450.8" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (4 samples, 0.90%)</title><rect x="447.8" y="739.0" width="10.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="450.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.45%)</title><rect x="447.8" y="723.0" width="5.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="450.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.45%)</title><rect x="447.8" y="707.0" width="5.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="450.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.45%)</title><rect x="447.8" y="691.0" width="5.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="450.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.45%)</title><rect x="447.8" y="675.0" width="5.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="450.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.45%)</title><rect x="447.8" y="659.0" width="5.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="450.8" y="670.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.45%)</title><rect x="447.8" y="643.0" width="5.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="450.8" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (2 samples, 0.45%)</title><rect x="447.8" y="627.0" width="5.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="450.8" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (2 samples, 0.45%)</title><rect x="447.8" y="611.0" width="5.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="450.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.45%)</title><rect x="447.8" y="595.0" width="5.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="450.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.45%)</title><rect x="447.8" y="579.0" width="5.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="450.8" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.45%)</title><rect x="447.8" y="563.0" width="5.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="450.8" y="574.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.45%)</title><rect x="447.8" y="547.0" width="5.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="450.8" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.45%)</title><rect x="447.8" y="531.0" width="5.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="450.8" y="542.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.45%)</title><rect x="447.8" y="515.0" width="5.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="450.8" y="526.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="450.5" y="499.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="453.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (2 samples, 0.45%)</title><rect x="453.2" y="723.0" width="5.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="456.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.45%)</title><rect x="453.2" y="707.0" width="5.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="456.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.45%)</title><rect x="453.2" y="691.0" width="5.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="456.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.45%)</title><rect x="453.2" y="675.0" width="5.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="456.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.45%)</title><rect x="453.2" y="659.0" width="5.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="456.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.45%)</title><rect x="453.2" y="643.0" width="5.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="456.2" y="654.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.45%)</title><rect x="453.2" y="627.0" width="5.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="456.2" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (2 samples, 0.45%)</title><rect x="453.2" y="611.0" width="5.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="456.2" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (2 samples, 0.45%)</title><rect x="453.2" y="595.0" width="5.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="456.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.45%)</title><rect x="453.2" y="579.0" width="5.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="456.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.45%)</title><rect x="453.2" y="563.0" width="5.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="456.2" y="574.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.45%)</title><rect x="453.2" y="547.0" width="5.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="456.2" y="558.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.45%)</title><rect x="453.2" y="531.0" width="5.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="456.2" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.45%)</title><rect x="453.2" y="515.0" width="5.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="456.2" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.45%)</title><rect x="453.2" y="499.0" width="5.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="456.2" y="510.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.23%)</title><rect x="453.2" y="483.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="456.2" y="494.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.23%)</title><rect x="455.8" y="483.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="458.8" y="494.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.23%)</title><rect x="458.5" y="851.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="461.5" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.run (88 samples, 19.91%)</title><rect x="461.2" y="851.0" width="234.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.2" y="862.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (88 samples, 19.91%)</title><rect x="461.2" y="835.0" width="234.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.2" y="846.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (88 samples, 19.91%)</title><rect x="461.2" y="819.0" width="234.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="464.2" y="830.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 1.81%)</title><rect x="469.2" y="803.0" width="21.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.2" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (8 samples, 1.81%)</title><rect x="469.2" y="787.0" width="21.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.2" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 1.58%)</title><rect x="469.2" y="771.0" width="18.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 1.58%)</title><rect x="469.2" y="755.0" width="18.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="472.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 1.58%)</title><rect x="469.2" y="739.0" width="18.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.2" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 1.58%)</title><rect x="469.2" y="723.0" width="18.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="472.2" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.23%)</title><rect x="469.2" y="707.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="472.2" y="718.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.23%)</title><rect x="471.9" y="707.0" width="2.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="474.9" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 1.13%)</title><rect x="474.5" y="707.0" width="13.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="477.5" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (4 samples, 0.90%)</title><rect x="477.2" y="691.0" width="10.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="480.2" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.90%)</title><rect x="477.2" y="675.0" width="10.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="480.2" y="686.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="477.2" y="659.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="480.2" y="670.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="477.2" y="643.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="480.2" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="477.2" y="627.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="480.2" y="638.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="477.2" y="611.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="480.2" y="622.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="477.2" y="595.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="480.2" y="606.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="477.2" y="579.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="480.2" y="590.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.23%)</title><rect x="477.2" y="563.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="480.2" y="574.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.23%)</title><rect x="477.2" y="547.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="480.2" y="558.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.23%)</title><rect x="477.2" y="531.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="480.2" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.23%)</title><rect x="477.2" y="515.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="480.2" y="526.0"></text>
</g>
<g>
<title>sys_write (3 samples, 0.68%)</title><rect x="479.9" y="659.0" width="8.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="482.9" y="670.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.68%)</title><rect x="479.9" y="643.0" width="8.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="482.9" y="654.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.45%)</title><rect x="479.9" y="627.0" width="5.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="482.9" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.45%)</title><rect x="479.9" y="611.0" width="5.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="482.9" y="622.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.45%)</title><rect x="479.9" y="595.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="482.9" y="606.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.45%)</title><rect x="479.9" y="579.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="482.9" y="590.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.45%)</title><rect x="479.9" y="563.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="482.9" y="574.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.45%)</title><rect x="479.9" y="547.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="482.9" y="558.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.45%)</title><rect x="479.9" y="531.0" width="5.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="482.9" y="542.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.45%)</title><rect x="479.9" y="515.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="482.9" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.45%)</title><rect x="479.9" y="499.0" width="5.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="482.9" y="510.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="485.2" y="627.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="488.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.23%)</title><rect x="487.9" y="771.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="490.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.23%)</title><rect x="487.9" y="755.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.23%)</title><rect x="487.9" y="739.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.23%)</title><rect x="487.9" y="723.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="490.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.23%)</title><rect x="487.9" y="707.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.9" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.23%)</title><rect x="487.9" y="691.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="490.9" y="702.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.23%)</title><rect x="487.9" y="675.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="490.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$65/242281856.run (77 samples, 17.42%)</title><rect x="490.5" y="803.0" width="205.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="493.5" y="814.0">ru/mail/polis/service/impl/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (77 samples, 17.42%)</title><rect x="490.5" y="787.0" width="205.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.5" y="798.0">ru/mail/polis/service/impl/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (11 samples, 2.49%)</title><rect x="490.5" y="771.0" width="29.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.5" y="782.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (11 samples, 2.49%)</title><rect x="490.5" y="755.0" width="29.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="493.5" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 2.49%)</title><rect x="490.5" y="739.0" width="29.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="493.5" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 2.26%)</title><rect x="493.2" y="723.0" width="26.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="496.2" y="734.0">o..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="493.2" y="707.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="496.2" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.23%)</title><rect x="493.2" y="691.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="496.2" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (9 samples, 2.04%)</title><rect x="495.9" y="707.0" width="24.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="498.9" y="718.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (9 samples, 2.04%)</title><rect x="495.9" y="691.0" width="24.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="498.9" y="702.0">o..</text>
</g>
<g>
<title>__send (9 samples, 2.04%)</title><rect x="495.9" y="675.0" width="24.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="498.9" y="686.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (9 samples, 2.04%)</title><rect x="495.9" y="659.0" width="24.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="498.9" y="670.0">e..</text>
</g>
<g>
<title>do_syscall_64 (9 samples, 2.04%)</title><rect x="495.9" y="643.0" width="24.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="498.9" y="654.0">d..</text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="495.9" y="627.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="498.9" y="638.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.23%)</title><rect x="495.9" y="611.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="498.9" y="622.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="495.9" y="595.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="498.9" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="495.9" y="579.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="498.9" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.23%)</title><rect x="495.9" y="563.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="498.9" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.23%)</title><rect x="495.9" y="547.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="498.9" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.23%)</title><rect x="495.9" y="531.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="498.9" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.23%)</title><rect x="495.9" y="515.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="498.9" y="526.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.23%)</title><rect x="495.9" y="499.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="498.9" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.23%)</title><rect x="495.9" y="483.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="498.9" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.23%)</title><rect x="495.9" y="467.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="498.9" y="478.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.23%)</title><rect x="495.9" y="451.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="498.9" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.23%)</title><rect x="495.9" y="435.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="498.9" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.23%)</title><rect x="495.9" y="419.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="498.9" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.23%)</title><rect x="495.9" y="403.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="498.9" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.23%)</title><rect x="495.9" y="387.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="498.9" y="398.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.23%)</title><rect x="495.9" y="371.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="498.9" y="382.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.23%)</title><rect x="495.9" y="355.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="498.9" y="366.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.23%)</title><rect x="495.9" y="339.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="498.9" y="350.0"></text>
</g>
<g>
<title>check_preempt_wakeup (1 samples, 0.23%)</title><rect x="495.9" y="323.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="498.9" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="495.9" y="307.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="498.9" y="318.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="495.9" y="291.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="498.9" y="302.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="495.9" y="275.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="498.9" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="495.9" y="259.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="498.9" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="495.9" y="243.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="498.9" y="254.0"></text>
</g>
<g>
<title>hw_breakpoint_exceptions_notify (1 samples, 0.23%)</title><rect x="495.9" y="227.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="498.9" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="495.9" y="211.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="498.9" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="495.9" y="195.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="498.9" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="495.9" y="179.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="498.9" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="495.9" y="163.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="498.9" y="174.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.23%)</title><rect x="495.9" y="147.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="498.9" y="158.0"></text>
</g>
<g>
<title>sys_write (8 samples, 1.81%)</title><rect x="498.6" y="627.0" width="21.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="501.6" y="638.0">s..</text>
</g>
<g>
<title>sys_futex (4 samples, 0.90%)</title><rect x="498.6" y="611.0" width="10.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="501.6" y="622.0"></text>
</g>
<g>
<title>SYSC_sendto (4 samples, 0.90%)</title><rect x="498.6" y="595.0" width="10.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="501.6" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (4 samples, 0.90%)</title><rect x="498.6" y="579.0" width="10.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="501.6" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 0.90%)</title><rect x="498.6" y="563.0" width="10.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="501.6" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.45%)</title><rect x="498.6" y="547.0" width="5.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="501.6" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.45%)</title><rect x="498.6" y="531.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="501.6" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.45%)</title><rect x="498.6" y="515.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="501.6" y="526.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.23%)</title><rect x="498.6" y="499.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="501.6" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.23%)</title><rect x="498.6" y="483.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="501.6" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.23%)</title><rect x="498.6" y="467.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="501.6" y="478.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.23%)</title><rect x="498.6" y="451.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="501.6" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.23%)</title><rect x="498.6" y="435.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="501.6" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.23%)</title><rect x="498.6" y="419.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="501.6" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.23%)</title><rect x="498.6" y="403.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="501.6" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.23%)</title><rect x="498.6" y="387.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="501.6" y="398.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.23%)</title><rect x="498.6" y="371.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="501.6" y="382.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.23%)</title><rect x="498.6" y="355.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="501.6" y="366.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.23%)</title><rect x="498.6" y="339.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="501.6" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="498.6" y="323.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="501.6" y="334.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.23%)</title><rect x="498.6" y="307.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="501.6" y="318.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="498.6" y="291.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="501.6" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="498.6" y="275.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="501.6" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="498.6" y="259.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="501.6" y="270.0"></text>
</g>
<g>
<title>update_sd_lb_stats (1 samples, 0.23%)</title><rect x="498.6" y="243.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="501.6" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="498.6" y="227.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="501.6" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="498.6" y="211.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="501.6" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="498.6" y="195.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="501.6" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="498.6" y="179.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="501.6" y="190.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.23%)</title><rect x="498.6" y="163.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="501.6" y="174.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.23%)</title><rect x="498.6" y="147.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="501.6" y="158.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.23%)</title><rect x="498.6" y="131.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="501.6" y="142.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.23%)</title><rect x="498.6" y="115.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="501.6" y="126.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.23%)</title><rect x="501.2" y="499.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="504.2" y="510.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.23%)</title><rect x="503.9" y="547.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="506.9" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.23%)</title><rect x="506.6" y="547.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="509.6" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.23%)</title><rect x="506.6" y="531.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="509.6" y="542.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.23%)</title><rect x="506.6" y="515.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="509.6" y="526.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.90%)</title><rect x="509.2" y="611.0" width="10.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="512.2" y="622.0"></text>
</g>
<g>
<title>SYSC_sendto (4 samples, 0.90%)</title><rect x="509.2" y="595.0" width="10.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="512.2" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (4 samples, 0.90%)</title><rect x="509.2" y="579.0" width="10.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="512.2" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 0.90%)</title><rect x="509.2" y="563.0" width="10.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="512.2" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (4 samples, 0.90%)</title><rect x="509.2" y="547.0" width="10.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="512.2" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (4 samples, 0.90%)</title><rect x="509.2" y="531.0" width="10.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="512.2" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.90%)</title><rect x="509.2" y="515.0" width="10.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="512.2" y="526.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.90%)</title><rect x="509.2" y="499.0" width="10.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="512.2" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.90%)</title><rect x="509.2" y="483.0" width="10.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="512.2" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.90%)</title><rect x="509.2" y="467.0" width="10.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="512.2" y="478.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.90%)</title><rect x="509.2" y="451.0" width="10.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="512.2" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.90%)</title><rect x="509.2" y="435.0" width="10.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="512.2" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.23%)</title><rect x="509.2" y="419.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="512.2" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.23%)</title><rect x="509.2" y="403.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="512.2" y="414.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.23%)</title><rect x="509.2" y="387.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="512.2" y="398.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.23%)</title><rect x="509.2" y="371.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="512.2" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.68%)</title><rect x="511.9" y="419.0" width="8.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="514.9" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.18 (3 samples, 0.68%)</title><rect x="511.9" y="403.0" width="8.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="514.9" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.68%)</title><rect x="511.9" y="387.0" width="8.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="514.9" y="398.0"></text>
</g>
<g>
<title>__do_softirq (3 samples, 0.68%)</title><rect x="511.9" y="371.0" width="8.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="514.9" y="382.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.68%)</title><rect x="511.9" y="355.0" width="8.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="514.9" y="366.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.68%)</title><rect x="511.9" y="339.0" width="8.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="514.9" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.45%)</title><rect x="511.9" y="323.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="514.9" y="334.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.23%)</title><rect x="511.9" y="307.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="514.9" y="318.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="511.9" y="291.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="514.9" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="511.9" y="275.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="514.9" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="511.9" y="259.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="514.9" y="270.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.23%)</title><rect x="511.9" y="243.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="514.9" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="511.9" y="227.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="514.9" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="511.9" y="211.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="514.9" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="511.9" y="195.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="514.9" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="511.9" y="179.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="514.9" y="190.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.23%)</title><rect x="511.9" y="163.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="514.9" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.23%)</title><rect x="511.9" y="147.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="514.9" y="158.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="511.9" y="131.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="514.9" y="142.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="514.6" y="307.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="517.6" y="318.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.23%)</title><rect x="514.6" y="291.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="517.6" y="302.0"></text>
</g>
<g>
<title>cpumask_next_and (1 samples, 0.23%)</title><rect x="514.6" y="275.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="517.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="514.6" y="259.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="517.6" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="514.6" y="243.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="517.6" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="514.6" y="227.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="517.6" y="238.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.23%)</title><rect x="514.6" y="211.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="517.6" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="514.6" y="195.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="517.6" y="206.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="517.2" y="323.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="520.2" y="334.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.23%)</title><rect x="517.2" y="307.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="520.2" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="517.2" y="291.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="520.2" y="302.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="517.2" y="275.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="520.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="517.2" y="259.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="520.2" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="517.2" y="243.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="520.2" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="517.2" y="227.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="520.2" y="238.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.23%)</title><rect x="517.2" y="211.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="520.2" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="517.2" y="195.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="520.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="517.2" y="179.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="520.2" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="517.2" y="163.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="520.2" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="517.2" y="147.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="520.2" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.23%)</title><rect x="517.2" y="131.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="520.2" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.23%)</title><rect x="517.2" y="115.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="520.2" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="517.2" y="99.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="520.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/11998182.act (66 samples, 14.93%)</title><rect x="519.9" y="771.0" width="176.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.9" y="782.0">ru/mail/polis/service/i..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (66 samples, 14.93%)</title><rect x="519.9" y="755.0" width="176.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.9" y="766.0">ru/mail/polis/service/i..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (66 samples, 14.93%)</title><rect x="519.9" y="739.0" width="176.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.9" y="750.0">ru/mail/polis/service/i..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (66 samples, 14.93%)</title><rect x="519.9" y="723.0" width="176.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.9" y="734.0">ru/mail/polis/dao/impl/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (66 samples, 14.93%)</title><rect x="519.9" y="707.0" width="176.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="522.9" y="718.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (66 samples, 14.93%)</title><rect x="519.9" y="691.0" width="176.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.9" y="702.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (47 samples, 10.63%)</title><rect x="519.9" y="675.0" width="125.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="522.9" y="686.0">Java_org_rocksd..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (47 samples, 10.63%)</title><rect x="519.9" y="659.0" width="125.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="522.9" y="670.0">rocksdb_put_hel..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (46 samples, 10.41%)</title><rect x="522.6" y="643.0" width="122.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="525.6" y="654.0">rocksdb::DB::Pu..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (46 samples, 10.41%)</title><rect x="522.6" y="627.0" width="122.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="525.6" y="638.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (46 samples, 10.41%)</title><rect x="522.6" y="611.0" width="122.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="525.6" y="622.0">rocksdb::DB::Pu..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (46 samples, 10.41%)</title><rect x="522.6" y="595.0" width="122.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="525.6" y="606.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (46 samples, 10.41%)</title><rect x="522.6" y="579.0" width="122.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="525.6" y="590.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.23%)</title><rect x="525.2" y="563.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="528.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (3 samples, 0.68%)</title><rect x="527.9" y="563.0" width="8.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="530.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.68%)</title><rect x="527.9" y="547.0" width="8.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="530.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.68%)</title><rect x="527.9" y="531.0" width="8.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="530.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.68%)</title><rect x="527.9" y="515.0" width="8.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="530.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (3 samples, 0.68%)</title><rect x="527.9" y="499.0" width="8.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="530.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (3 samples, 0.68%)</title><rect x="527.9" y="483.0" width="8.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="530.9" y="494.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (3 samples, 0.68%)</title><rect x="527.9" y="467.0" width="8.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="530.9" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.68%)</title><rect x="527.9" y="451.0" width="8.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="530.9" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.68%)</title><rect x="527.9" y="435.0" width="8.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="530.9" y="446.0"></text>
</g>
<g>
<title>sys_write (3 samples, 0.68%)</title><rect x="527.9" y="419.0" width="8.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="530.9" y="430.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.68%)</title><rect x="527.9" y="403.0" width="8.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="530.9" y="414.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.68%)</title><rect x="527.9" y="387.0" width="8.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="530.9" y="398.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.68%)</title><rect x="527.9" y="371.0" width="8.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="530.9" y="382.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (3 samples, 0.68%)</title><rect x="527.9" y="355.0" width="8.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="530.9" y="366.0"></text>
</g>
<g>
<title>__generic_file_write_iter (3 samples, 0.68%)</title><rect x="527.9" y="339.0" width="8.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="530.9" y="350.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.23%)</title><rect x="527.9" y="323.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="530.9" y="334.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.23%)</title><rect x="527.9" y="307.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="530.9" y="318.0"></text>
</g>
<g>
<title>ext4_da_write_begin	[ext4] (1 samples, 0.23%)</title><rect x="527.9" y="291.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="530.9" y="302.0"></text>
</g>
<g>
<title>generic_perform_write (2 samples, 0.45%)</title><rect x="530.6" y="323.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="533.6" y="334.0"></text>
</g>
<g>
<title>ext4_da_write_end	[ext4] (2 samples, 0.45%)</title><rect x="530.6" y="307.0" width="5.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="533.6" y="318.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.23%)</title><rect x="533.3" y="291.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="536.3" y="302.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.23%)</title><rect x="533.3" y="275.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="536.3" y="286.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="533.3" y="259.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="536.3" y="270.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (1 samples, 0.23%)</title><rect x="533.3" y="243.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="536.3" y="254.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="533.3" y="227.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="536.3" y="238.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access	[ext4] (1 samples, 0.23%)</title><rect x="533.3" y="211.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="536.3" y="222.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty	[ext4] (1 samples, 0.23%)</title><rect x="533.3" y="195.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="536.3" y="206.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (13 samples, 2.94%)</title><rect x="535.9" y="563.0" width="34.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="538.9" y="574.0">ro..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (13 samples, 2.94%)</title><rect x="535.9" y="547.0" width="34.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="538.9" y="558.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 2.94%)</title><rect x="535.9" y="531.0" width="34.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="538.9" y="542.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (13 samples, 2.94%)</title><rect x="535.9" y="515.0" width="34.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="538.9" y="526.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (13 samples, 2.94%)</title><rect x="535.9" y="499.0" width="34.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="538.9" y="510.0">ro..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (12 samples, 2.71%)</title><rect x="538.6" y="483.0" width="32.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="541.6" y="494.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (12 samples, 2.71%)</title><rect x="538.6" y="467.0" width="32.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="541.6" y="478.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (10 samples, 2.26%)</title><rect x="541.3" y="451.0" width="26.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="544.3" y="462.0">/..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (10 samples, 2.26%)</title><rect x="541.3" y="435.0" width="26.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="544.3" y="446.0">r..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="541.3" y="419.0" width="2.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="544.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (9 samples, 2.04%)</title><rect x="543.9" y="419.0" width="24.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="546.9" y="430.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="546.6" y="403.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="549.6" y="414.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.23%)</title><rect x="546.6" y="387.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="549.6" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="546.6" y="371.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="549.6" y="382.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (4 samples, 0.90%)</title><rect x="549.3" y="403.0" width="10.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="552.3" y="414.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (4 samples, 0.90%)</title><rect x="549.3" y="387.0" width="10.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="552.3" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (4 samples, 0.90%)</title><rect x="549.3" y="371.0" width="10.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="552.3" y="382.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.23%)</title><rect x="549.3" y="355.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="552.3" y="366.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.68%)</title><rect x="551.9" y="355.0" width="8.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="554.9" y="366.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="557.3" y="339.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="560.3" y="350.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.68%)</title><rect x="560.0" y="403.0" width="8.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="563.0" y="414.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.23%)</title><rect x="560.0" y="387.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="563.0" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.45%)</title><rect x="562.6" y="387.0" width="5.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="565.6" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="568.0" y="451.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="571.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="568.0" y="435.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="571.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.23%)</title><rect x="568.0" y="419.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="571.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (13 samples, 2.94%)</title><rect x="570.6" y="563.0" width="34.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="573.6" y="574.0">ro..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (13 samples, 2.94%)</title><rect x="570.6" y="547.0" width="34.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="573.6" y="558.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 2.71%)</title><rect x="573.3" y="531.0" width="32.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="576.3" y="542.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (12 samples, 2.71%)</title><rect x="573.3" y="515.0" width="32.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="576.3" y="526.0">ro..</text>
</g>
<g>
<title>_init (1 samples, 0.23%)</title><rect x="573.3" y="499.0" width="2.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="576.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (11 samples, 2.49%)</title><rect x="576.0" y="499.0" width="29.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="579.0" y="510.0">ro..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (11 samples, 2.49%)</title><rect x="576.0" y="483.0" width="29.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="579.0" y="494.0">ro..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (11 samples, 2.49%)</title><rect x="576.0" y="467.0" width="29.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="579.0" y="478.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (11 samples, 2.49%)</title><rect x="576.0" y="451.0" width="29.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="579.0" y="462.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (10 samples, 2.26%)</title><rect x="578.6" y="435.0" width="26.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="581.6" y="446.0">/..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (10 samples, 2.26%)</title><rect x="578.6" y="419.0" width="26.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="581.6" y="430.0">r..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (10 samples, 2.26%)</title><rect x="578.6" y="403.0" width="26.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="581.6" y="414.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="578.6" y="387.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="581.6" y="398.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.23%)</title><rect x="578.6" y="371.0" width="2.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="581.6" y="382.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.23%)</title><rect x="578.6" y="355.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="581.6" y="366.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.45%)</title><rect x="581.3" y="387.0" width="5.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="584.3" y="398.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.45%)</title><rect x="581.3" y="371.0" width="5.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="584.3" y="382.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.45%)</title><rect x="581.3" y="355.0" width="5.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="584.3" y="366.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="581.3" y="339.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="584.3" y="350.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.23%)</title><rect x="584.0" y="339.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="587.0" y="350.0"></text>
</g>
<g>
<title>__lll_lock_wait (3 samples, 0.68%)</title><rect x="586.7" y="387.0" width="8.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="589.7" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.68%)</title><rect x="586.7" y="371.0" width="8.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="589.7" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.68%)</title><rect x="586.7" y="355.0" width="8.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="589.7" y="366.0"></text>
</g>
<g>
<title>sys_write (3 samples, 0.68%)</title><rect x="586.7" y="339.0" width="8.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="589.7" y="350.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.68%)</title><rect x="586.7" y="323.0" width="8.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="589.7" y="334.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="586.7" y="307.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="589.7" y="318.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="586.7" y="291.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="589.7" y="302.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="586.7" y="275.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="589.7" y="286.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="586.7" y="259.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="589.7" y="270.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="586.7" y="243.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="589.7" y="254.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.45%)</title><rect x="589.3" y="307.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="592.3" y="318.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.23%)</title><rect x="589.3" y="291.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="592.3" y="302.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="589.3" y="275.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="592.3" y="286.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="589.3" y="259.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="592.3" y="270.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.23%)</title><rect x="589.3" y="243.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="592.3" y="254.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.23%)</title><rect x="589.3" y="227.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="592.3" y="238.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.23%)</title><rect x="589.3" y="211.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="592.3" y="222.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.23%)</title><rect x="589.3" y="195.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="592.3" y="206.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="592.0" y="291.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="595.0" y="302.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="592.0" y="275.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="595.0" y="286.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="592.0" y="259.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="595.0" y="270.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.23%)</title><rect x="592.0" y="243.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="595.0" y="254.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.23%)</title><rect x="592.0" y="227.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="595.0" y="238.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.23%)</title><rect x="592.0" y="211.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="595.0" y="222.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.23%)</title><rect x="592.0" y="195.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="595.0" y="206.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.45%)</title><rect x="594.7" y="387.0" width="5.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="597.7" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.45%)</title><rect x="594.7" y="371.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="597.7" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.45%)</title><rect x="594.7" y="355.0" width="5.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="597.7" y="366.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.45%)</title><rect x="594.7" y="339.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="597.7" y="350.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.45%)</title><rect x="594.7" y="323.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="597.7" y="334.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="594.7" y="307.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="597.7" y="318.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.23%)</title><rect x="594.7" y="291.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="597.7" y="302.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.23%)</title><rect x="594.7" y="275.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="597.7" y="286.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="594.7" y="259.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="597.7" y="270.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="594.7" y="243.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="597.7" y="254.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="594.7" y="227.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="597.7" y="238.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.23%)</title><rect x="597.3" y="307.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="600.3" y="318.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.23%)</title><rect x="597.3" y="291.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="600.3" y="302.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.23%)</title><rect x="597.3" y="275.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="600.3" y="286.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.23%)</title><rect x="597.3" y="259.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="600.3" y="270.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.23%)</title><rect x="600.0" y="387.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="603.0" y="398.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="602.7" y="387.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="605.7" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.23%)</title><rect x="602.7" y="371.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="605.7" y="382.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (6 samples, 1.36%)</title><rect x="605.3" y="563.0" width="16.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="608.3" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.23%)</title><rect x="618.7" y="547.0" width="2.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="621.7" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="618.7" y="531.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="621.7" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="618.7" y="515.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="621.7" y="526.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="618.7" y="499.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="621.7" y="510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="618.7" y="483.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="621.7" y="494.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="618.7" y="467.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="621.7" y="478.0"></text>
</g>
<g>
<title>check_preempt_wakeup (1 samples, 0.23%)</title><rect x="618.7" y="451.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="621.7" y="462.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="618.7" y="435.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="621.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (4 samples, 0.90%)</title><rect x="621.4" y="563.0" width="10.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="624.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (4 samples, 0.90%)</title><rect x="621.4" y="547.0" width="10.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="624.4" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.23%)</title><rect x="629.4" y="531.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="632.4" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="629.4" y="515.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="632.4" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="629.4" y="499.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="632.4" y="510.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="629.4" y="483.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="632.4" y="494.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="629.4" y="467.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="632.4" y="478.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="629.4" y="451.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="632.4" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="629.4" y="435.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="632.4" y="446.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="629.4" y="419.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="632.4" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.23%)</title><rect x="632.0" y="563.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="635.0" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.23%)</title><rect x="632.0" y="547.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="635.0" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="632.0" y="531.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="635.0" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="632.0" y="515.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="635.0" y="526.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="632.0" y="499.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="635.0" y="510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="632.0" y="483.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="635.0" y="494.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="632.0" y="467.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="635.0" y="478.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.23%)</title><rect x="632.0" y="451.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="635.0" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="632.0" y="435.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="635.0" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="632.0" y="419.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="635.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (1 samples, 0.23%)</title><rect x="634.7" y="563.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="637.7" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.23%)</title><rect x="634.7" y="547.0" width="2.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="637.7" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="634.7" y="531.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="637.7" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="634.7" y="515.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="637.7" y="526.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="634.7" y="499.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="637.7" y="510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="634.7" y="483.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="637.7" y="494.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="634.7" y="467.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="637.7" y="478.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.23%)</title><rect x="634.7" y="451.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="637.7" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="634.7" y="435.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="637.7" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="634.7" y="419.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="637.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.23%)</title><rect x="637.4" y="563.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="640.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.23%)</title><rect x="640.0" y="563.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="643.0" y="574.0"></text>
</g>
<g>
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base*) (1 samples, 0.23%)</title><rect x="642.7" y="563.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="645.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.45%)</title><rect x="645.4" y="675.0" width="5.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="648.4" y="686.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.23%)</title><rect x="645.4" y="659.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="648.4" y="670.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.23%)</title><rect x="648.1" y="659.0" width="2.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="651.1" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (3 samples, 0.68%)</title><rect x="650.7" y="675.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.7" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (14 samples, 3.17%)</title><rect x="658.7" y="675.0" width="37.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.7" y="686.0">org..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (14 samples, 3.17%)</title><rect x="658.7" y="659.0" width="37.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.7" y="670.0">org..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (14 samples, 3.17%)</title><rect x="658.7" y="643.0" width="37.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.7" y="654.0">org..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (14 samples, 3.17%)</title><rect x="658.7" y="627.0" width="37.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.7" y="638.0">org..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (14 samples, 3.17%)</title><rect x="658.7" y="611.0" width="37.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.7" y="622.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (14 samples, 3.17%)</title><rect x="658.7" y="595.0" width="37.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="661.7" y="606.0">Jav..</text>
</g>
<g>
<title>jni_NewByteArray (9 samples, 2.04%)</title><rect x="664.1" y="579.0" width="24.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="667.1" y="590.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (2 samples, 0.45%)</title><rect x="664.1" y="563.0" width="5.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="667.1" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.23%)</title><rect x="669.4" y="563.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="672.4" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.45%)</title><rect x="672.1" y="563.0" width="5.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="675.1" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.90%)</title><rect x="677.4" y="563.0" width="10.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="680.4" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.90%)</title><rect x="677.4" y="547.0" width="10.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="680.4" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.45%)</title><rect x="680.1" y="531.0" width="5.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="683.1" y="542.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.23%)</title><rect x="682.8" y="515.0" width="2.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="685.8" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.23%)</title><rect x="685.4" y="531.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="688.4" y="542.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.68%)</title><rect x="688.1" y="579.0" width="8.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="691.1" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.23%)</title><rect x="690.8" y="563.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="693.8" y="574.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.23%)</title><rect x="693.4" y="563.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="696.4" y="574.0"></text>
</g>
<g>
<title>[worker tid=2111] (92 samples, 20.81%)</title><rect x="696.1" y="867.0" width="245.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="699.1" y="878.0">[worker tid=2111]</text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.68%)</title><rect x="696.1" y="851.0" width="8.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="699.1" y="862.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (3 samples, 0.68%)</title><rect x="696.1" y="835.0" width="8.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="699.1" y="846.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (3 samples, 0.68%)</title><rect x="696.1" y="819.0" width="8.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="699.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.68%)</title><rect x="696.1" y="803.0" width="8.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="699.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.68%)</title><rect x="696.1" y="787.0" width="8.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="699.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.68%)</title><rect x="696.1" y="771.0" width="8.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="699.1" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (3 samples, 0.68%)</title><rect x="696.1" y="755.0" width="8.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="699.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (3 samples, 0.68%)</title><rect x="696.1" y="739.0" width="8.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="699.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.23%)</title><rect x="696.1" y="723.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="699.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.23%)</title><rect x="696.1" y="707.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="699.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="696.1" y="691.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="699.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.23%)</title><rect x="696.1" y="675.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="699.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.23%)</title><rect x="696.1" y="659.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="699.1" y="670.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.23%)</title><rect x="696.1" y="643.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="699.1" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (1 samples, 0.23%)</title><rect x="696.1" y="627.0" width="2.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="699.1" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (1 samples, 0.23%)</title><rect x="696.1" y="611.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="699.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="696.1" y="595.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="699.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="696.1" y="579.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="699.1" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="696.1" y="563.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="699.1" y="574.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.23%)</title><rect x="696.1" y="547.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="699.1" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="696.1" y="531.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="699.1" y="542.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="696.1" y="515.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="699.1" y="526.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.23%)</title><rect x="696.1" y="499.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="699.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (2 samples, 0.45%)</title><rect x="698.8" y="723.0" width="5.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="701.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.45%)</title><rect x="698.8" y="707.0" width="5.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="701.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.45%)</title><rect x="698.8" y="691.0" width="5.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="701.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.45%)</title><rect x="698.8" y="675.0" width="5.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="701.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.45%)</title><rect x="698.8" y="659.0" width="5.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="701.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.45%)</title><rect x="698.8" y="643.0" width="5.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="701.8" y="654.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.45%)</title><rect x="698.8" y="627.0" width="5.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="701.8" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (2 samples, 0.45%)</title><rect x="698.8" y="611.0" width="5.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="701.8" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (2 samples, 0.45%)</title><rect x="698.8" y="595.0" width="5.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="701.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.45%)</title><rect x="698.8" y="579.0" width="5.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="701.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.45%)</title><rect x="698.8" y="563.0" width="5.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="701.8" y="574.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.45%)</title><rect x="698.8" y="547.0" width="5.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="701.8" y="558.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.45%)</title><rect x="698.8" y="531.0" width="5.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="701.8" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.45%)</title><rect x="698.8" y="515.0" width="5.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="701.8" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.45%)</title><rect x="698.8" y="499.0" width="5.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="701.8" y="510.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="701.4" y="483.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="704.4" y="494.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.23%)</title><rect x="704.1" y="851.0" width="2.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="707.1" y="862.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.23%)</title><rect x="704.1" y="835.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="707.1" y="846.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.23%)</title><rect x="704.1" y="819.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="707.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="704.1" y="803.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="707.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="704.1" y="787.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="707.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="704.1" y="771.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="707.1" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.23%)</title><rect x="704.1" y="755.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="707.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.23%)</title><rect x="704.1" y="739.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="707.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.23%)</title><rect x="704.1" y="723.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="707.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.23%)</title><rect x="704.1" y="707.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="707.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="704.1" y="691.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="707.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.23%)</title><rect x="704.1" y="675.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="707.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.23%)</title><rect x="704.1" y="659.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="707.1" y="670.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.23%)</title><rect x="704.1" y="643.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="707.1" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (1 samples, 0.23%)</title><rect x="704.1" y="627.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="707.1" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (1 samples, 0.23%)</title><rect x="704.1" y="611.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="707.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="704.1" y="595.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="707.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="704.1" y="579.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="707.1" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="704.1" y="563.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="707.1" y="574.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.23%)</title><rect x="704.1" y="547.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="707.1" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="704.1" y="531.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="707.1" y="542.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="704.1" y="515.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="707.1" y="526.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.23%)</title><rect x="704.1" y="499.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="707.1" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (88 samples, 19.91%)</title><rect x="706.8" y="851.0" width="234.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="709.8" y="862.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (88 samples, 19.91%)</title><rect x="706.8" y="835.0" width="234.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.8" y="846.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (88 samples, 19.91%)</title><rect x="706.8" y="819.0" width="234.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="709.8" y="830.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 1.13%)</title><rect x="709.5" y="803.0" width="13.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (5 samples, 1.13%)</title><rect x="709.5" y="787.0" width="13.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="712.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 1.13%)</title><rect x="709.5" y="771.0" width="13.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 1.13%)</title><rect x="709.5" y="755.0" width="13.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 1.13%)</title><rect x="709.5" y="739.0" width="13.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="712.5" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.45%)</title><rect x="714.8" y="723.0" width="5.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="717.8" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.23%)</title><rect x="714.8" y="707.0" width="2.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="717.8" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="714.8" y="691.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="717.8" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="714.8" y="675.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="717.8" y="686.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="714.8" y="659.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="717.8" y="670.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="714.8" y="643.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="717.8" y="654.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="714.8" y="627.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="717.8" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="714.8" y="611.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="717.8" y="622.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="714.8" y="595.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="717.8" y="606.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.23%)</title><rect x="714.8" y="579.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="717.8" y="590.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.23%)</title><rect x="714.8" y="563.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="717.8" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.23%)</title><rect x="717.5" y="707.0" width="2.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="720.5" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="717.5" y="691.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="720.5" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="717.5" y="675.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="720.5" y="686.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="717.5" y="659.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="720.5" y="670.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="717.5" y="643.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="720.5" y="654.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="717.5" y="627.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="720.5" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="717.5" y="611.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="720.5" y="622.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="717.5" y="595.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="720.5" y="606.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="717.5" y="579.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="720.5" y="590.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="717.5" y="563.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="720.5" y="574.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.23%)</title><rect x="717.5" y="547.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="720.5" y="558.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.23%)</title><rect x="717.5" y="531.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="720.5" y="542.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.23%)</title><rect x="717.5" y="515.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="720.5" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.23%)</title><rect x="717.5" y="499.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="720.5" y="510.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.23%)</title><rect x="720.1" y="723.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="723.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$65/242281856.run (82 samples, 18.55%)</title><rect x="722.8" y="803.0" width="218.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.8" y="814.0">ru/mail/polis/service/impl/As..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (81 samples, 18.33%)</title><rect x="725.5" y="787.0" width="216.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="728.5" y="798.0">ru/mail/polis/service/impl/A..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (12 samples, 2.71%)</title><rect x="725.5" y="771.0" width="32.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.5" y="782.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 2.26%)</title><rect x="728.1" y="755.0" width="26.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.1" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 2.26%)</title><rect x="728.1" y="739.0" width="26.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.1" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 2.26%)</title><rect x="728.1" y="723.0" width="26.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="731.1" y="734.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10 samples, 2.26%)</title><rect x="728.1" y="707.0" width="26.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.1" y="718.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (10 samples, 2.26%)</title><rect x="728.1" y="691.0" width="26.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.1" y="702.0">o..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="728.1" y="675.0" width="2.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="731.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="728.1" y="659.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="731.1" y="670.0"></text>
</g>
<g>
<title>__send (1 samples, 0.23%)</title><rect x="728.1" y="643.0" width="2.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="731.1" y="654.0"></text>
</g>
<g>
<title>__send (9 samples, 2.04%)</title><rect x="730.8" y="675.0" width="24.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="733.8" y="686.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (9 samples, 2.04%)</title><rect x="730.8" y="659.0" width="24.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="733.8" y="670.0">e..</text>
</g>
<g>
<title>do_syscall_64 (9 samples, 2.04%)</title><rect x="730.8" y="643.0" width="24.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="733.8" y="654.0">d..</text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="730.8" y="627.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="733.8" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="730.8" y="611.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="733.8" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="730.8" y="595.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="733.8" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.23%)</title><rect x="730.8" y="579.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="733.8" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.23%)</title><rect x="730.8" y="563.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="733.8" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.23%)</title><rect x="730.8" y="547.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="733.8" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.23%)</title><rect x="730.8" y="531.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="733.8" y="542.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.23%)</title><rect x="730.8" y="515.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="733.8" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.23%)</title><rect x="730.8" y="499.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="733.8" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.23%)</title><rect x="730.8" y="483.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="733.8" y="494.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.23%)</title><rect x="730.8" y="467.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="733.8" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.23%)</title><rect x="730.8" y="451.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="733.8" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.23%)</title><rect x="730.8" y="435.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="733.8" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.23%)</title><rect x="730.8" y="419.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="733.8" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.23%)</title><rect x="730.8" y="403.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="733.8" y="414.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.23%)</title><rect x="730.8" y="387.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="733.8" y="398.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.23%)</title><rect x="730.8" y="371.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="733.8" y="382.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.23%)</title><rect x="730.8" y="355.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="733.8" y="366.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="730.8" y="339.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="733.8" y="350.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="730.8" y="323.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="733.8" y="334.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.23%)</title><rect x="730.8" y="307.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="733.8" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="730.8" y="291.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="733.8" y="302.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="730.8" y="275.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="733.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="730.8" y="259.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="733.8" y="270.0"></text>
</g>
<g>
<title>lapic_next_deadline (1 samples, 0.23%)</title><rect x="730.8" y="243.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="733.8" y="254.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.23%)</title><rect x="730.8" y="227.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="733.8" y="238.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.23%)</title><rect x="730.8" y="211.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="733.8" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="730.8" y="195.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="733.8" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="730.8" y="179.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="733.8" y="190.0"></text>
</g>
<g>
<title>trigger_load_balance (1 samples, 0.23%)</title><rect x="730.8" y="163.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="733.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="730.8" y="147.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="733.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="730.8" y="131.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="733.8" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="730.8" y="115.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="733.8" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="730.8" y="99.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="733.8" y="110.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.23%)</title><rect x="730.8" y="83.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="733.8" y="94.0"></text>
</g>
<g>
<title>__wake_up_common (1 samples, 0.23%)</title><rect x="730.8" y="67.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="733.8" y="78.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.23%)</title><rect x="730.8" y="51.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="733.8" y="62.0"></text>
</g>
<g>
<title>tcp_rearm_rto.part.64 (1 samples, 0.23%)</title><rect x="730.8" y="35.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="733.8" y="46.0"></text>
</g>
<g>
<title>sys_write (8 samples, 1.81%)</title><rect x="733.5" y="627.0" width="21.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="736.5" y="638.0">s..</text>
</g>
<g>
<title>sys_futex (3 samples, 0.68%)</title><rect x="733.5" y="611.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="736.5" y="622.0"></text>
</g>
<g>
<title>SYSC_sendto (3 samples, 0.68%)</title><rect x="733.5" y="595.0" width="8.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="736.5" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.68%)</title><rect x="733.5" y="579.0" width="8.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="736.5" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (3 samples, 0.68%)</title><rect x="733.5" y="563.0" width="8.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="736.5" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.45%)</title><rect x="736.2" y="547.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="739.2" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.45%)</title><rect x="736.2" y="531.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="739.2" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.45%)</title><rect x="736.2" y="515.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="739.2" y="526.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.45%)</title><rect x="736.2" y="499.0" width="5.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="739.2" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.45%)</title><rect x="736.2" y="483.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="739.2" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.45%)</title><rect x="736.2" y="467.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="739.2" y="478.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.45%)</title><rect x="736.2" y="451.0" width="5.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="739.2" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.45%)</title><rect x="736.2" y="435.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="739.2" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.23%)</title><rect x="736.2" y="419.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="739.2" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.23%)</title><rect x="736.2" y="403.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="739.2" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.23%)</title><rect x="736.2" y="387.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="739.2" y="398.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.23%)</title><rect x="736.2" y="371.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="739.2" y="382.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.23%)</title><rect x="736.2" y="355.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="739.2" y="366.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.23%)</title><rect x="736.2" y="339.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="739.2" y="350.0"></text>
</g>
<g>
<title>tcp_write_timer (1 samples, 0.23%)</title><rect x="736.2" y="323.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="739.2" y="334.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.23%)</title><rect x="736.2" y="307.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="739.2" y="318.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.23%)</title><rect x="736.2" y="291.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="739.2" y="302.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="736.2" y="275.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="739.2" y="286.0"></text>
</g>
<g>
<title>task_tick_fair (1 samples, 0.23%)</title><rect x="736.2" y="259.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="739.2" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="736.2" y="243.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="739.2" y="254.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="736.2" y="227.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="739.2" y="238.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="736.2" y="211.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="739.2" y="222.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.23%)</title><rect x="736.2" y="195.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="739.2" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="736.2" y="179.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="739.2" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="736.2" y="163.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="739.2" y="174.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.23%)</title><rect x="736.2" y="147.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="739.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="736.2" y="131.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="739.2" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="736.2" y="115.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="739.2" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="736.2" y="99.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="739.2" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="736.2" y="83.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="739.2" y="94.0"></text>
</g>
<g>
<title>__tcp_send_ack (1 samples, 0.23%)</title><rect x="736.2" y="67.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="739.2" y="78.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="736.2" y="51.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="739.2" y="62.0"></text>
</g>
<g>
<title>native_sched_clock (1 samples, 0.23%)</title><rect x="736.2" y="35.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="739.2" y="46.0"></text>
</g>
<g>
<title>__switch_to_asm (1 samples, 0.23%)</title><rect x="738.8" y="419.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="741.8" y="430.0"></text>
</g>
<g>
<title>__perf_event_task_sched_in (1 samples, 0.23%)</title><rect x="738.8" y="403.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="741.8" y="414.0"></text>
</g>
<g>
<title>perf_pmu_nop_void (1 samples, 0.23%)</title><rect x="738.8" y="387.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="741.8" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.23%)</title><rect x="738.8" y="371.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="741.8" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.23%)</title><rect x="738.8" y="355.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="741.8" y="366.0"></text>
</g>
<g>
<title>vfs_write (5 samples, 1.13%)</title><rect x="741.5" y="611.0" width="13.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="744.5" y="622.0"></text>
</g>
<g>
<title>SYSC_sendto (5 samples, 1.13%)</title><rect x="741.5" y="595.0" width="13.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="744.5" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (5 samples, 1.13%)</title><rect x="741.5" y="579.0" width="13.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="744.5" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (5 samples, 1.13%)</title><rect x="741.5" y="563.0" width="13.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="744.5" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.68%)</title><rect x="741.5" y="547.0" width="8.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="744.5" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (3 samples, 0.68%)</title><rect x="741.5" y="531.0" width="8.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="744.5" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.68%)</title><rect x="741.5" y="515.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="744.5" y="526.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.68%)</title><rect x="741.5" y="499.0" width="8.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="744.5" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.68%)</title><rect x="741.5" y="483.0" width="8.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="744.5" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.68%)</title><rect x="741.5" y="467.0" width="8.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="744.5" y="478.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.68%)</title><rect x="741.5" y="451.0" width="8.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="744.5" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.45%)</title><rect x="741.5" y="435.0" width="5.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="744.5" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.45%)</title><rect x="741.5" y="419.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="744.5" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.18 (2 samples, 0.45%)</title><rect x="741.5" y="403.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="744.5" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.45%)</title><rect x="741.5" y="387.0" width="5.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="744.5" y="398.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.45%)</title><rect x="741.5" y="371.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="744.5" y="382.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.45%)</title><rect x="741.5" y="355.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="744.5" y="366.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.45%)</title><rect x="741.5" y="339.0" width="5.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="744.5" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="741.5" y="323.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="744.5" y="334.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.23%)</title><rect x="741.5" y="307.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="744.5" y="318.0"></text>
</g>
<g>
<title>cpumask_next_and (1 samples, 0.23%)</title><rect x="741.5" y="291.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="744.5" y="302.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="741.5" y="275.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="744.5" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="741.5" y="259.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="744.5" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="741.5" y="243.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="744.5" y="254.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.23%)</title><rect x="741.5" y="227.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="744.5" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="741.5" y="211.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="744.5" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="741.5" y="195.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="744.5" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="741.5" y="179.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="744.5" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="741.5" y="163.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="744.5" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.23%)</title><rect x="741.5" y="147.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="744.5" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.23%)</title><rect x="741.5" y="131.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="744.5" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="741.5" y="115.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="744.5" y="126.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="744.2" y="323.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="747.2" y="334.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.23%)</title><rect x="744.2" y="307.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="747.2" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="744.2" y="291.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="747.2" y="302.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="744.2" y="275.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="747.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="744.2" y="259.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="747.2" y="270.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.23%)</title><rect x="744.2" y="243.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="747.2" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="744.2" y="227.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="747.2" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="744.2" y="211.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="747.2" y="222.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.23%)</title><rect x="744.2" y="195.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="747.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="744.2" y="179.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="747.2" y="190.0"></text>
</g>
<g>
<title>tcp_filter (1 samples, 0.23%)</title><rect x="744.2" y="163.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="747.2" y="174.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.23%)</title><rect x="746.8" y="435.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="749.8" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.23%)</title><rect x="746.8" y="419.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="749.8" y="430.0"></text>
</g>
<g>
<title>copy_from_iter (1 samples, 0.23%)</title><rect x="749.5" y="547.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="752.5" y="558.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.23%)</title><rect x="749.5" y="531.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="752.5" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.23%)</title><rect x="749.5" y="515.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="752.5" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.23%)</title><rect x="752.2" y="547.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="755.2" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.23%)</title><rect x="752.2" y="531.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="755.2" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.23%)</title><rect x="752.2" y="515.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="755.2" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_end	[ext4] (1 samples, 0.23%)</title><rect x="752.2" y="499.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="755.2" y="510.0"></text>
</g>
<g>
<title>__ext4_journal_stop	[ext4] (1 samples, 0.23%)</title><rect x="752.2" y="483.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="755.2" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.23%)</title><rect x="752.2" y="467.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="755.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.23%)</title><rect x="754.8" y="755.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.23%)</title><rect x="754.8" y="739.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.23%)</title><rect x="754.8" y="723.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.8" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.23%)</title><rect x="754.8" y="707.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="757.8" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.23%)</title><rect x="754.8" y="691.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="757.8" y="702.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.23%)</title><rect x="754.8" y="675.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/11998182.act (69 samples, 15.61%)</title><rect x="757.5" y="771.0" width="184.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.5" y="782.0">ru/mail/polis/service/im..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (69 samples, 15.61%)</title><rect x="757.5" y="755.0" width="184.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.5" y="766.0">ru/mail/polis/service/im..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (69 samples, 15.61%)</title><rect x="757.5" y="739.0" width="184.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.5" y="750.0">ru/mail/polis/service/im..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.23%)</title><rect x="760.2" y="723.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.23%)</title><rect x="760.2" y="707.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="763.2" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.23%)</title><rect x="760.2" y="691.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="763.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.23%)</title><rect x="760.2" y="675.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="763.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (67 samples, 15.16%)</title><rect x="762.9" y="723.0" width="178.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.9" y="734.0">ru/mail/polis/dao/impl/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (67 samples, 15.16%)</title><rect x="762.9" y="707.0" width="178.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="765.9" y="718.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (67 samples, 15.16%)</title><rect x="762.9" y="691.0" width="178.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.9" y="702.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (57 samples, 12.90%)</title><rect x="762.9" y="675.0" width="152.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="765.9" y="686.0">Java_org_rocksdb_Ro..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (57 samples, 12.90%)</title><rect x="762.9" y="659.0" width="152.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="765.9" y="670.0">rocksdb_put_helper(..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (57 samples, 12.90%)</title><rect x="762.9" y="643.0" width="152.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="765.9" y="654.0">rocksdb::DB::Put(ro..</text>
</g>
<g>
<title>_init (1 samples, 0.23%)</title><rect x="762.9" y="627.0" width="2.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="765.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (56 samples, 12.67%)</title><rect x="765.5" y="627.0" width="149.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="768.5" y="638.0">rocksdb::DBImpl::Pu..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (56 samples, 12.67%)</title><rect x="765.5" y="611.0" width="149.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="768.5" y="622.0">rocksdb::DB::Put(ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (56 samples, 12.67%)</title><rect x="765.5" y="595.0" width="149.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="768.5" y="606.0">rocksdb::DBImpl::Wr..</text>
</g>
<g>
<title>__pthread_cond_destroy (1 samples, 0.23%)</title><rect x="765.5" y="579.0" width="2.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="768.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (54 samples, 12.22%)</title><rect x="768.2" y="579.0" width="144.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="771.2" y="590.0">rocksdb::DBImpl::W..</text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (1 samples, 0.23%)</title><rect x="770.9" y="563.0" width="2.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="773.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (7 samples, 1.58%)</title><rect x="773.5" y="563.0" width="18.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="776.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (5 samples, 1.13%)</title><rect x="773.5" y="547.0" width="13.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="776.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (5 samples, 1.13%)</title><rect x="773.5" y="531.0" width="13.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="776.5" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (1 samples, 0.23%)</title><rect x="773.5" y="515.0" width="2.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="776.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (4 samples, 0.90%)</title><rect x="776.2" y="515.0" width="10.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="779.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (4 samples, 0.90%)</title><rect x="776.2" y="499.0" width="10.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="779.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (4 samples, 0.90%)</title><rect x="776.2" y="483.0" width="10.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="779.2" y="494.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (3 samples, 0.68%)</title><rect x="778.9" y="467.0" width="8.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="781.9" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.68%)</title><rect x="778.9" y="451.0" width="8.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="781.9" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.68%)</title><rect x="778.9" y="435.0" width="8.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="781.9" y="446.0"></text>
</g>
<g>
<title>sys_write (3 samples, 0.68%)</title><rect x="778.9" y="419.0" width="8.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="781.9" y="430.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.68%)</title><rect x="778.9" y="403.0" width="8.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="781.9" y="414.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.68%)</title><rect x="778.9" y="387.0" width="8.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="781.9" y="398.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.68%)</title><rect x="778.9" y="371.0" width="8.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="781.9" y="382.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (3 samples, 0.68%)</title><rect x="778.9" y="355.0" width="8.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="781.9" y="366.0"></text>
</g>
<g>
<title>__generic_file_write_iter (3 samples, 0.68%)</title><rect x="778.9" y="339.0" width="8.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="781.9" y="350.0"></text>
</g>
<g>
<title>generic_perform_write (3 samples, 0.68%)</title><rect x="778.9" y="323.0" width="8.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="781.9" y="334.0"></text>
</g>
<g>
<title>ext4_da_write_end	[ext4] (2 samples, 0.45%)</title><rect x="778.9" y="307.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="781.9" y="318.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.45%)</title><rect x="778.9" y="291.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="781.9" y="302.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.45%)</title><rect x="778.9" y="275.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="781.9" y="286.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (2 samples, 0.45%)</title><rect x="778.9" y="259.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="781.9" y="270.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (2 samples, 0.45%)</title><rect x="778.9" y="243.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="781.9" y="254.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (2 samples, 0.45%)</title><rect x="778.9" y="227.0" width="5.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="781.9" y="238.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access	[ext4] (1 samples, 0.23%)</title><rect x="778.9" y="211.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="781.9" y="222.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access	[jbd2] (1 samples, 0.23%)</title><rect x="778.9" y="195.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="781.9" y="206.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty	[ext4] (1 samples, 0.23%)</title><rect x="778.9" y="179.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="781.9" y="190.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.23%)</title><rect x="778.9" y="163.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="781.9" y="174.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write	[ext4] (1 samples, 0.23%)</title><rect x="781.5" y="211.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="784.5" y="222.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="781.5" y="195.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="784.5" y="206.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc	[ext4] (1 samples, 0.23%)</title><rect x="781.5" y="179.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="784.5" y="190.0"></text>
</g>
<g>
<title>__switch_to_asm (1 samples, 0.23%)</title><rect x="781.5" y="163.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="784.5" y="174.0"></text>
</g>
<g>
<title>group_sched_in (1 samples, 0.23%)</title><rect x="781.5" y="147.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="784.5" y="158.0"></text>
</g>
<g>
<title>perf_pmu_nop_int (1 samples, 0.23%)</title><rect x="781.5" y="131.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="784.5" y="142.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.23%)</title><rect x="781.5" y="115.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="784.5" y="126.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.23%)</title><rect x="781.5" y="99.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="784.5" y="110.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.23%)</title><rect x="781.5" y="83.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="784.5" y="94.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.23%)</title><rect x="784.2" y="307.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="787.2" y="318.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.23%)</title><rect x="784.2" y="291.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="787.2" y="302.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.23%)</title><rect x="784.2" y="275.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="787.2" y="286.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.23%)</title><rect x="786.9" y="547.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="789.9" y="558.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.23%)</title><rect x="789.5" y="547.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="792.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (21 samples, 4.75%)</title><rect x="792.2" y="563.0" width="56.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="795.2" y="574.0">rocksd..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (21 samples, 4.75%)</title><rect x="792.2" y="547.0" width="56.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="795.2" y="558.0">rocksd..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (21 samples, 4.75%)</title><rect x="792.2" y="531.0" width="56.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="795.2" y="542.0">rocksd..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (21 samples, 4.75%)</title><rect x="792.2" y="515.0" width="56.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="795.2" y="526.0">rocksd..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (21 samples, 4.75%)</title><rect x="792.2" y="499.0" width="56.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="795.2" y="510.0">rocksd..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (20 samples, 4.52%)</title><rect x="794.9" y="483.0" width="53.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="797.9" y="494.0">bool ..</text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (18 samples, 4.07%)</title><rect x="794.9" y="467.0" width="48.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="797.9" y="478.0">/tmp..</text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (14 samples, 3.17%)</title><rect x="794.9" y="451.0" width="37.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="797.9" y="462.0">/tm..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (14 samples, 3.17%)</title><rect x="794.9" y="435.0" width="37.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="797.9" y="446.0">roc..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (14 samples, 3.17%)</title><rect x="794.9" y="419.0" width="37.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="797.9" y="430.0">roc..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.68%)</title><rect x="794.9" y="403.0" width="8.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="797.9" y="414.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (3 samples, 0.68%)</title><rect x="794.9" y="387.0" width="8.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="797.9" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.45%)</title><rect x="794.9" y="371.0" width="5.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="797.9" y="382.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="800.2" y="371.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="803.2" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="800.2" y="355.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="803.2" y="366.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.23%)</title><rect x="800.2" y="339.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="803.2" y="350.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (8 samples, 1.81%)</title><rect x="802.9" y="403.0" width="21.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="805.9" y="414.0">J..</text>
</g>
<g>
<title>jni_CallVoidMethodV (8 samples, 1.81%)</title><rect x="802.9" y="387.0" width="21.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="805.9" y="398.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (2 samples, 0.45%)</title><rect x="802.9" y="371.0" width="5.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="805.9" y="382.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (3 samples, 0.68%)</title><rect x="808.2" y="371.0" width="8.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="811.2" y="382.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (3 samples, 0.68%)</title><rect x="816.2" y="371.0" width="8.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="819.2" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.45%)</title><rect x="818.9" y="355.0" width="5.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="821.9" y="366.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="821.6" y="339.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="824.6" y="350.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.23%)</title><rect x="821.6" y="323.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="824.6" y="334.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (1 samples, 0.23%)</title><rect x="824.3" y="403.0" width="2.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="827.3" y="414.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.45%)</title><rect x="826.9" y="403.0" width="5.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="829.9" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.90%)</title><rect x="832.3" y="451.0" width="10.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="835.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.90%)</title><rect x="832.3" y="435.0" width="10.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="835.3" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (4 samples, 0.90%)</title><rect x="832.3" y="419.0" width="10.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="835.3" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (4 samples, 0.90%)</title><rect x="832.3" y="403.0" width="10.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="835.3" y="414.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="834.9" y="387.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="837.9" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.45%)</title><rect x="837.6" y="387.0" width="5.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="840.6" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.45%)</title><rect x="837.6" y="371.0" width="5.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="840.6" y="382.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.23%)</title><rect x="837.6" y="355.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="840.6" y="366.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.23%)</title><rect x="840.3" y="355.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="843.3" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.45%)</title><rect x="842.9" y="467.0" width="5.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="845.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.45%)</title><rect x="842.9" y="451.0" width="5.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="845.9" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.45%)</title><rect x="842.9" y="435.0" width="5.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="845.9" y="446.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.45%)</title><rect x="842.9" y="419.0" width="5.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="845.9" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.45%)</title><rect x="842.9" y="403.0" width="5.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="845.9" y="414.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.45%)</title><rect x="842.9" y="387.0" width="5.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="845.9" y="398.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="842.9" y="371.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="845.9" y="382.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.23%)</title><rect x="842.9" y="355.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="845.9" y="366.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.23%)</title><rect x="845.6" y="371.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="848.6" y="382.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (16 samples, 3.62%)</title><rect x="848.3" y="563.0" width="42.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="851.3" y="574.0">rock..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (16 samples, 3.62%)</title><rect x="848.3" y="547.0" width="42.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="851.3" y="558.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (16 samples, 3.62%)</title><rect x="848.3" y="531.0" width="42.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="851.3" y="542.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (16 samples, 3.62%)</title><rect x="848.3" y="515.0" width="42.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="851.3" y="526.0">rock..</text>
</g>
<g>
<title>_init (1 samples, 0.23%)</title><rect x="848.3" y="499.0" width="2.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="851.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (15 samples, 3.39%)</title><rect x="851.0" y="499.0" width="40.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="854.0" y="510.0">roc..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (15 samples, 3.39%)</title><rect x="851.0" y="483.0" width="40.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="854.0" y="494.0">roc..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (15 samples, 3.39%)</title><rect x="851.0" y="467.0" width="40.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="854.0" y="478.0">boo..</text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (14 samples, 3.17%)</title><rect x="851.0" y="451.0" width="37.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="854.0" y="462.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (14 samples, 3.17%)</title><rect x="851.0" y="435.0" width="37.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="854.0" y="446.0">/tm..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (14 samples, 3.17%)</title><rect x="851.0" y="419.0" width="37.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="854.0" y="430.0">roc..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (14 samples, 3.17%)</title><rect x="851.0" y="403.0" width="37.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="854.0" y="414.0">roc..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="853.6" y="387.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="856.6" y="398.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.23%)</title><rect x="853.6" y="371.0" width="2.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="856.6" y="382.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.23%)</title><rect x="853.6" y="355.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="856.6" y="366.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (4 samples, 0.90%)</title><rect x="856.3" y="387.0" width="10.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="859.3" y="398.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (4 samples, 0.90%)</title><rect x="856.3" y="371.0" width="10.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="859.3" y="382.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (4 samples, 0.90%)</title><rect x="856.3" y="355.0" width="10.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="859.3" y="366.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.45%)</title><rect x="859.0" y="339.0" width="5.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="862.0" y="350.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="861.6" y="323.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="864.6" y="334.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.23%)</title><rect x="864.3" y="339.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="867.3" y="350.0"></text>
</g>
<g>
<title>__lll_lock_wait (3 samples, 0.68%)</title><rect x="867.0" y="387.0" width="8.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="870.0" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.45%)</title><rect x="869.6" y="371.0" width="5.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="872.6" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.45%)</title><rect x="869.6" y="355.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="872.6" y="366.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="872.3" y="339.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="875.3" y="350.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="872.3" y="323.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="875.3" y="334.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="872.3" y="307.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="875.3" y="318.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.23%)</title><rect x="872.3" y="291.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="875.3" y="302.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="872.3" y="275.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="875.3" y="286.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="872.3" y="259.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="875.3" y="270.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.23%)</title><rect x="872.3" y="243.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="875.3" y="254.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.23%)</title><rect x="872.3" y="227.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="875.3" y="238.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.23%)</title><rect x="872.3" y="211.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="875.3" y="222.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.23%)</title><rect x="872.3" y="195.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="875.3" y="206.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.68%)</title><rect x="875.0" y="387.0" width="8.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="878.0" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.45%)</title><rect x="877.6" y="371.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="880.6" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.45%)</title><rect x="877.6" y="355.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="880.6" y="366.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="880.3" y="339.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="883.3" y="350.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="880.3" y="323.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="883.3" y="334.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="880.3" y="307.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="883.3" y="318.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.23%)</title><rect x="880.3" y="291.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="883.3" y="302.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.23%)</title><rect x="880.3" y="275.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="883.3" y="286.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="880.3" y="259.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="883.3" y="270.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="880.3" y="243.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="883.3" y="254.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="880.3" y="227.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="883.3" y="238.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="883.0" y="387.0" width="2.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="886.0" y="398.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.23%)</title><rect x="885.7" y="387.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="888.7" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.23%)</title><rect x="888.3" y="451.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="891.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="888.3" y="435.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="891.3" y="446.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.23%)</title><rect x="888.3" y="419.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="891.3" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="888.3" y="403.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="891.3" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="888.3" y="387.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="891.3" y="398.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="888.3" y="371.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="891.3" y="382.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="888.3" y="355.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="891.3" y="366.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="888.3" y="339.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="891.3" y="350.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="888.3" y="323.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="891.3" y="334.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="888.3" y="307.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="891.3" y="318.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.23%)</title><rect x="888.3" y="291.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="891.3" y="302.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="888.3" y="275.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="891.3" y="286.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="888.3" y="259.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="891.3" y="270.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.23%)</title><rect x="888.3" y="243.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="891.3" y="254.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.23%)</title><rect x="888.3" y="227.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="891.3" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.68%)</title><rect x="891.0" y="563.0" width="8.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="894.0" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.23%)</title><rect x="896.3" y="547.0" width="2.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="899.3" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="896.3" y="531.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="899.3" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="896.3" y="515.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="899.3" y="526.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="896.3" y="499.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="899.3" y="510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="896.3" y="483.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="899.3" y="494.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="896.3" y="467.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="899.3" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="896.3" y="451.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="899.3" y="462.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="896.3" y="435.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="899.3" y="446.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="896.3" y="419.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="899.3" y="430.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="896.3" y="403.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="899.3" y="414.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.23%)</title><rect x="896.3" y="387.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="899.3" y="398.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.23%)</title><rect x="896.3" y="371.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="899.3" y="382.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.23%)</title><rect x="896.3" y="355.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="899.3" y="366.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.23%)</title><rect x="896.3" y="339.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="899.3" y="350.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.68%)</title><rect x="899.0" y="563.0" width="8.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="902.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.68%)</title><rect x="899.0" y="547.0" width="8.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="902.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.45%)</title><rect x="907.0" y="563.0" width="5.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="910.0" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.23%)</title><rect x="909.7" y="547.0" width="2.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="912.7" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="909.7" y="531.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="912.7" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="909.7" y="515.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="912.7" y="526.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="909.7" y="499.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="912.7" y="510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="909.7" y="483.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="912.7" y="494.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="909.7" y="467.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="912.7" y="478.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.23%)</title><rect x="909.7" y="451.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="912.7" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="909.7" y="435.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="912.7" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="909.7" y="419.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="912.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.23%)</title><rect x="912.4" y="579.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="915.4" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.23%)</title><rect x="915.0" y="675.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.0" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (9 samples, 2.04%)</title><rect x="917.7" y="675.0" width="24.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="920.7" y="686.0">o..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (9 samples, 2.04%)</title><rect x="917.7" y="659.0" width="24.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="920.7" y="670.0">o..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (8 samples, 1.81%)</title><rect x="917.7" y="643.0" width="21.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.7" y="654.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (1 samples, 0.23%)</title><rect x="917.7" y="627.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="920.7" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (7 samples, 1.58%)</title><rect x="920.4" y="627.0" width="18.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="923.4" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (7 samples, 1.58%)</title><rect x="920.4" y="611.0" width="18.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.4" y="622.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (6 samples, 1.36%)</title><rect x="920.4" y="595.0" width="16.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="923.4" y="606.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="920.4" y="579.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="923.4" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.23%)</title><rect x="920.4" y="563.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="923.4" y="574.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.90%)</title><rect x="923.0" y="579.0" width="10.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="926.0" y="590.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.23%)</title><rect x="923.0" y="563.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="926.0" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.68%)</title><rect x="925.7" y="563.0" width="8.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="928.7" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.45%)</title><rect x="928.4" y="547.0" width="5.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="931.4" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.45%)</title><rect x="928.4" y="531.0" width="5.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="931.4" y="542.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.23%)</title><rect x="931.0" y="515.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="934.0" y="526.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.23%)</title><rect x="933.7" y="579.0" width="2.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="936.7" y="590.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.23%)</title><rect x="933.7" y="563.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="936.7" y="574.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.23%)</title><rect x="936.4" y="595.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="939.4" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (1 samples, 0.23%)</title><rect x="939.0" y="643.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="942.0" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.23%)</title><rect x="939.0" y="627.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="942.0" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.23%)</title><rect x="939.0" y="611.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="942.0" y="622.0"></text>
</g>
<g>
<title>[worker tid=2112] (93 samples, 21.04%)</title><rect x="941.7" y="867.0" width="248.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="944.7" y="878.0">[worker tid=2112]</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.23%)</title><rect x="941.7" y="851.0" width="2.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="944.7" y="862.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.23%)</title><rect x="941.7" y="835.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="944.7" y="846.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.23%)</title><rect x="941.7" y="819.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="944.7" y="830.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="941.7" y="803.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="944.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="941.7" y="787.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="944.7" y="798.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="941.7" y="771.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="944.7" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.23%)</title><rect x="941.7" y="755.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="944.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.23%)</title><rect x="941.7" y="739.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="944.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.23%)</title><rect x="941.7" y="723.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="944.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.23%)</title><rect x="941.7" y="707.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="944.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="941.7" y="691.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="944.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.23%)</title><rect x="941.7" y="675.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="944.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.23%)</title><rect x="941.7" y="659.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="944.7" y="670.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.23%)</title><rect x="941.7" y="643.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="944.7" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (1 samples, 0.23%)</title><rect x="941.7" y="627.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="944.7" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (1 samples, 0.23%)</title><rect x="941.7" y="611.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="944.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="941.7" y="595.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="944.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="941.7" y="579.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="944.7" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="941.7" y="563.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="944.7" y="574.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.23%)</title><rect x="941.7" y="547.0" width="2.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="944.7" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="941.7" y="531.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="944.7" y="542.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="941.7" y="515.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="944.7" y="526.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.68%)</title><rect x="944.4" y="851.0" width="8.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="947.4" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.run (89 samples, 20.14%)</title><rect x="952.4" y="851.0" width="237.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="955.4" y="862.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (89 samples, 20.14%)</title><rect x="952.4" y="835.0" width="237.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="955.4" y="846.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (89 samples, 20.14%)</title><rect x="952.4" y="819.0" width="237.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="955.4" y="830.0">java/util/concurrent/ThreadPool..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.23%)</title><rect x="957.7" y="803.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="960.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 2.26%)</title><rect x="960.4" y="803.0" width="26.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="963.4" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (10 samples, 2.26%)</title><rect x="960.4" y="787.0" width="26.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.4" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 2.04%)</title><rect x="963.1" y="771.0" width="24.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="966.1" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 2.04%)</title><rect x="963.1" y="755.0" width="24.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="966.1" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 2.04%)</title><rect x="963.1" y="739.0" width="24.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.1" y="750.0">j..</text>
</g>
<g>
<title>Unsafe_Park (8 samples, 1.81%)</title><rect x="965.7" y="723.0" width="21.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="968.7" y="734.0">U..</text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.23%)</title><rect x="968.4" y="707.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="971.4" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 1.36%)</title><rect x="971.1" y="707.0" width="16.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="974.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.68%)</title><rect x="979.1" y="691.0" width="8.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="982.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.68%)</title><rect x="979.1" y="675.0" width="8.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="982.1" y="686.0"></text>
</g>
<g>
<title>sys_write (3 samples, 0.68%)</title><rect x="979.1" y="659.0" width="8.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="982.1" y="670.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.68%)</title><rect x="979.1" y="643.0" width="8.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="982.1" y="654.0"></text>
</g>
<g>
<title>SYSC_sendto (3 samples, 0.68%)</title><rect x="979.1" y="627.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="982.1" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.68%)</title><rect x="979.1" y="611.0" width="8.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="982.1" y="622.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.68%)</title><rect x="979.1" y="595.0" width="8.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="982.1" y="606.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.68%)</title><rect x="979.1" y="579.0" width="8.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="982.1" y="590.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.68%)</title><rect x="979.1" y="563.0" width="8.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="982.1" y="574.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.45%)</title><rect x="981.8" y="547.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="984.8" y="558.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.45%)</title><rect x="981.8" y="531.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="984.8" y="542.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.45%)</title><rect x="981.8" y="515.0" width="5.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="984.8" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.45%)</title><rect x="981.8" y="499.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="984.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$65/242281856.run (76 samples, 17.19%)</title><rect x="987.1" y="803.0" width="202.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="990.1" y="814.0">ru/mail/polis/service/impl..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (76 samples, 17.19%)</title><rect x="987.1" y="787.0" width="202.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="990.1" y="798.0">ru/mail/polis/service/impl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (11 samples, 2.49%)</title><rect x="987.1" y="771.0" width="29.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="990.1" y="782.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (11 samples, 2.49%)</title><rect x="987.1" y="755.0" width="29.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="990.1" y="766.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.23%)</title><rect x="987.1" y="739.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="990.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 2.26%)</title><rect x="989.8" y="739.0" width="26.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="992.8" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 2.26%)</title><rect x="989.8" y="723.0" width="26.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="992.8" y="734.0">o..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.23%)</title><rect x="989.8" y="707.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="992.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (9 samples, 2.04%)</title><rect x="992.4" y="707.0" width="24.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="995.4" y="718.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (9 samples, 2.04%)</title><rect x="992.4" y="691.0" width="24.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="995.4" y="702.0">o..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.45%)</title><rect x="992.4" y="675.0" width="5.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="995.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.45%)</title><rect x="992.4" y="659.0" width="5.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="995.4" y="670.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.45%)</title><rect x="992.4" y="643.0" width="5.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="995.4" y="654.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.23%)</title><rect x="995.1" y="627.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="998.1" y="638.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.23%)</title><rect x="995.1" y="611.0" width="2.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="998.1" y="622.0"></text>
</g>
<g>
<title>__send (7 samples, 1.58%)</title><rect x="997.8" y="675.0" width="18.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1000.8" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (6 samples, 1.36%)</title><rect x="1000.5" y="659.0" width="16.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1003.5" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.36%)</title><rect x="1000.5" y="643.0" width="16.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1003.5" y="654.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="1000.5" y="627.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1003.5" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="1000.5" y="611.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1003.5" y="622.0"></text>
</g>
<g>
<title>sys_write (5 samples, 1.13%)</title><rect x="1003.1" y="627.0" width="13.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1006.1" y="638.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.68%)</title><rect x="1003.1" y="611.0" width="8.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1006.1" y="622.0"></text>
</g>
<g>
<title>SYSC_sendto (3 samples, 0.68%)</title><rect x="1003.1" y="595.0" width="8.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1006.1" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.68%)</title><rect x="1003.1" y="579.0" width="8.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1006.1" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (3 samples, 0.68%)</title><rect x="1003.1" y="563.0" width="8.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1006.1" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.45%)</title><rect x="1003.1" y="547.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1006.1" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.45%)</title><rect x="1003.1" y="531.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1006.1" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.45%)</title><rect x="1003.1" y="515.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1006.1" y="526.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.45%)</title><rect x="1003.1" y="499.0" width="5.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1006.1" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.45%)</title><rect x="1003.1" y="483.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1006.1" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.45%)</title><rect x="1003.1" y="467.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1006.1" y="478.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.45%)</title><rect x="1003.1" y="451.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1006.1" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.45%)</title><rect x="1003.1" y="435.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1006.1" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.23%)</title><rect x="1005.8" y="419.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1008.8" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.23%)</title><rect x="1005.8" y="403.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1008.8" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.23%)</title><rect x="1005.8" y="387.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1008.8" y="398.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.23%)</title><rect x="1005.8" y="371.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1008.8" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.23%)</title><rect x="1008.5" y="547.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1011.5" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.23%)</title><rect x="1008.5" y="531.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1011.5" y="542.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.23%)</title><rect x="1008.5" y="515.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1011.5" y="526.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.45%)</title><rect x="1011.1" y="611.0" width="5.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1014.1" y="622.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.45%)</title><rect x="1011.1" y="595.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1014.1" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.45%)</title><rect x="1011.1" y="579.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1014.1" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.45%)</title><rect x="1011.1" y="563.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1014.1" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.45%)</title><rect x="1011.1" y="547.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1014.1" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.45%)</title><rect x="1011.1" y="531.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1014.1" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.45%)</title><rect x="1011.1" y="515.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1014.1" y="526.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.45%)</title><rect x="1011.1" y="499.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1014.1" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.45%)</title><rect x="1011.1" y="483.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1014.1" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.45%)</title><rect x="1011.1" y="467.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1014.1" y="478.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.45%)</title><rect x="1011.1" y="451.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1014.1" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.45%)</title><rect x="1011.1" y="435.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1014.1" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.45%)</title><rect x="1011.1" y="419.0" width="5.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1014.1" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.18 (2 samples, 0.45%)</title><rect x="1011.1" y="403.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1014.1" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.45%)</title><rect x="1011.1" y="387.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1014.1" y="398.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.45%)</title><rect x="1011.1" y="371.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1014.1" y="382.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.45%)</title><rect x="1011.1" y="355.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1014.1" y="366.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.45%)</title><rect x="1011.1" y="339.0" width="5.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1014.1" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="1011.1" y="323.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1014.1" y="334.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.23%)</title><rect x="1011.1" y="307.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1014.1" y="318.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="1011.1" y="291.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1014.1" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="1011.1" y="275.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1014.1" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="1011.1" y="259.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1014.1" y="270.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.23%)</title><rect x="1011.1" y="243.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1014.1" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="1011.1" y="227.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1014.1" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="1011.1" y="211.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1014.1" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="1011.1" y="195.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1014.1" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="1011.1" y="179.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1014.1" y="190.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.23%)</title><rect x="1011.1" y="163.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1014.1" y="174.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.23%)</title><rect x="1011.1" y="147.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1014.1" y="158.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="1013.8" y="323.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1016.8" y="334.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.23%)</title><rect x="1013.8" y="307.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1016.8" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="1013.8" y="291.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1016.8" y="302.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="1013.8" y="275.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1016.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="1013.8" y="259.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1016.8" y="270.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.23%)</title><rect x="1013.8" y="243.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1016.8" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="1013.8" y="227.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1016.8" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="1013.8" y="211.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1016.8" y="222.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.23%)</title><rect x="1013.8" y="195.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1016.8" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="1013.8" y="179.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1016.8" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="1013.8" y="163.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1016.8" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="1013.8" y="147.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1016.8" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="1013.8" y="131.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1016.8" y="142.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.23%)</title><rect x="1013.8" y="115.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1016.8" y="126.0"></text>
</g>
<g>
<title>__wake_up_common (1 samples, 0.23%)</title><rect x="1013.8" y="99.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1016.8" y="110.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.23%)</title><rect x="1013.8" y="83.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1016.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/11998182.act (65 samples, 14.71%)</title><rect x="1016.5" y="771.0" width="173.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1019.5" y="782.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (65 samples, 14.71%)</title><rect x="1016.5" y="755.0" width="173.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1019.5" y="766.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (65 samples, 14.71%)</title><rect x="1016.5" y="739.0" width="173.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1019.5" y="750.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (65 samples, 14.71%)</title><rect x="1016.5" y="723.0" width="173.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1019.5" y="734.0">ru/mail/polis/dao/impl..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (65 samples, 14.71%)</title><rect x="1016.5" y="707.0" width="173.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1019.5" y="718.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (65 samples, 14.71%)</title><rect x="1016.5" y="691.0" width="173.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1019.5" y="702.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (50 samples, 11.31%)</title><rect x="1016.5" y="675.0" width="133.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1019.5" y="686.0">Java_org_rocksdb_..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (50 samples, 11.31%)</title><rect x="1016.5" y="659.0" width="133.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1019.5" y="670.0">rocksdb_put_helpe..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.45%)</title><rect x="1016.5" y="643.0" width="5.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1019.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (47 samples, 10.63%)</title><rect x="1021.8" y="643.0" width="125.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1024.8" y="654.0">rocksdb::DB::Pu..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (47 samples, 10.63%)</title><rect x="1021.8" y="627.0" width="125.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1024.8" y="638.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (46 samples, 10.41%)</title><rect x="1021.8" y="611.0" width="122.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1024.8" y="622.0">rocksdb::DB::Pu..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (46 samples, 10.41%)</title><rect x="1021.8" y="595.0" width="122.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1024.8" y="606.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (45 samples, 10.18%)</title><rect x="1021.8" y="579.0" width="120.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1024.8" y="590.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (7 samples, 1.58%)</title><rect x="1021.8" y="563.0" width="18.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1024.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (7 samples, 1.58%)</title><rect x="1021.8" y="547.0" width="18.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1024.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (7 samples, 1.58%)</title><rect x="1021.8" y="531.0" width="18.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1024.8" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (2 samples, 0.45%)</title><rect x="1021.8" y="515.0" width="5.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1024.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (5 samples, 1.13%)</title><rect x="1027.1" y="515.0" width="13.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1030.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (5 samples, 1.13%)</title><rect x="1027.1" y="499.0" width="13.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1030.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (5 samples, 1.13%)</title><rect x="1027.1" y="483.0" width="13.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1030.1" y="494.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (4 samples, 0.90%)</title><rect x="1029.8" y="467.0" width="10.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1032.8" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (4 samples, 0.90%)</title><rect x="1029.8" y="451.0" width="10.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1032.8" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.90%)</title><rect x="1029.8" y="435.0" width="10.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1032.8" y="446.0"></text>
</g>
<g>
<title>sys_write (4 samples, 0.90%)</title><rect x="1029.8" y="419.0" width="10.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1032.8" y="430.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.90%)</title><rect x="1029.8" y="403.0" width="10.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1032.8" y="414.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.68%)</title><rect x="1032.5" y="387.0" width="8.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1035.5" y="398.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.68%)</title><rect x="1032.5" y="371.0" width="8.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1035.5" y="382.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (3 samples, 0.68%)</title><rect x="1032.5" y="355.0" width="8.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1035.5" y="366.0"></text>
</g>
<g>
<title>__generic_file_write_iter (3 samples, 0.68%)</title><rect x="1032.5" y="339.0" width="8.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1035.5" y="350.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.23%)</title><rect x="1032.5" y="323.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1035.5" y="334.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.23%)</title><rect x="1032.5" y="307.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1035.5" y="318.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.23%)</title><rect x="1032.5" y="291.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1035.5" y="302.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.23%)</title><rect x="1032.5" y="275.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1035.5" y="286.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.23%)</title><rect x="1032.5" y="259.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1035.5" y="270.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="1032.5" y="243.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1035.5" y="254.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb	[ext4] (1 samples, 0.23%)</title><rect x="1032.5" y="227.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1035.5" y="238.0"></text>
</g>
<g>
<title>ext4_journal_check_start	[ext4] (1 samples, 0.23%)</title><rect x="1032.5" y="211.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1035.5" y="222.0"></text>
</g>
<g>
<title>generic_perform_write (2 samples, 0.45%)</title><rect x="1035.2" y="323.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1038.2" y="334.0"></text>
</g>
<g>
<title>ext4_da_write_end	[ext4] (1 samples, 0.23%)</title><rect x="1035.2" y="307.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1038.2" y="318.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.23%)</title><rect x="1035.2" y="291.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1038.2" y="302.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.23%)</title><rect x="1035.2" y="275.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1038.2" y="286.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="1035.2" y="259.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1038.2" y="270.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (1 samples, 0.23%)</title><rect x="1035.2" y="243.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1038.2" y="254.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="1035.2" y="227.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1038.2" y="238.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access	[ext4] (1 samples, 0.23%)</title><rect x="1035.2" y="211.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1038.2" y="222.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty	[ext4] (1 samples, 0.23%)</title><rect x="1035.2" y="195.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1038.2" y="206.0"></text>
</g>
<g>
<title>ext4_inode_csum_set	[ext4] (1 samples, 0.23%)</title><rect x="1035.2" y="179.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1038.2" y="190.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.23%)</title><rect x="1037.8" y="307.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1040.8" y="318.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.23%)</title><rect x="1037.8" y="291.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1040.8" y="302.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.23%)</title><rect x="1037.8" y="275.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1040.8" y="286.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.23%)</title><rect x="1040.5" y="563.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1043.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (18 samples, 4.07%)</title><rect x="1043.2" y="563.0" width="48.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1046.2" y="574.0">rock..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (18 samples, 4.07%)</title><rect x="1043.2" y="547.0" width="48.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1046.2" y="558.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (18 samples, 4.07%)</title><rect x="1043.2" y="531.0" width="48.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1046.2" y="542.0">rock..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (1 samples, 0.23%)</title><rect x="1043.2" y="515.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1046.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.23%)</title><rect x="1045.8" y="515.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1048.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (16 samples, 3.62%)</title><rect x="1048.5" y="515.0" width="42.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1051.5" y="526.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (15 samples, 3.39%)</title><rect x="1051.2" y="499.0" width="40.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1054.2" y="510.0">roc..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (15 samples, 3.39%)</title><rect x="1051.2" y="483.0" width="40.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1054.2" y="494.0">boo..</text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (14 samples, 3.17%)</title><rect x="1051.2" y="467.0" width="37.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1054.2" y="478.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (14 samples, 3.17%)</title><rect x="1051.2" y="451.0" width="37.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1054.2" y="462.0">/tm..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (14 samples, 3.17%)</title><rect x="1051.2" y="435.0" width="37.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1054.2" y="446.0">roc..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (14 samples, 3.17%)</title><rect x="1051.2" y="419.0" width="37.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1054.2" y="430.0">roc..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (6 samples, 1.36%)</title><rect x="1051.2" y="403.0" width="16.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1054.2" y="414.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (6 samples, 1.36%)</title><rect x="1051.2" y="387.0" width="16.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1054.2" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (5 samples, 1.13%)</title><rect x="1053.8" y="371.0" width="13.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1056.8" y="382.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.23%)</title><rect x="1064.5" y="355.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1067.5" y="366.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (6 samples, 1.36%)</title><rect x="1067.2" y="403.0" width="16.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1070.2" y="414.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (6 samples, 1.36%)</title><rect x="1067.2" y="387.0" width="16.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1070.2" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (2 samples, 0.45%)</title><rect x="1069.9" y="371.0" width="5.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1072.9" y="382.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (3 samples, 0.68%)</title><rect x="1075.2" y="371.0" width="8.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1078.2" y="382.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.23%)</title><rect x="1077.9" y="355.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1080.9" y="366.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="1080.5" y="355.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1083.5" y="366.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.23%)</title><rect x="1083.2" y="403.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1086.2" y="414.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.23%)</title><rect x="1085.9" y="403.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1088.9" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.23%)</title><rect x="1088.6" y="467.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1091.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="1088.6" y="451.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1091.6" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="1088.6" y="435.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1091.6" y="446.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.23%)</title><rect x="1088.6" y="419.0" width="2.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1091.6" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="1088.6" y="403.0" width="2.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1091.6" y="414.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.23%)</title><rect x="1088.6" y="387.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1091.6" y="398.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::get_bool() (1 samples, 0.23%)</title><rect x="1088.6" y="371.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1091.6" y="382.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (11 samples, 2.49%)</title><rect x="1091.2" y="563.0" width="29.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1094.2" y="574.0">ro..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.23%)</title><rect x="1093.9" y="547.0" width="2.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1096.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 2.04%)</title><rect x="1096.6" y="547.0" width="24.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1099.6" y="558.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 2.04%)</title><rect x="1096.6" y="531.0" width="24.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1099.6" y="542.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (9 samples, 2.04%)</title><rect x="1096.6" y="515.0" width="24.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1099.6" y="526.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (9 samples, 2.04%)</title><rect x="1096.6" y="499.0" width="24.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1099.6" y="510.0">r..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (9 samples, 2.04%)</title><rect x="1096.6" y="483.0" width="24.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1099.6" y="494.0">r..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (9 samples, 2.04%)</title><rect x="1096.6" y="467.0" width="24.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1099.6" y="478.0">b..</text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (8 samples, 1.81%)</title><rect x="1096.6" y="451.0" width="21.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1099.6" y="462.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni2202121864168184226.so (8 samples, 1.81%)</title><rect x="1096.6" y="435.0" width="21.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1099.6" y="446.0">/..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 1.81%)</title><rect x="1096.6" y="419.0" width="21.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1099.6" y="430.0">r..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (8 samples, 1.81%)</title><rect x="1096.6" y="403.0" width="21.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1099.6" y="414.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="1096.6" y="387.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1099.6" y="398.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.23%)</title><rect x="1096.6" y="371.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1099.6" y="382.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="1096.6" y="355.0" width="2.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1099.6" y="366.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="1096.6" y="339.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1099.6" y="350.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="1096.6" y="323.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1099.6" y="334.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.68%)</title><rect x="1099.2" y="387.0" width="8.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1102.2" y="398.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (3 samples, 0.68%)</title><rect x="1099.2" y="371.0" width="8.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1102.2" y="382.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.23%)</title><rect x="1099.2" y="355.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1102.2" y="366.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.45%)</title><rect x="1101.9" y="355.0" width="5.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1104.9" y="366.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="1101.9" y="339.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1104.9" y="350.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="1104.6" y="339.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1107.6" y="350.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.23%)</title><rect x="1104.6" y="323.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1107.6" y="334.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.23%)</title><rect x="1107.2" y="387.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1110.2" y="398.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.23%)</title><rect x="1109.9" y="387.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1112.9" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="1109.9" y="371.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1112.9" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="1109.9" y="355.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1112.9" y="366.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="1109.9" y="339.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1112.9" y="350.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="1109.9" y="323.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1112.9" y="334.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="1109.9" y="307.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1112.9" y="318.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="1109.9" y="291.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1112.9" y="302.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="1109.9" y="275.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1112.9" y="286.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.23%)</title><rect x="1109.9" y="259.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1112.9" y="270.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.23%)</title><rect x="1109.9" y="243.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1112.9" y="254.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.23%)</title><rect x="1109.9" y="227.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1112.9" y="238.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.23%)</title><rect x="1112.6" y="387.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1115.6" y="398.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="1115.2" y="387.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1118.2" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.23%)</title><rect x="1115.2" y="371.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1118.2" y="382.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.23%)</title><rect x="1117.9" y="451.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1120.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="1117.9" y="435.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1120.9" y="446.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.23%)</title><rect x="1117.9" y="419.0" width="2.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1120.9" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (5 samples, 1.13%)</title><rect x="1120.6" y="563.0" width="13.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1123.6" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.45%)</title><rect x="1128.6" y="547.0" width="5.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1131.6" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="1131.3" y="531.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1134.3" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="1131.3" y="515.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1134.3" y="526.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="1131.3" y="499.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1134.3" y="510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="1131.3" y="483.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1134.3" y="494.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="1131.3" y="467.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1134.3" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="1131.3" y="451.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1134.3" y="462.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="1131.3" y="435.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1134.3" y="446.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.23%)</title><rect x="1131.3" y="419.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1134.3" y="430.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="1131.3" y="403.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1134.3" y="414.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="1131.3" y="387.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1134.3" y="398.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.23%)</title><rect x="1131.3" y="371.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1134.3" y="382.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.23%)</title><rect x="1133.9" y="563.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1136.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.23%)</title><rect x="1133.9" y="547.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1136.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.23%)</title><rect x="1136.6" y="563.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1139.6" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.23%)</title><rect x="1136.6" y="547.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1139.6" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="1136.6" y="531.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1139.6" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="1136.6" y="515.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1139.6" y="526.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="1136.6" y="499.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1139.6" y="510.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="1136.6" y="483.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1139.6" y="494.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="1136.6" y="467.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1139.6" y="478.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.23%)</title><rect x="1136.6" y="451.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1139.6" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="1136.6" y="435.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1139.6" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="1136.6" y="419.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1139.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.23%)</title><rect x="1139.3" y="563.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1142.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.23%)</title><rect x="1141.9" y="579.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="1144.6" y="611.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1147.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.23%)</title><rect x="1147.3" y="643.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1150.3" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.23%)</title><rect x="1150.0" y="675.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1153.0" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (14 samples, 3.17%)</title><rect x="1152.6" y="675.0" width="37.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1155.6" y="686.0">org..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (14 samples, 3.17%)</title><rect x="1152.6" y="659.0" width="37.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.6" y="670.0">org..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (14 samples, 3.17%)</title><rect x="1152.6" y="643.0" width="37.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1155.6" y="654.0">org..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (14 samples, 3.17%)</title><rect x="1152.6" y="627.0" width="37.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1155.6" y="638.0">org..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (14 samples, 3.17%)</title><rect x="1152.6" y="611.0" width="37.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1155.6" y="622.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (13 samples, 2.94%)</title><rect x="1152.6" y="595.0" width="34.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1155.6" y="606.0">Ja..</text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.23%)</title><rect x="1155.3" y="579.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1158.3" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.68%)</title><rect x="1158.0" y="579.0" width="8.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1161.0" y="590.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.23%)</title><rect x="1160.6" y="563.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.6" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.23%)</title><rect x="1163.3" y="563.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.3" y="574.0"></text>
</g>
<g>
<title>jni_NewByteArray (8 samples, 1.81%)</title><rect x="1166.0" y="579.0" width="21.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1169.0" y="590.0">j..</text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.23%)</title><rect x="1171.3" y="563.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1174.3" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.23%)</title><rect x="1174.0" y="563.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.0" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.90%)</title><rect x="1176.7" y="563.0" width="10.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.7" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.23%)</title><rect x="1182.0" y="547.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.0" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.23%)</title><rect x="1182.0" y="531.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.0" y="542.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.23%)</title><rect x="1182.0" y="515.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.0" y="526.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.23%)</title><rect x="1182.0" y="499.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.0" y="510.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.23%)</title><rect x="1184.7" y="547.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.7" y="558.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.23%)</title><rect x="1187.3" y="595.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1190.3" y="606.0"></text>
</g>
</g>
</svg>
