<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1318" onload="init(evt)" viewBox="0 0 1200 1318" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1301"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1301"> </text>
<g id="frames">
<g>
<title>all (396 samples, 100.00%)</title><rect x="10.0" y="1267.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1278.0">all</text>
</g>
<g>
<title>[NIO Selector #1 tid=4330] (332 samples, 83.84%)</title><rect x="10.0" y="1251.0" width="989.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1262.0">[NIO Selector #1 tid=4330]</text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.25%)</title><rect x="10.0" y="1235.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1246.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.25%)</title><rect x="13.0" y="1235.0" width="3.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="16.0" y="1246.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (330 samples, 83.33%)</title><rect x="16.0" y="1235.0" width="983.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.0" y="1246.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (52 samples, 13.13%)</title><rect x="27.9" y="1219.0" width="154.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.9" y="1230.0">one/nio/net/NativeSe..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.25%)</title><rect x="27.9" y="1203.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.9" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.25%)</title><rect x="27.9" y="1187.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.9" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (50 samples, 12.63%)</title><rect x="30.9" y="1203.0" width="148.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.9" y="1214.0">one/nio/net/NativeS..</text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.25%)</title><rect x="30.9" y="1187.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="33.9" y="1198.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.25%)</title><rect x="30.9" y="1171.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="33.9" y="1182.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.25%)</title><rect x="30.9" y="1155.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="33.9" y="1166.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.25%)</title><rect x="30.9" y="1139.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="33.9" y="1150.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) [clone .part.147] (1 samples, 0.25%)</title><rect x="30.9" y="1123.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="33.9" y="1134.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.25%)</title><rect x="30.9" y="1107.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="33.9" y="1118.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.25%)</title><rect x="30.9" y="1091.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="33.9" y="1102.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.25%)</title><rect x="30.9" y="1075.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="33.9" y="1086.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::create_native_wrapper(methodHandle const&amp;) (1 samples, 0.25%)</title><rect x="30.9" y="1059.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="33.9" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::generate_native_wrapper(MacroAssembler*, methodHandle const&amp;, int, BasicType*, VMRegPair*, BasicType) (1 samples, 0.25%)</title><rect x="30.9" y="1043.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="33.9" y="1054.0"></text>
</g>
<g>
<title>Method::critical_native_function() (1 samples, 0.25%)</title><rect x="30.9" y="1027.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="33.9" y="1038.0"></text>
</g>
<g>
<title>Method::klass_name() const (1 samples, 0.25%)</title><rect x="30.9" y="1011.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="33.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.01%)</title><rect x="33.8" y="1187.0" width="12.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="36.8" y="1198.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.76%)</title><rect x="33.8" y="1171.0" width="9.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="36.8" y="1182.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.25%)</title><rect x="42.8" y="1171.0" width="3.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="45.8" y="1182.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.25%)</title><rect x="42.8" y="1155.0" width="3.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="45.8" y="1166.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.25%)</title><rect x="45.8" y="1187.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="48.8" y="1198.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.25%)</title><rect x="48.7" y="1187.0" width="3.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="51.7" y="1198.0"></text>
</g>
<g>
<title>epoll_wait (43 samples, 10.86%)</title><rect x="51.7" y="1187.0" width="128.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="54.7" y="1198.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (42 samples, 10.61%)</title><rect x="54.7" y="1171.0" width="125.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="57.7" y="1182.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>do_syscall_64 (42 samples, 10.61%)</title><rect x="54.7" y="1155.0" width="125.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="57.7" y="1166.0">do_syscall_64</text>
</g>
<g>
<title>sys_epoll_wait (38 samples, 9.60%)</title><rect x="66.6" y="1139.0" width="113.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="69.6" y="1150.0">sys_epoll_wait</text>
</g>
<g>
<title>__fget_light (4 samples, 1.01%)</title><rect x="66.6" y="1123.0" width="11.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="69.6" y="1134.0"></text>
</g>
<g>
<title>__fget (4 samples, 1.01%)</title><rect x="66.6" y="1107.0" width="11.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="69.6" y="1118.0"></text>
</g>
<g>
<title>default_wake_function (32 samples, 8.08%)</title><rect x="78.5" y="1123.0" width="95.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="81.5" y="1134.0">default_wak..</text>
</g>
<g>
<title>ep_poll (32 samples, 8.08%)</title><rect x="78.5" y="1107.0" width="95.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="81.5" y="1118.0">ep_poll</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.25%)</title><rect x="84.5" y="1091.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="87.5" y="1102.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 1.26%)</title><rect x="87.5" y="1091.0" width="14.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="90.5" y="1102.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (19 samples, 4.80%)</title><rect x="102.4" y="1091.0" width="56.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="105.4" y="1102.0">ep_sca..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 1.01%)</title><rect x="102.4" y="1075.0" width="11.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="105.4" y="1086.0"></text>
</g>
<g>
<title>ep_send_events_proc (14 samples, 3.54%)</title><rect x="114.3" y="1075.0" width="41.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="117.3" y="1086.0">ep_..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.51%)</title><rect x="117.3" y="1059.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="120.3" y="1070.0"></text>
</g>
<g>
<title>ep_send_events_proc (11 samples, 2.78%)</title><rect x="123.2" y="1059.0" width="32.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="126.2" y="1070.0">ep..</text>
</g>
<g>
<title>sock_poll (8 samples, 2.02%)</title><rect x="132.2" y="1043.0" width="23.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="135.2" y="1054.0">s..</text>
</g>
<g>
<title>tcp_poll (6 samples, 1.52%)</title><rect x="138.1" y="1027.0" width="17.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="141.1" y="1038.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.25%)</title><rect x="153.0" y="1011.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="156.0" y="1022.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.25%)</title><rect x="153.0" y="995.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="156.0" y="1006.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.25%)</title><rect x="156.0" y="1075.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="159.0" y="1086.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.25%)</title><rect x="156.0" y="1059.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="159.0" y="1070.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.25%)</title><rect x="156.0" y="1043.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="159.0" y="1054.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.25%)</title><rect x="156.0" y="1027.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="159.0" y="1038.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.25%)</title><rect x="156.0" y="1011.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="159.0" y="1022.0"></text>
</g>
<g>
<title>sock_sendmsg (5 samples, 1.26%)</title><rect x="159.0" y="1091.0" width="14.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="162.0" y="1102.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (5 samples, 1.26%)</title><rect x="159.0" y="1075.0" width="14.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="162.0" y="1086.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 1.26%)</title><rect x="159.0" y="1059.0" width="14.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="162.0" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.25%)</title><rect x="159.0" y="1043.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="162.0" y="1054.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 1.01%)</title><rect x="162.0" y="1043.0" width="11.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="165.0" y="1054.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 1.01%)</title><rect x="162.0" y="1027.0" width="11.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="165.0" y="1038.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.51%)</title><rect x="167.9" y="1011.0" width="6.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="170.9" y="1022.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.25%)</title><rect x="173.9" y="1123.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="176.9" y="1134.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.25%)</title><rect x="173.9" y="1107.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="176.9" y="1118.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (1 samples, 0.25%)</title><rect x="173.9" y="1091.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="176.9" y="1102.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.25%)</title><rect x="173.9" y="1075.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="176.9" y="1086.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.25%)</title><rect x="173.9" y="1059.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="176.9" y="1070.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.25%)</title><rect x="173.9" y="1043.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="176.9" y="1054.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.25%)</title><rect x="173.9" y="1027.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="176.9" y="1038.0"></text>
</g>
<g>
<title>fput (1 samples, 0.25%)</title><rect x="176.9" y="1123.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="179.9" y="1134.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.25%)</title><rect x="179.8" y="1203.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="182.8" y="1214.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.25%)</title><rect x="179.8" y="1187.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="182.8" y="1198.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.25%)</title><rect x="179.8" y="1171.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="182.8" y="1182.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.25%)</title><rect x="179.8" y="1155.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="182.8" y="1166.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.25%)</title><rect x="179.8" y="1139.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="182.8" y="1150.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.25%)</title><rect x="179.8" y="1123.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="182.8" y="1134.0"></text>
</g>
<g>
<title>__switch_to (1 samples, 0.25%)</title><rect x="179.8" y="1107.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="182.8" y="1118.0"></text>
</g>
<g>
<title>__switch_to_asm (1 samples, 0.25%)</title><rect x="179.8" y="1091.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="182.8" y="1102.0"></text>
</g>
<g>
<title>__switch_to_asm (1 samples, 0.25%)</title><rect x="179.8" y="1075.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="182.8" y="1086.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.25%)</title><rect x="179.8" y="1059.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="182.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (274 samples, 69.19%)</title><rect x="182.8" y="1219.0" width="816.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="185.8" y="1230.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (273 samples, 68.94%)</title><rect x="185.8" y="1203.0" width="813.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="188.8" y="1214.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (239 samples, 60.35%)</title><rect x="188.8" y="1187.0" width="712.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.8" y="1198.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (219 samples, 55.30%)</title><rect x="188.8" y="1171.0" width="652.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.8" y="1182.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (216 samples, 54.55%)</title><rect x="197.7" y="1155.0" width="643.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="200.7" y="1166.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (205 samples, 51.77%)</title><rect x="197.7" y="1139.0" width="610.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.7" y="1150.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (142 samples, 35.86%)</title><rect x="197.7" y="1123.0" width="423.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.7" y="1134.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (140 samples, 35.35%)</title><rect x="197.7" y="1107.0" width="417.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="200.7" y="1118.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 3.28%)</title><rect x="200.7" y="1091.0" width="38.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.7" y="1102.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (13 samples, 3.28%)</title><rect x="200.7" y="1075.0" width="38.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="203.7" y="1086.0">one..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.25%)</title><rect x="200.7" y="1059.0" width="3.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="203.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 1.26%)</title><rect x="203.7" y="1059.0" width="14.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.76%)</title><rect x="206.7" y="1043.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="209.7" y="1054.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.25%)</title><rect x="215.6" y="1043.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="218.6" y="1054.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.25%)</title><rect x="215.6" y="1027.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="218.6" y="1038.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.25%)</title><rect x="215.6" y="1011.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="218.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 1.77%)</title><rect x="218.6" y="1059.0" width="20.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 1.77%)</title><rect x="218.6" y="1043.0" width="20.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="221.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 1.52%)</title><rect x="218.6" y="1027.0" width="17.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="221.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.51%)</title><rect x="227.5" y="1011.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.25%)</title><rect x="233.5" y="1011.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="236.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.25%)</title><rect x="236.5" y="1027.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (126 samples, 31.82%)</title><rect x="239.4" y="1091.0" width="375.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="242.4" y="1102.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (126 samples, 31.82%)</title><rect x="239.4" y="1075.0" width="375.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.4" y="1086.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (126 samples, 31.82%)</title><rect x="239.4" y="1059.0" width="375.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="242.4" y="1070.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (126 samples, 31.82%)</title><rect x="239.4" y="1043.0" width="375.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="242.4" y="1054.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.25%)</title><rect x="242.4" y="1027.0" width="3.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="245.4" y="1038.0"></text>
</g>
<g>
<title>__send (124 samples, 31.31%)</title><rect x="245.4" y="1027.0" width="369.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="248.4" y="1038.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (120 samples, 30.30%)</title><rect x="257.3" y="1011.0" width="357.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="260.3" y="1022.0">entry_SYSCALL_64_after_swapgs</text>
</g>
<g>
<title>do_syscall_64 (120 samples, 30.30%)</title><rect x="257.3" y="995.0" width="357.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="260.3" y="1006.0">do_syscall_64</text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.25%)</title><rect x="275.2" y="979.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="278.2" y="990.0"></text>
</g>
<g>
<title>__do_page_fault (11 samples, 2.78%)</title><rect x="278.2" y="979.0" width="32.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="281.2" y="990.0">__..</text>
</g>
<g>
<title>SYSC_sendto (11 samples, 2.78%)</title><rect x="278.2" y="963.0" width="32.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="281.2" y="974.0">SY..</text>
</g>
<g>
<title>sock_sendmsg (10 samples, 2.53%)</title><rect x="281.2" y="947.0" width="29.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="284.2" y="958.0">so..</text>
</g>
<g>
<title>tcp_sendmsg (10 samples, 2.53%)</title><rect x="281.2" y="931.0" width="29.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="284.2" y="942.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (9 samples, 2.27%)</title><rect x="281.2" y="915.0" width="26.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="284.2" y="926.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (9 samples, 2.27%)</title><rect x="281.2" y="899.0" width="26.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="284.2" y="910.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (9 samples, 2.27%)</title><rect x="281.2" y="883.0" width="26.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="284.2" y="894.0">_..</text>
</g>
<g>
<title>ip_local_out (7 samples, 1.77%)</title><rect x="284.1" y="867.0" width="20.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="287.1" y="878.0"></text>
</g>
<g>
<title>__sk_dst_check (7 samples, 1.77%)</title><rect x="284.1" y="851.0" width="20.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="287.1" y="862.0"></text>
</g>
<g>
<title>ipv4_dst_check (7 samples, 1.77%)</title><rect x="284.1" y="835.0" width="20.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="287.1" y="846.0"></text>
</g>
<g>
<title>ip_output (7 samples, 1.77%)</title><rect x="284.1" y="819.0" width="20.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="287.1" y="830.0"></text>
</g>
<g>
<title>ip_finish_output2 (7 samples, 1.77%)</title><rect x="284.1" y="803.0" width="20.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="287.1" y="814.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.25%)</title><rect x="284.1" y="787.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="287.1" y="798.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.25%)</title><rect x="284.1" y="771.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="287.1" y="782.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.25%)</title><rect x="284.1" y="755.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="287.1" y="766.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.25%)</title><rect x="284.1" y="739.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="287.1" y="750.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.25%)</title><rect x="284.1" y="723.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="287.1" y="734.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 1.52%)</title><rect x="287.1" y="787.0" width="17.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="290.1" y="798.0"></text>
</g>
<g>
<title>do_softirq.part.18 (6 samples, 1.52%)</title><rect x="287.1" y="771.0" width="17.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="290.1" y="782.0"></text>
</g>
<g>
<title>do_softirq_own_stack (6 samples, 1.52%)</title><rect x="287.1" y="755.0" width="17.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="290.1" y="766.0"></text>
</g>
<g>
<title>__do_softirq (6 samples, 1.52%)</title><rect x="287.1" y="739.0" width="17.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="290.1" y="750.0"></text>
</g>
<g>
<title>net_rx_action (6 samples, 1.52%)</title><rect x="287.1" y="723.0" width="17.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="290.1" y="734.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 1.52%)</title><rect x="287.1" y="707.0" width="17.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="290.1" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.51%)</title><rect x="287.1" y="691.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="290.1" y="702.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.25%)</title><rect x="287.1" y="675.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="290.1" y="686.0"></text>
</g>
<g>
<title>cpumask_next_and (1 samples, 0.25%)</title><rect x="287.1" y="659.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="290.1" y="670.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="287.1" y="643.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="290.1" y="654.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="287.1" y="627.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="290.1" y="638.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="287.1" y="611.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="290.1" y="622.0"></text>
</g>
<g>
<title>update_sd_lb_stats (1 samples, 0.25%)</title><rect x="287.1" y="595.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="290.1" y="606.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="287.1" y="579.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="290.1" y="590.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="287.1" y="563.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="290.1" y="574.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="287.1" y="547.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="290.1" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="287.1" y="531.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="290.1" y="542.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="287.1" y="515.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="290.1" y="526.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="287.1" y="499.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="290.1" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="287.1" y="483.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="290.1" y="494.0"></text>
</g>
<g>
<title>update_curr (1 samples, 0.25%)</title><rect x="290.1" y="675.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="293.1" y="686.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="290.1" y="659.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="293.1" y="670.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="290.1" y="643.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="293.1" y="654.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.25%)</title><rect x="290.1" y="627.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="293.1" y="638.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="290.1" y="611.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="293.1" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="290.1" y="595.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="293.1" y="606.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="290.1" y="579.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="293.1" y="590.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="290.1" y="563.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="293.1" y="574.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="290.1" y="547.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="293.1" y="558.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="290.1" y="531.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="293.1" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="290.1" y="515.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="293.1" y="526.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="290.1" y="499.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="293.1" y="510.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="290.1" y="483.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="293.1" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="290.1" y="467.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="293.1" y="478.0"></text>
</g>
<g>
<title>sched_clock (3 samples, 0.76%)</title><rect x="293.1" y="691.0" width="8.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="296.1" y="702.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.25%)</title><rect x="293.1" y="675.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="296.1" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.25%)</title><rect x="293.1" y="659.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="296.1" y="670.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="293.1" y="643.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="296.1" y="654.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="293.1" y="627.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="296.1" y="638.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.25%)</title><rect x="293.1" y="611.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="296.1" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="293.1" y="595.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="296.1" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="293.1" y="579.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="296.1" y="590.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.25%)</title><rect x="293.1" y="563.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="296.1" y="574.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="293.1" y="547.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="296.1" y="558.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="293.1" y="531.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="296.1" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="293.1" y="515.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="296.1" y="526.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="293.1" y="499.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="296.1" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="293.1" y="483.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="296.1" y="494.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.25%)</title><rect x="293.1" y="467.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="296.1" y="478.0"></text>
</g>
<g>
<title>__wake_up_common (1 samples, 0.25%)</title><rect x="293.1" y="451.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="296.1" y="462.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="293.1" y="435.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="296.1" y="446.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.25%)</title><rect x="296.1" y="675.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="299.1" y="686.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.25%)</title><rect x="296.1" y="659.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="299.1" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.25%)</title><rect x="296.1" y="643.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="299.1" y="654.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="296.1" y="627.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="299.1" y="638.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="296.1" y="611.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="299.1" y="622.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.25%)</title><rect x="296.1" y="595.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="299.1" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="296.1" y="579.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="299.1" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="296.1" y="563.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="299.1" y="574.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="296.1" y="547.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="299.1" y="558.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="296.1" y="531.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="299.1" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="296.1" y="515.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="299.1" y="526.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="296.1" y="499.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="299.1" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="296.1" y="483.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="299.1" y="494.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.25%)</title><rect x="296.1" y="467.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="299.1" y="478.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="296.1" y="451.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="299.1" y="462.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.25%)</title><rect x="299.0" y="675.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="302.0" y="686.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.25%)</title><rect x="299.0" y="659.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="302.0" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.25%)</title><rect x="299.0" y="643.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="302.0" y="654.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="299.0" y="627.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="302.0" y="638.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="299.0" y="611.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="302.0" y="622.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.25%)</title><rect x="299.0" y="595.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="302.0" y="606.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.25%)</title><rect x="302.0" y="691.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="305.0" y="702.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.25%)</title><rect x="302.0" y="675.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="305.0" y="686.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.25%)</title><rect x="302.0" y="659.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="305.0" y="670.0"></text>
</g>
<g>
<title>task_tick_fair (1 samples, 0.25%)</title><rect x="302.0" y="643.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="305.0" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.25%)</title><rect x="302.0" y="627.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="305.0" y="638.0"></text>
</g>
<g>
<title>update_curr (1 samples, 0.25%)</title><rect x="302.0" y="611.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="305.0" y="622.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="302.0" y="595.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="305.0" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="302.0" y="579.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="305.0" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="302.0" y="563.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="305.0" y="574.0"></text>
</g>
<g>
<title>hw_breakpoint_exceptions_notify (1 samples, 0.25%)</title><rect x="302.0" y="547.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="305.0" y="558.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="302.0" y="531.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="305.0" y="542.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.25%)</title><rect x="302.0" y="515.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="305.0" y="526.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.25%)</title><rect x="305.0" y="867.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="308.0" y="878.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.25%)</title><rect x="308.0" y="915.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="311.0" y="926.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.25%)</title><rect x="308.0" y="899.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="311.0" y="910.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.25%)</title><rect x="308.0" y="883.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="311.0" y="894.0"></text>
</g>
<g>
<title>sys_epoll_wait (102 samples, 25.76%)</title><rect x="311.0" y="979.0" width="303.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="314.0" y="990.0">sys_epoll_wait</text>
</g>
<g>
<title>default_wake_function (102 samples, 25.76%)</title><rect x="311.0" y="963.0" width="303.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="314.0" y="974.0">default_wake_function</text>
</g>
<g>
<title>SYSC_sendto (102 samples, 25.76%)</title><rect x="311.0" y="947.0" width="303.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="314.0" y="958.0">SYSC_sendto</text>
</g>
<g>
<title>sock_sendmsg (101 samples, 25.51%)</title><rect x="311.0" y="931.0" width="300.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="314.0" y="942.0">sock_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.25%)</title><rect x="311.0" y="915.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="314.0" y="926.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.25%)</title><rect x="311.0" y="899.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="314.0" y="910.0"></text>
</g>
<g>
<title>tcp_sendmsg (100 samples, 25.25%)</title><rect x="313.9" y="915.0" width="298.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="316.9" y="926.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.25%)</title><rect x="319.9" y="899.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="322.9" y="910.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (79 samples, 19.95%)</title><rect x="322.9" y="899.0" width="235.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="325.9" y="910.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (79 samples, 19.95%)</title><rect x="322.9" y="883.0" width="235.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="325.9" y="894.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (73 samples, 18.43%)</title><rect x="328.8" y="867.0" width="217.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="331.8" y="878.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_local_out (66 samples, 16.67%)</title><rect x="343.7" y="851.0" width="196.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="346.7" y="862.0">ip_local_out</text>
</g>
<g>
<title>__sk_dst_check (66 samples, 16.67%)</title><rect x="343.7" y="835.0" width="196.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="346.7" y="846.0">__sk_dst_check</text>
</g>
<g>
<title>ipv4_dst_check (66 samples, 16.67%)</title><rect x="343.7" y="819.0" width="196.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="346.7" y="830.0">ipv4_dst_check</text>
</g>
<g>
<title>ip_output (66 samples, 16.67%)</title><rect x="343.7" y="803.0" width="196.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="346.7" y="814.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (65 samples, 16.41%)</title><rect x="343.7" y="787.0" width="193.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="346.7" y="798.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.76%)</title><rect x="349.7" y="771.0" width="8.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="352.7" y="782.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.76%)</title><rect x="349.7" y="755.0" width="8.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="352.7" y="766.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.76%)</title><rect x="349.7" y="739.0" width="8.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="352.7" y="750.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.76%)</title><rect x="349.7" y="723.0" width="8.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="352.7" y="734.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.76%)</title><rect x="349.7" y="707.0" width="8.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="352.7" y="718.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (60 samples, 15.15%)</title><rect x="358.6" y="771.0" width="178.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="361.6" y="782.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.18 (60 samples, 15.15%)</title><rect x="358.6" y="755.0" width="178.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="361.6" y="766.0">do_softirq.part.18</text>
</g>
<g>
<title>do_softirq_own_stack (60 samples, 15.15%)</title><rect x="358.6" y="739.0" width="178.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="361.6" y="750.0">do_softirq_own_stack</text>
</g>
<g>
<title>__do_softirq (59 samples, 14.90%)</title><rect x="358.6" y="723.0" width="175.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="361.6" y="734.0">__do_softirq</text>
</g>
<g>
<title>net_rx_action (56 samples, 14.14%)</title><rect x="367.6" y="707.0" width="166.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="370.6" y="718.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (55 samples, 13.89%)</title><rect x="370.6" y="691.0" width="163.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="373.6" y="702.0">process_backlog</text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.25%)</title><rect x="376.5" y="675.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="379.5" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.25%)</title><rect x="376.5" y="659.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="379.5" y="670.0"></text>
</g>
<g>
<title>hrtimer_interrupt (1 samples, 0.25%)</title><rect x="376.5" y="643.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="379.5" y="654.0"></text>
</g>
<g>
<title>clockevents_program_event (1 samples, 0.25%)</title><rect x="376.5" y="627.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="379.5" y="638.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="376.5" y="611.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="379.5" y="622.0"></text>
</g>
<g>
<title>hrtimer_wakeup (1 samples, 0.25%)</title><rect x="376.5" y="595.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="379.5" y="606.0"></text>
</g>
<g>
<title>hrtimer_wakeup (1 samples, 0.25%)</title><rect x="376.5" y="579.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="379.5" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="376.5" y="563.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="379.5" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="376.5" y="547.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="379.5" y="558.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.25%)</title><rect x="376.5" y="531.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="379.5" y="542.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="376.5" y="515.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="379.5" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="376.5" y="499.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="379.5" y="510.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="376.5" y="483.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="379.5" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="376.5" y="467.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="379.5" y="478.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.25%)</title><rect x="376.5" y="451.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="379.5" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (8 samples, 2.02%)</title><rect x="379.5" y="675.0" width="23.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="382.5" y="686.0">_..</text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.25%)</title><rect x="382.5" y="659.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="385.5" y="670.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.25%)</title><rect x="382.5" y="643.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="385.5" y="654.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="382.5" y="627.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="385.5" y="638.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="382.5" y="611.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="385.5" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="382.5" y="595.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="385.5" y="606.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="382.5" y="579.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="385.5" y="590.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="382.5" y="563.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="385.5" y="574.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="382.5" y="547.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="385.5" y="558.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="382.5" y="531.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="385.5" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="382.5" y="515.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="385.5" y="526.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="382.5" y="499.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="385.5" y="510.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.25%)</title><rect x="382.5" y="483.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="385.5" y="494.0"></text>
</g>
<g>
<title>load_balance (2 samples, 0.51%)</title><rect x="385.5" y="659.0" width="5.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="388.5" y="670.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.51%)</title><rect x="385.5" y="643.0" width="5.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="388.5" y="654.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.51%)</title><rect x="385.5" y="627.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="388.5" y="638.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.51%)</title><rect x="385.5" y="611.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="388.5" y="622.0"></text>
</g>
<g>
<title>update_sd_lb_stats (2 samples, 0.51%)</title><rect x="385.5" y="595.0" width="5.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="388.5" y="606.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.25%)</title><rect x="385.5" y="579.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="388.5" y="590.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="388.4" y="579.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="391.4" y="590.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="388.4" y="563.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="391.4" y="574.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="388.4" y="547.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="391.4" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="388.4" y="531.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="391.4" y="542.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.25%)</title><rect x="388.4" y="515.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="391.4" y="526.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="388.4" y="499.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="391.4" y="510.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.25%)</title><rect x="388.4" y="483.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="391.4" y="494.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.25%)</title><rect x="388.4" y="467.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="391.4" y="478.0"></text>
</g>
<g>
<title>update_curr (4 samples, 1.01%)</title><rect x="391.4" y="659.0" width="11.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="394.4" y="670.0"></text>
</g>
<g>
<title>enqueue_entity (4 samples, 1.01%)</title><rect x="391.4" y="643.0" width="11.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="394.4" y="654.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 1.01%)</title><rect x="391.4" y="627.0" width="11.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="394.4" y="638.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.25%)</title><rect x="391.4" y="611.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="394.4" y="622.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.25%)</title><rect x="391.4" y="595.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="394.4" y="606.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.25%)</title><rect x="391.4" y="579.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="394.4" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="391.4" y="563.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="394.4" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="391.4" y="547.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="394.4" y="558.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.25%)</title><rect x="391.4" y="531.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="394.4" y="542.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.25%)</title><rect x="391.4" y="515.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="394.4" y="526.0"></text>
</g>
<g>
<title>hrtimer_wakeup (1 samples, 0.25%)</title><rect x="391.4" y="499.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="394.4" y="510.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="391.4" y="483.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="394.4" y="494.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="391.4" y="467.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="394.4" y="478.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="391.4" y="451.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="394.4" y="462.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="391.4" y="435.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="394.4" y="446.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.25%)</title><rect x="391.4" y="419.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="394.4" y="430.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="391.4" y="403.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="394.4" y="414.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.25%)</title><rect x="391.4" y="387.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="394.4" y="398.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (3 samples, 0.76%)</title><rect x="394.4" y="611.0" width="8.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="397.4" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.76%)</title><rect x="394.4" y="595.0" width="8.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="397.4" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.76%)</title><rect x="394.4" y="579.0" width="8.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="397.4" y="590.0"></text>
</g>
<g>
<title>find_busiest_group (2 samples, 0.51%)</title><rect x="394.4" y="563.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="397.4" y="574.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.51%)</title><rect x="394.4" y="547.0" width="6.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="397.4" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.51%)</title><rect x="394.4" y="531.0" width="6.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="397.4" y="542.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.51%)</title><rect x="394.4" y="515.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="397.4" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.51%)</title><rect x="394.4" y="499.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="397.4" y="510.0"></text>
</g>
<g>
<title>tcp_data_queue (2 samples, 0.51%)</title><rect x="394.4" y="483.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="397.4" y="494.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.51%)</title><rect x="394.4" y="467.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="397.4" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.51%)</title><rect x="394.4" y="451.0" width="6.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="397.4" y="462.0"></text>
</g>
<g>
<title>update_sd_lb_stats (1 samples, 0.25%)</title><rect x="400.4" y="563.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="403.4" y="574.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="400.4" y="547.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="403.4" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="400.4" y="531.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="403.4" y="542.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="400.4" y="515.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="403.4" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="400.4" y="499.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="403.4" y="510.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="400.4" y="483.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="403.4" y="494.0"></text>
</g>
<g>
<title>sched_clock (22 samples, 5.56%)</title><rect x="403.3" y="675.0" width="65.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="406.3" y="686.0">sched_c..</text>
</g>
<g>
<title>enqueue_task_fair (16 samples, 4.04%)</title><rect x="403.3" y="659.0" width="47.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="406.3" y="670.0">enqu..</text>
</g>
<g>
<title>__netif_receive_skb_core (15 samples, 3.79%)</title><rect x="403.3" y="643.0" width="44.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="406.3" y="654.0">__ne..</text>
</g>
<g>
<title>do_send_sig_info (3 samples, 0.76%)</title><rect x="403.3" y="627.0" width="9.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="406.3" y="638.0"></text>
</g>
<g>
<title>enqueue_entity (3 samples, 0.76%)</title><rect x="403.3" y="611.0" width="9.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="406.3" y="622.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.76%)</title><rect x="403.3" y="595.0" width="9.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="406.3" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="403.3" y="579.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="406.3" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="403.3" y="563.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="406.3" y="574.0"></text>
</g>
<g>
<title>hw_breakpoint_exceptions_notify (1 samples, 0.25%)</title><rect x="403.3" y="547.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="406.3" y="558.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="403.3" y="531.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="406.3" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="403.3" y="515.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="406.3" y="526.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="403.3" y="499.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="406.3" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="403.3" y="483.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="406.3" y="494.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="403.3" y="467.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="406.3" y="478.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="403.3" y="451.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="406.3" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="403.3" y="435.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="406.3" y="446.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (2 samples, 0.51%)</title><rect x="406.3" y="579.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="409.3" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.51%)</title><rect x="406.3" y="563.0" width="6.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="409.3" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.51%)</title><rect x="406.3" y="547.0" width="6.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="409.3" y="558.0"></text>
</g>
<g>
<title>hw_breakpoint_exceptions_notify (1 samples, 0.25%)</title><rect x="406.3" y="531.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="409.3" y="542.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="406.3" y="515.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="409.3" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="406.3" y="499.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="409.3" y="510.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="406.3" y="483.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="409.3" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="406.3" y="467.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="409.3" y="478.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="406.3" y="451.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="409.3" y="462.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="406.3" y="435.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="409.3" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="406.3" y="419.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="409.3" y="430.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="409.3" y="531.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="412.3" y="542.0"></text>
</g>
<g>
<title>enqueue_entity (11 samples, 2.78%)</title><rect x="412.3" y="627.0" width="32.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="415.3" y="638.0">en..</text>
</g>
<g>
<title>ip_rcv (11 samples, 2.78%)</title><rect x="412.3" y="611.0" width="32.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="415.3" y="622.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.76%)</title><rect x="412.3" y="595.0" width="8.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="415.3" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.76%)</title><rect x="412.3" y="579.0" width="8.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="415.3" y="590.0"></text>
</g>
<g>
<title>find_busiest_group (3 samples, 0.76%)</title><rect x="412.3" y="563.0" width="8.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="415.3" y="574.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.76%)</title><rect x="412.3" y="547.0" width="8.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="415.3" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.76%)</title><rect x="412.3" y="531.0" width="8.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="415.3" y="542.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.76%)</title><rect x="412.3" y="515.0" width="8.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="415.3" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.76%)</title><rect x="412.3" y="499.0" width="8.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="415.3" y="510.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.25%)</title><rect x="415.3" y="483.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="418.3" y="494.0"></text>
</g>
<g>
<title>__wake_up_common (1 samples, 0.25%)</title><rect x="415.3" y="467.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="418.3" y="478.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="415.3" y="451.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="418.3" y="462.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.25%)</title><rect x="415.3" y="435.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="418.3" y="446.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.25%)</title><rect x="415.3" y="419.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="418.3" y="430.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="418.2" y="483.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="421.2" y="494.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="418.2" y="467.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="421.2" y="478.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (8 samples, 2.02%)</title><rect x="421.2" y="595.0" width="23.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="424.2" y="606.0">u..</text>
</g>
<g>
<title>ip_local_deliver (8 samples, 2.02%)</title><rect x="421.2" y="579.0" width="23.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="424.2" y="590.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (8 samples, 2.02%)</title><rect x="421.2" y="563.0" width="23.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="424.2" y="574.0">i..</text>
</g>
<g>
<title>find_busiest_group (2 samples, 0.51%)</title><rect x="421.2" y="547.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="424.2" y="558.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.25%)</title><rect x="421.2" y="531.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="424.2" y="542.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="424.2" y="531.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="427.2" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="424.2" y="515.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="427.2" y="526.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="424.2" y="499.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="427.2" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="424.2" y="483.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="427.2" y="494.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="424.2" y="467.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="427.2" y="478.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="424.2" y="451.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="427.2" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="424.2" y="435.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="427.2" y="446.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 1.26%)</title><rect x="427.2" y="547.0" width="14.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="430.2" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 1.26%)</title><rect x="427.2" y="531.0" width="14.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="430.2" y="542.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 1.26%)</title><rect x="427.2" y="515.0" width="14.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="430.2" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 1.26%)</title><rect x="427.2" y="499.0" width="14.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="430.2" y="510.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.51%)</title><rect x="427.2" y="483.0" width="5.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="430.2" y="494.0"></text>
</g>
<g>
<title>__wake_up_common (1 samples, 0.25%)</title><rect x="427.2" y="467.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="430.2" y="478.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="427.2" y="451.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="430.2" y="462.0"></text>
</g>
<g>
<title>get_seconds (1 samples, 0.25%)</title><rect x="427.2" y="435.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="430.2" y="446.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="430.2" y="467.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="433.2" y="478.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.25%)</title><rect x="430.2" y="451.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="433.2" y="462.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.25%)</title><rect x="430.2" y="435.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="433.2" y="446.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="433.1" y="483.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="436.1" y="494.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.25%)</title><rect x="433.1" y="467.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="436.1" y="478.0"></text>
</g>
<g>
<title>tcp_data_queue (2 samples, 0.51%)</title><rect x="436.1" y="483.0" width="6.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="439.1" y="494.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="439.1" y="467.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="442.1" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="439.1" y="451.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="442.1" y="462.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.25%)</title><rect x="442.1" y="547.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="445.1" y="558.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="442.1" y="531.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="445.1" y="542.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="442.1" y="515.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="445.1" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="442.1" y="499.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="445.1" y="510.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="442.1" y="483.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="445.1" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="442.1" y="467.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="445.1" y="478.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.25%)</title><rect x="442.1" y="451.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="445.1" y="462.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="442.1" y="435.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="445.1" y="446.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.25%)</title><rect x="442.1" y="419.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="445.1" y="430.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.25%)</title><rect x="445.1" y="627.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="448.1" y="638.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="445.1" y="611.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="448.1" y="622.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="445.1" y="595.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="448.1" y="606.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.25%)</title><rect x="445.1" y="579.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="448.1" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="445.1" y="563.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="448.1" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="445.1" y="547.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="448.1" y="558.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="445.1" y="531.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="448.1" y="542.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="445.1" y="515.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="448.1" y="526.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.25%)</title><rect x="445.1" y="499.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="448.1" y="510.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.25%)</title><rect x="448.0" y="643.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="451.0" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.25%)</title><rect x="448.0" y="627.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="451.0" y="638.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="448.0" y="611.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="451.0" y="622.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="448.0" y="595.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="451.0" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="448.0" y="579.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="451.0" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="448.0" y="563.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="451.0" y="574.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="448.0" y="547.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="451.0" y="558.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="448.0" y="531.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="451.0" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="448.0" y="515.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="451.0" y="526.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="448.0" y="499.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="451.0" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="448.0" y="483.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="451.0" y="494.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="448.0" y="467.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="451.0" y="478.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="448.0" y="451.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="451.0" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="448.0" y="435.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="451.0" y="446.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.25%)</title><rect x="451.0" y="659.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="454.0" y="670.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.25%)</title><rect x="451.0" y="643.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="454.0" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.25%)</title><rect x="451.0" y="627.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="454.0" y="638.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="451.0" y="611.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="454.0" y="622.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="451.0" y="595.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="454.0" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="451.0" y="579.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="454.0" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="451.0" y="563.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="454.0" y="574.0"></text>
</g>
<g>
<title>update_sd_lb_stats (1 samples, 0.25%)</title><rect x="451.0" y="547.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="454.0" y="558.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="451.0" y="531.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="454.0" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="451.0" y="515.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="454.0" y="526.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="451.0" y="499.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="454.0" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="451.0" y="483.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="454.0" y="494.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.25%)</title><rect x="451.0" y="467.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="454.0" y="478.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="451.0" y="451.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="454.0" y="462.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.25%)</title><rect x="451.0" y="435.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="454.0" y="446.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (5 samples, 1.26%)</title><rect x="454.0" y="659.0" width="14.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="457.0" y="670.0"></text>
</g>
<g>
<title>enqueue_task_fair (5 samples, 1.26%)</title><rect x="454.0" y="643.0" width="14.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="457.0" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 1.26%)</title><rect x="454.0" y="627.0" width="14.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="457.0" y="638.0"></text>
</g>
<g>
<title>enqueue_entity (4 samples, 1.01%)</title><rect x="457.0" y="611.0" width="11.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="460.0" y="622.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 1.01%)</title><rect x="457.0" y="595.0" width="11.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="460.0" y="606.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (4 samples, 1.01%)</title><rect x="457.0" y="579.0" width="11.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="460.0" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 1.01%)</title><rect x="457.0" y="563.0" width="11.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="460.0" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 1.01%)</title><rect x="457.0" y="547.0" width="11.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="460.0" y="558.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="457.0" y="531.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="460.0" y="542.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="457.0" y="515.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="460.0" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="457.0" y="499.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="460.0" y="510.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="457.0" y="483.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="460.0" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="457.0" y="467.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="460.0" y="478.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="457.0" y="451.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="460.0" y="462.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="457.0" y="435.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="460.0" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="457.0" y="419.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="460.0" y="430.0"></text>
</g>
<g>
<title>hw_breakpoint_exceptions_notify (1 samples, 0.25%)</title><rect x="459.9" y="531.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="462.9" y="542.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="459.9" y="515.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="462.9" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="459.9" y="499.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="462.9" y="510.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="459.9" y="483.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="462.9" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="459.9" y="467.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="462.9" y="478.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="459.9" y="451.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="462.9" y="462.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="459.9" y="435.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="462.9" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="459.9" y="419.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="462.9" y="430.0"></text>
</g>
<g>
<title>task_tick_fair (1 samples, 0.25%)</title><rect x="462.9" y="531.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="465.9" y="542.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="462.9" y="515.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="465.9" y="526.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.25%)</title><rect x="462.9" y="499.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="465.9" y="510.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="465.9" y="531.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="468.9" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="465.9" y="515.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="468.9" y="526.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="465.9" y="499.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="468.9" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="465.9" y="483.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="468.9" y="494.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.25%)</title><rect x="465.9" y="467.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="468.9" y="478.0"></text>
</g>
<g>
<title>__wake_up_common (1 samples, 0.25%)</title><rect x="465.9" y="451.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="468.9" y="462.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="465.9" y="435.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="468.9" y="446.0"></text>
</g>
<g>
<title>update_blocked_averages (22 samples, 5.56%)</title><rect x="468.9" y="675.0" width="65.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="471.9" y="686.0">update_..</text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.25%)</title><rect x="468.9" y="659.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="471.9" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.25%)</title><rect x="468.9" y="643.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="471.9" y="654.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="468.9" y="627.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="471.9" y="638.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="468.9" y="611.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="471.9" y="622.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.25%)</title><rect x="468.9" y="595.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="471.9" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="468.9" y="579.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="471.9" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="468.9" y="563.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="471.9" y="574.0"></text>
</g>
<g>
<title>update_curr (1 samples, 0.25%)</title><rect x="468.9" y="547.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="471.9" y="558.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="468.9" y="531.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="471.9" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="468.9" y="515.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="471.9" y="526.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="468.9" y="499.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="471.9" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="468.9" y="483.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="471.9" y="494.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="468.9" y="467.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="471.9" y="478.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (21 samples, 5.30%)</title><rect x="471.9" y="659.0" width="62.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="474.9" y="670.0">update..</text>
</g>
<g>
<title>sched_clock (21 samples, 5.30%)</title><rect x="471.9" y="643.0" width="62.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="474.9" y="654.0">sched_..</text>
</g>
<g>
<title>check_preempt_wakeup (1 samples, 0.25%)</title><rect x="471.9" y="627.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="474.9" y="638.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.25%)</title><rect x="471.9" y="611.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="474.9" y="622.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="471.9" y="595.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="474.9" y="606.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="471.9" y="579.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="474.9" y="590.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.25%)</title><rect x="471.9" y="563.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="474.9" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="471.9" y="547.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="474.9" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="471.9" y="531.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="474.9" y="542.0"></text>
</g>
<g>
<title>hw_breakpoint_exceptions_notify (1 samples, 0.25%)</title><rect x="471.9" y="515.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="474.9" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="471.9" y="499.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="474.9" y="510.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="471.9" y="483.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="474.9" y="494.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="471.9" y="467.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="474.9" y="478.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="471.9" y="451.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="474.9" y="462.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="471.9" y="435.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="474.9" y="446.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="471.9" y="419.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="474.9" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="471.9" y="403.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="474.9" y="414.0"></text>
</g>
<g>
<title>task_tick_fair (20 samples, 5.05%)</title><rect x="474.8" y="627.0" width="59.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="477.8" y="638.0">task_t..</text>
</g>
<g>
<title>__netif_receive_skb_core (20 samples, 5.05%)</title><rect x="474.8" y="611.0" width="59.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="477.8" y="622.0">__neti..</text>
</g>
<g>
<title>do_send_sig_info (4 samples, 1.01%)</title><rect x="474.8" y="595.0" width="12.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="477.8" y="606.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="474.8" y="579.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="477.8" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="474.8" y="563.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="477.8" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="474.8" y="547.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="477.8" y="558.0"></text>
</g>
<g>
<title>hw_breakpoint_exceptions_notify (1 samples, 0.25%)</title><rect x="474.8" y="531.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="477.8" y="542.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="474.8" y="515.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="477.8" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="474.8" y="499.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="477.8" y="510.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="474.8" y="483.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="477.8" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="474.8" y="467.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="477.8" y="478.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="474.8" y="451.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="477.8" y="462.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.25%)</title><rect x="474.8" y="435.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="477.8" y="446.0"></text>
</g>
<g>
<title>load_balance (3 samples, 0.76%)</title><rect x="477.8" y="579.0" width="9.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="480.8" y="590.0"></text>
</g>
<g>
<title>cpumask_next_and (1 samples, 0.25%)</title><rect x="477.8" y="563.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="480.8" y="574.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="477.8" y="547.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="480.8" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="477.8" y="531.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="480.8" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="477.8" y="515.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="480.8" y="526.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="477.8" y="499.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="480.8" y="510.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="477.8" y="483.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="480.8" y="494.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="477.8" y="467.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="480.8" y="478.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="477.8" y="451.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="480.8" y="462.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="477.8" y="435.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="480.8" y="446.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="477.8" y="419.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="480.8" y="430.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="477.8" y="403.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="480.8" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="477.8" y="387.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="480.8" y="398.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="480.8" y="563.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="483.8" y="574.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="480.8" y="547.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="483.8" y="558.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.25%)</title><rect x="480.8" y="531.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="483.8" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="480.8" y="515.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="483.8" y="526.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="480.8" y="499.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="483.8" y="510.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="480.8" y="483.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="483.8" y="494.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="480.8" y="467.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="483.8" y="478.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="480.8" y="451.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="483.8" y="462.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="480.8" y="435.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="483.8" y="446.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="480.8" y="419.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="483.8" y="430.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="480.8" y="403.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="483.8" y="414.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="480.8" y="387.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="483.8" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="480.8" y="371.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="483.8" y="382.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="483.8" y="563.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="486.8" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="483.8" y="547.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="486.8" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="483.8" y="531.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="486.8" y="542.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="483.8" y="515.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="486.8" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="483.8" y="499.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="486.8" y="510.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="483.8" y="483.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="486.8" y="494.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="483.8" y="467.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="486.8" y="478.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="483.8" y="451.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="486.8" y="462.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.25%)</title><rect x="483.8" y="435.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="486.8" y="446.0"></text>
</g>
<g>
<title>__wake_up_common (1 samples, 0.25%)</title><rect x="483.8" y="419.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="486.8" y="430.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="483.8" y="403.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="486.8" y="414.0"></text>
</g>
<g>
<title>enqueue_entity (8 samples, 2.02%)</title><rect x="486.8" y="595.0" width="23.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="489.8" y="606.0">e..</text>
</g>
<g>
<title>ip_rcv (8 samples, 2.02%)</title><rect x="486.8" y="579.0" width="23.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="489.8" y="590.0">i..</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="486.8" y="563.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="489.8" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="486.8" y="547.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="489.8" y="558.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (7 samples, 1.77%)</title><rect x="489.7" y="563.0" width="20.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="492.7" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver (7 samples, 1.77%)</title><rect x="489.7" y="547.0" width="20.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="492.7" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (7 samples, 1.77%)</title><rect x="489.7" y="531.0" width="20.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="492.7" y="542.0"></text>
</g>
<g>
<title>find_busiest_group (3 samples, 0.76%)</title><rect x="489.7" y="515.0" width="9.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="492.7" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.76%)</title><rect x="489.7" y="499.0" width="9.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="492.7" y="510.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.25%)</title><rect x="489.7" y="483.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="492.7" y="494.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.51%)</title><rect x="492.7" y="483.0" width="6.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="495.7" y="494.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.51%)</title><rect x="492.7" y="467.0" width="6.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="495.7" y="478.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.51%)</title><rect x="492.7" y="451.0" width="6.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="495.7" y="462.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.25%)</title><rect x="492.7" y="435.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="495.7" y="446.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="492.7" y="419.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="495.7" y="430.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.25%)</title><rect x="492.7" y="403.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="495.7" y="414.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.25%)</title><rect x="495.7" y="435.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="498.7" y="446.0"></text>
</g>
<g>
<title>hw_breakpoint_exceptions_notify (3 samples, 0.76%)</title><rect x="498.7" y="515.0" width="8.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="501.7" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.76%)</title><rect x="498.7" y="499.0" width="8.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="501.7" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.25%)</title><rect x="498.7" y="483.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="501.7" y="494.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.51%)</title><rect x="501.7" y="483.0" width="5.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="504.7" y="494.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.51%)</title><rect x="501.7" y="467.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="504.7" y="478.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.51%)</title><rect x="501.7" y="451.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="504.7" y="462.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="501.7" y="435.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="504.7" y="446.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.25%)</title><rect x="501.7" y="419.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="504.7" y="430.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="504.6" y="435.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="507.6" y="446.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="504.6" y="419.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="507.6" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="504.6" y="403.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="507.6" y="414.0"></text>
</g>
<g>
<title>update_sd_lb_stats (1 samples, 0.25%)</title><rect x="507.6" y="515.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="510.6" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="507.6" y="499.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="510.6" y="510.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="507.6" y="483.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="510.6" y="494.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="507.6" y="467.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="510.6" y="478.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="507.6" y="451.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="510.6" y="462.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.25%)</title><rect x="507.6" y="435.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="510.6" y="446.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="507.6" y="419.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="510.6" y="430.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.51%)</title><rect x="510.6" y="595.0" width="6.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="513.6" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="513.6" y="579.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="516.6" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="513.6" y="563.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="516.6" y="574.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="513.6" y="547.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="516.6" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="513.6" y="531.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="516.6" y="542.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="513.6" y="515.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="516.6" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="513.6" y="499.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="516.6" y="510.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.25%)</title><rect x="513.6" y="483.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="516.6" y="494.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="513.6" y="467.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="516.6" y="478.0"></text>
</g>
<g>
<title>tcp_rtt_estimator (1 samples, 0.25%)</title><rect x="513.6" y="451.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="516.6" y="462.0"></text>
</g>
<g>
<title>load_balance (3 samples, 0.76%)</title><rect x="516.6" y="595.0" width="8.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="519.6" y="606.0"></text>
</g>
<g>
<title>cpumask_next_and (2 samples, 0.51%)</title><rect x="516.6" y="579.0" width="5.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="519.6" y="590.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.51%)</title><rect x="516.6" y="563.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="519.6" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.51%)</title><rect x="516.6" y="547.0" width="5.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="519.6" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.51%)</title><rect x="516.6" y="531.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="519.6" y="542.0"></text>
</g>
<g>
<title>find_busiest_group (2 samples, 0.51%)</title><rect x="516.6" y="515.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="519.6" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.51%)</title><rect x="516.6" y="499.0" width="5.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="519.6" y="510.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.51%)</title><rect x="516.6" y="483.0" width="5.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="519.6" y="494.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.51%)</title><rect x="516.6" y="467.0" width="5.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="519.6" y="478.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.51%)</title><rect x="516.6" y="451.0" width="5.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="519.6" y="462.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.25%)</title><rect x="516.6" y="435.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="519.6" y="446.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="516.6" y="419.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="519.6" y="430.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.25%)</title><rect x="516.6" y="403.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="519.6" y="414.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.25%)</title><rect x="516.6" y="387.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="519.6" y="398.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="519.5" y="435.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="522.5" y="446.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.25%)</title><rect x="519.5" y="419.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="522.5" y="430.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="522.5" y="579.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="525.5" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="522.5" y="563.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="525.5" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="522.5" y="547.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="525.5" y="558.0"></text>
</g>
<g>
<title>update_sd_lb_stats (1 samples, 0.25%)</title><rect x="522.5" y="531.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="525.5" y="542.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="522.5" y="515.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="525.5" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="522.5" y="499.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="525.5" y="510.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="522.5" y="483.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="525.5" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="522.5" y="467.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="525.5" y="478.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="522.5" y="451.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="525.5" y="462.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="522.5" y="435.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="525.5" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="522.5" y="419.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="525.5" y="430.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.25%)</title><rect x="525.5" y="595.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="528.5" y="606.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="525.5" y="579.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="528.5" y="590.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="525.5" y="563.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="528.5" y="574.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.25%)</title><rect x="525.5" y="547.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="528.5" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="525.5" y="531.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="528.5" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="525.5" y="515.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="528.5" y="526.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="525.5" y="499.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="528.5" y="510.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="525.5" y="483.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="528.5" y="494.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="525.5" y="467.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="528.5" y="478.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="525.5" y="451.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="528.5" y="462.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="525.5" y="435.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="528.5" y="446.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="525.5" y="419.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="528.5" y="430.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="525.5" y="403.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="528.5" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="525.5" y="387.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="528.5" y="398.0"></text>
</g>
<g>
<title>update_curr (2 samples, 0.51%)</title><rect x="528.5" y="595.0" width="5.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="531.5" y="606.0"></text>
</g>
<g>
<title>enqueue_entity (2 samples, 0.51%)</title><rect x="528.5" y="579.0" width="5.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="531.5" y="590.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.51%)</title><rect x="528.5" y="563.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="531.5" y="574.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (2 samples, 0.51%)</title><rect x="528.5" y="547.0" width="5.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="531.5" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.51%)</title><rect x="528.5" y="531.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="531.5" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.51%)</title><rect x="528.5" y="515.0" width="5.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="531.5" y="526.0"></text>
</g>
<g>
<title>hw_breakpoint_exceptions_notify (2 samples, 0.51%)</title><rect x="528.5" y="499.0" width="5.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="531.5" y="510.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.51%)</title><rect x="528.5" y="483.0" width="5.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="531.5" y="494.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.51%)</title><rect x="528.5" y="467.0" width="5.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="531.5" y="478.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.51%)</title><rect x="528.5" y="451.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="531.5" y="462.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.51%)</title><rect x="528.5" y="435.0" width="5.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="531.5" y="446.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="528.5" y="419.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="531.5" y="430.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.25%)</title><rect x="528.5" y="403.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="531.5" y="414.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="531.5" y="419.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="534.5" y="430.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.25%)</title><rect x="531.5" y="403.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="534.5" y="414.0"></text>
</g>
<g>
<title>hrtimer_interrupt (1 samples, 0.25%)</title><rect x="534.4" y="723.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="537.4" y="734.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.25%)</title><rect x="534.4" y="707.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="537.4" y="718.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.25%)</title><rect x="537.4" y="787.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="540.4" y="798.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.25%)</title><rect x="540.4" y="851.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="543.4" y="862.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.25%)</title><rect x="540.4" y="835.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="543.4" y="846.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.25%)</title><rect x="540.4" y="819.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="543.4" y="830.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.25%)</title><rect x="543.4" y="851.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="546.4" y="862.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.51%)</title><rect x="546.4" y="867.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="549.4" y="878.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.25%)</title><rect x="549.3" y="851.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="552.3" y="862.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.25%)</title><rect x="549.3" y="835.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="552.3" y="846.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.25%)</title><rect x="549.3" y="819.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="552.3" y="830.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.25%)</title><rect x="549.3" y="803.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="552.3" y="814.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.51%)</title><rect x="552.3" y="867.0" width="6.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="555.3" y="878.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.51%)</title><rect x="552.3" y="851.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="555.3" y="862.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.25%)</title><rect x="555.3" y="835.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="558.3" y="846.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.25%)</title><rect x="555.3" y="819.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="558.3" y="830.0"></text>
</g>
<g>
<title>copy_from_iter (1 samples, 0.25%)</title><rect x="558.3" y="899.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="561.3" y="910.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.25%)</title><rect x="558.3" y="883.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="561.3" y="894.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.25%)</title><rect x="558.3" y="867.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="561.3" y="878.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 3.03%)</title><rect x="561.3" y="899.0" width="35.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="564.3" y="910.0">sk_..</text>
</g>
<g>
<title>__alloc_skb (4 samples, 1.01%)</title><rect x="567.2" y="883.0" width="11.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="570.2" y="894.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.25%)</title><rect x="576.2" y="867.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="579.2" y="878.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.25%)</title><rect x="579.1" y="883.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="582.1" y="894.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 1.26%)</title><rect x="582.1" y="883.0" width="14.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="585.1" y="894.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 1.26%)</title><rect x="582.1" y="867.0" width="14.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="585.1" y="878.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.35 (1 samples, 0.25%)</title><rect x="585.1" y="851.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="588.1" y="862.0"></text>
</g>
<g>
<title>copy_to_iter (2 samples, 0.51%)</title><rect x="588.1" y="851.0" width="5.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="591.1" y="862.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.51%)</title><rect x="588.1" y="835.0" width="5.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="591.1" y="846.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.25%)</title><rect x="594.0" y="851.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="597.0" y="862.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.25%)</title><rect x="597.0" y="899.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="600.0" y="910.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 1.01%)</title><rect x="600.0" y="899.0" width="11.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="603.0" y="910.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 1.01%)</title><rect x="600.0" y="883.0" width="11.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="603.0" y="894.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 1.01%)</title><rect x="600.0" y="867.0" width="11.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="603.0" y="878.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.25%)</title><rect x="600.0" y="851.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="603.0" y="862.0"></text>
</g>
<g>
<title>tcp_established_options (3 samples, 0.76%)</title><rect x="603.0" y="851.0" width="8.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="606.0" y="862.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (2 samples, 0.51%)</title><rect x="606.0" y="835.0" width="5.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="609.0" y="846.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.25%)</title><rect x="611.9" y="931.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="614.9" y="942.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.25%)</title><rect x="611.9" y="915.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="614.9" y="926.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.25%)</title><rect x="611.9" y="899.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="614.9" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.25%)</title><rect x="614.9" y="1107.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="617.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.25%)</title><rect x="614.9" y="1091.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="617.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.25%)</title><rect x="614.9" y="1075.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="617.9" y="1086.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.25%)</title><rect x="614.9" y="1059.0" width="3.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="617.9" y="1070.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.25%)</title><rect x="617.9" y="1107.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="620.9" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/MyHttpServer.entity (63 samples, 15.91%)</title><rect x="620.9" y="1123.0" width="187.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.9" y="1134.0">ru/mail/polis/service/im..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.25%)</title><rect x="620.9" y="1107.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="623.9" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.25%)</title><rect x="620.9" y="1091.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="623.9" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.25%)</title><rect x="620.9" y="1075.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="623.9" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (62 samples, 15.66%)</title><rect x="623.8" y="1107.0" width="184.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.8" y="1118.0">ru/mail/polis/dao/impl/R..</text>
</g>
<g>
<title>InterpreterRuntime::exception_handler_for_exception(JavaThread*, oopDesc*) (1 samples, 0.25%)</title><rect x="626.8" y="1091.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="629.8" y="1102.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (55 samples, 13.89%)</title><rect x="629.8" y="1091.0" width="163.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.8" y="1102.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (55 samples, 13.89%)</title><rect x="629.8" y="1075.0" width="163.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.8" y="1086.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (48 samples, 12.12%)</title><rect x="629.8" y="1059.0" width="143.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="632.8" y="1070.0">Java_org_rocksdb_R..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22 (1 samples, 0.25%)</title><rect x="632.8" y="1043.0" width="3.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="635.8" y="1054.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.51%)</title><rect x="635.8" y="1043.0" width="5.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="638.8" y="1054.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.51%)</title><rect x="641.7" y="1043.0" width="6.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="644.7" y="1054.0"></text>
</g>
<g>
<title>_init (1 samples, 0.25%)</title><rect x="647.7" y="1043.0" width="3.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="650.7" y="1054.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.25%)</title><rect x="650.7" y="1043.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="653.7" y="1054.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.25%)</title><rect x="653.6" y="1043.0" width="3.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="656.6" y="1054.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.25%)</title><rect x="656.6" y="1043.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="659.6" y="1054.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (38 samples, 9.60%)</title><rect x="659.6" y="1043.0" width="113.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="662.6" y="1054.0">rocksdb_get_he..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.25%)</title><rect x="659.6" y="1027.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="662.6" y="1038.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.25%)</title><rect x="662.6" y="1027.0" width="3.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="665.6" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.25%)</title><rect x="662.6" y="1011.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="665.6" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (36 samples, 9.09%)</title><rect x="665.6" y="1027.0" width="107.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="668.6" y="1038.0">rocksdb::DB::..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (33 samples, 8.33%)</title><rect x="665.6" y="1011.0" width="98.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="668.6" y="1022.0">rocksdb::DB:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (32 samples, 8.08%)</title><rect x="665.6" y="995.0" width="95.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="668.6" y="1006.0">rocksdb::DB..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.25%)</title><rect x="665.6" y="979.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="668.6" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.25%)</title><rect x="668.5" y="979.0" width="3.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="671.5" y="990.0"></text>
</g>
<g>
<title>_init (3 samples, 0.76%)</title><rect x="671.5" y="979.0" width="9.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="674.5" y="990.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.25%)</title><rect x="680.5" y="979.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="683.5" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.25%)</title><rect x="683.4" y="979.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="686.4" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (24 samples, 6.06%)</title><rect x="686.4" y="979.0" width="71.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="689.4" y="990.0">rocksdb:..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.25%)</title><rect x="704.3" y="963.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="707.3" y="974.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (2 samples, 0.51%)</title><rect x="707.3" y="963.0" width="5.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="710.3" y="974.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.51%)</title><rect x="713.2" y="963.0" width="6.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="716.2" y="974.0"></text>
</g>
<g>
<title>_init (1 samples, 0.25%)</title><rect x="719.2" y="963.0" width="3.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="722.2" y="974.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.51%)</title><rect x="722.2" y="963.0" width="5.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="725.2" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.25%)</title><rect x="722.2" y="947.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="725.2" y="958.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.25%)</title><rect x="725.2" y="947.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="728.2" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.51%)</title><rect x="728.1" y="963.0" width="6.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="731.1" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.51%)</title><rect x="728.1" y="947.0" width="6.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="731.1" y="958.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.25%)</title><rect x="734.1" y="963.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="737.1" y="974.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (1 samples, 0.25%)</title><rect x="737.1" y="963.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="740.1" y="974.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.25%)</title><rect x="740.1" y="963.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="743.1" y="974.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.25%)</title><rect x="743.0" y="963.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="746.0" y="974.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (4 samples, 1.01%)</title><rect x="746.0" y="963.0" width="11.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="749.0" y="974.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.51%)</title><rect x="752.0" y="947.0" width="5.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="755.0" y="958.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.25%)</title><rect x="757.9" y="979.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="760.9" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.25%)</title><rect x="760.9" y="995.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="763.9" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (3 samples, 0.76%)</title><rect x="763.9" y="1011.0" width="8.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="766.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.51%)</title><rect x="772.8" y="1059.0" width="6.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="775.8" y="1070.0"></text>
</g>
<g>
<title>_int_free (2 samples, 0.51%)</title><rect x="772.8" y="1043.0" width="6.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="775.8" y="1054.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.51%)</title><rect x="778.8" y="1059.0" width="5.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="781.8" y="1070.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (3 samples, 0.76%)</title><rect x="784.7" y="1059.0" width="9.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="787.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (5 samples, 1.26%)</title><rect x="793.7" y="1091.0" width="14.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="796.7" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 1.26%)</title><rect x="793.7" y="1075.0" width="14.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="796.7" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 1.26%)</title><rect x="793.7" y="1059.0" width="14.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="796.7" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 1.26%)</title><rect x="793.7" y="1043.0" width="14.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.7" y="1054.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 1.01%)</title><rect x="796.7" y="1027.0" width="11.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="799.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.76%)</title><rect x="796.7" y="1011.0" width="8.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.7" y="1022.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (3 samples, 0.76%)</title><rect x="796.7" y="995.0" width="8.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="799.7" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.25%)</title><rect x="805.6" y="1011.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="808.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (2 samples, 0.51%)</title><rect x="808.6" y="1139.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="811.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.25%)</title><rect x="811.6" y="1123.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="814.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.25%)</title><rect x="811.6" y="1107.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="814.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 1.52%)</title><rect x="814.5" y="1139.0" width="17.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="817.5" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 1.26%)</title><rect x="814.5" y="1123.0" width="14.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="817.5" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 1.01%)</title><rect x="814.5" y="1107.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="817.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 1.01%)</title><rect x="814.5" y="1091.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="817.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.51%)</title><rect x="820.5" y="1075.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="823.5" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.25%)</title><rect x="826.5" y="1107.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="829.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.25%)</title><rect x="826.5" y="1091.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="829.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.25%)</title><rect x="826.5" y="1075.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.5" y="1086.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.25%)</title><rect x="826.5" y="1059.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="829.5" y="1070.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.25%)</title><rect x="826.5" y="1043.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="829.5" y="1054.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.25%)</title><rect x="826.5" y="1027.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="829.5" y="1038.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.25%)</title><rect x="826.5" y="1011.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="829.5" y="1022.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.25%)</title><rect x="826.5" y="995.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="829.5" y="1006.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.25%)</title><rect x="826.5" y="979.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="829.5" y="990.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.25%)</title><rect x="826.5" y="963.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="829.5" y="974.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.25%)</title><rect x="829.4" y="1123.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="832.4" y="1134.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.25%)</title><rect x="829.4" y="1107.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="832.4" y="1118.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.25%)</title><rect x="829.4" y="1091.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="832.4" y="1102.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.25%)</title><rect x="829.4" y="1075.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="832.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.76%)</title><rect x="832.4" y="1139.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="835.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.51%)</title><rect x="835.4" y="1123.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.51%)</title><rect x="835.4" y="1107.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="838.4" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.51%)</title><rect x="835.4" y="1091.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="838.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.51%)</title><rect x="841.4" y="1171.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="844.4" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.25%)</title><rect x="841.4" y="1155.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="844.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.25%)</title><rect x="841.4" y="1139.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="844.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.25%)</title><rect x="841.4" y="1123.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="844.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.25%)</title><rect x="841.4" y="1107.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="844.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (1 samples, 0.25%)</title><rect x="841.4" y="1091.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="844.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.25%)</title><rect x="844.3" y="1155.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="847.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (7 samples, 1.77%)</title><rect x="847.3" y="1171.0" width="20.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.25%)</title><rect x="865.2" y="1155.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="868.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 2.53%)</title><rect x="868.2" y="1171.0" width="29.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="871.2" y="1182.0">on..</text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 2.27%)</title><rect x="871.2" y="1155.0" width="26.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="874.2" y="1166.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 2.27%)</title><rect x="871.2" y="1139.0" width="26.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="874.2" y="1150.0">j..</text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.51%)</title><rect x="883.1" y="1123.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="886.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.51%)</title><rect x="883.1" y="1107.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="886.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.76%)</title><rect x="889.0" y="1123.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="892.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="898.0" y="1171.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.0" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="898.0" y="1155.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.0" y="1166.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.25%)</title><rect x="898.0" y="1139.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="901.0" y="1150.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.25%)</title><rect x="898.0" y="1123.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="901.0" y="1134.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.25%)</title><rect x="898.0" y="1107.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="901.0" y="1118.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.25%)</title><rect x="898.0" y="1091.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="901.0" y="1102.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.25%)</title><rect x="898.0" y="1075.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="901.0" y="1086.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.25%)</title><rect x="898.0" y="1059.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="901.0" y="1070.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.25%)</title><rect x="898.0" y="1043.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="901.0" y="1054.0"></text>
</g>
<g>
<title>page_is_poisoned (1 samples, 0.25%)</title><rect x="898.0" y="1027.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="901.0" y="1038.0"></text>
</g>
<g>
<title>lookup_page_ext (1 samples, 0.25%)</title><rect x="898.0" y="1011.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="901.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (33 samples, 8.33%)</title><rect x="901.0" y="1187.0" width="98.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.0" y="1198.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (33 samples, 8.33%)</title><rect x="901.0" y="1171.0" width="98.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.0" y="1182.0">one/nio/net/..</text>
</g>
<g>
<title>[unknown] (12 samples, 3.03%)</title><rect x="903.9" y="1155.0" width="35.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="906.9" y="1166.0">[un..</text>
</g>
<g>
<title>[unknown] (12 samples, 3.03%)</title><rect x="903.9" y="1139.0" width="35.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="906.9" y="1150.0">[un..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (9 samples, 2.27%)</title><rect x="903.9" y="1123.0" width="26.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="906.9" y="1134.0">J..</text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.25%)</title><rect x="909.9" y="1107.0" width="3.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="912.9" y="1118.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 1.52%)</title><rect x="912.9" y="1107.0" width="17.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="915.9" y="1118.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.51%)</title><rect x="912.9" y="1091.0" width="5.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="915.9" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.51%)</title><rect x="918.8" y="1091.0" width="6.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="921.8" y="1102.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.51%)</title><rect x="924.8" y="1091.0" width="6.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="927.8" y="1102.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.25%)</title><rect x="930.8" y="1123.0" width="2.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="933.8" y="1134.0"></text>
</g>
<g>
<title>_init (2 samples, 0.51%)</title><rect x="933.7" y="1123.0" width="6.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="936.7" y="1134.0"></text>
</g>
<g>
<title>__libc_recv (18 samples, 4.55%)</title><rect x="939.7" y="1155.0" width="53.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="942.7" y="1166.0">__lib..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (15 samples, 3.79%)</title><rect x="948.6" y="1139.0" width="44.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="951.6" y="1150.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (15 samples, 3.79%)</title><rect x="948.6" y="1123.0" width="44.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="951.6" y="1134.0">do_s..</text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.25%)</title><rect x="957.6" y="1107.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="960.6" y="1118.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.25%)</title><rect x="960.6" y="1107.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="963.6" y="1118.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.25%)</title><rect x="960.6" y="1091.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="963.6" y="1102.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.25%)</title><rect x="960.6" y="1075.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="963.6" y="1086.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.25%)</title><rect x="960.6" y="1059.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="963.6" y="1070.0"></text>
</g>
<g>
<title>sys_epoll_wait (10 samples, 2.53%)</title><rect x="963.5" y="1107.0" width="29.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="966.5" y="1118.0">sy..</text>
</g>
<g>
<title>default_wake_function (10 samples, 2.53%)</title><rect x="963.5" y="1091.0" width="29.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="966.5" y="1102.0">de..</text>
</g>
<g>
<title>SYSC_recvfrom (10 samples, 2.53%)</title><rect x="963.5" y="1075.0" width="29.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="966.5" y="1086.0">SY..</text>
</g>
<g>
<title>inet_recvmsg (8 samples, 2.02%)</title><rect x="963.5" y="1059.0" width="23.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="966.5" y="1070.0">i..</text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.25%)</title><rect x="963.5" y="1043.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="966.5" y="1054.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.25%)</title><rect x="963.5" y="1027.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="966.5" y="1038.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.25%)</title><rect x="963.5" y="1011.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="966.5" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.25%)</title><rect x="963.5" y="995.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="966.5" y="1006.0"></text>
</g>
<g>
<title>tcp_recvmsg (7 samples, 1.77%)</title><rect x="966.5" y="1043.0" width="20.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="969.5" y="1054.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.25%)</title><rect x="975.5" y="1027.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="978.5" y="1038.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.25%)</title><rect x="975.5" y="1011.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="978.5" y="1022.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.25%)</title><rect x="978.4" y="1027.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="981.4" y="1038.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.25%)</title><rect x="981.4" y="1027.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="984.4" y="1038.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.25%)</title><rect x="984.4" y="1027.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="987.4" y="1038.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.51%)</title><rect x="987.4" y="1059.0" width="5.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="990.4" y="1070.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.25%)</title><rect x="990.4" y="1043.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="993.4" y="1054.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.25%)</title><rect x="990.4" y="1027.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="993.4" y="1038.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.51%)</title><rect x="993.3" y="1155.0" width="6.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="996.3" y="1166.0"></text>
</g>
<g>
<title>[tid=4302] (59 samples, 14.90%)</title><rect x="999.3" y="1251.0" width="175.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1002.3" y="1262.0">[tid=4302]</text>
</g>
<g>
<title>start_thread (59 samples, 14.90%)</title><rect x="999.3" y="1235.0" width="175.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1002.3" y="1246.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (59 samples, 14.90%)</title><rect x="999.3" y="1219.0" width="175.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1002.3" y="1230.0">thread_native_entry(Thr..</text>
</g>
<g>
<title>Thread::call_run() (59 samples, 14.90%)</title><rect x="999.3" y="1203.0" width="175.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1002.3" y="1214.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::run() (59 samples, 14.90%)</title><rect x="999.3" y="1187.0" width="175.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1002.3" y="1198.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (59 samples, 14.90%)</title><rect x="999.3" y="1171.0" width="175.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1002.3" y="1182.0">JavaThread::thread_main..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (59 samples, 14.90%)</title><rect x="999.3" y="1155.0" width="175.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1002.3" y="1166.0">CompileBroker::compiler..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (59 samples, 14.90%)</title><rect x="999.3" y="1139.0" width="175.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1002.3" y="1150.0">CompileBroker::invoke_c..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (59 samples, 14.90%)</title><rect x="999.3" y="1123.0" width="175.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1002.3" y="1134.0">C2Compiler::compile_met..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (59 samples, 14.90%)</title><rect x="999.3" y="1107.0" width="175.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1002.3" y="1118.0">Compile::Compile(ciEnv*..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.25%)</title><rect x="999.3" y="1091.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1002.3" y="1102.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.25%)</title><rect x="999.3" y="1075.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1002.3" y="1086.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.25%)</title><rect x="999.3" y="1059.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1002.3" y="1070.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.25%)</title><rect x="999.3" y="1043.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1002.3" y="1054.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.25%)</title><rect x="999.3" y="1027.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1002.3" y="1038.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.25%)</title><rect x="999.3" y="1011.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1002.3" y="1022.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.25%)</title><rect x="999.3" y="995.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1002.3" y="1006.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.25%)</title><rect x="999.3" y="979.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1002.3" y="990.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.25%)</title><rect x="999.3" y="963.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1002.3" y="974.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.25%)</title><rect x="999.3" y="947.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1002.3" y="958.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.25%)</title><rect x="999.3" y="931.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1002.3" y="942.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.25%)</title><rect x="999.3" y="915.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1002.3" y="926.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.25%)</title><rect x="999.3" y="899.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1002.3" y="910.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.25%)</title><rect x="999.3" y="883.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1002.3" y="894.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.25%)</title><rect x="999.3" y="867.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1002.3" y="878.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.25%)</title><rect x="999.3" y="851.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1002.3" y="862.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.25%)</title><rect x="999.3" y="835.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1002.3" y="846.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (30 samples, 7.58%)</title><rect x="1002.3" y="1091.0" width="89.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1005.3" y="1102.0">Compile::C..</text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (2 samples, 0.51%)</title><rect x="1002.3" y="1075.0" width="5.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1005.3" y="1086.0"></text>
</g>
<g>
<title>Compile::valid_bundle_info(Node const*) (1 samples, 0.25%)</title><rect x="1002.3" y="1059.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1005.3" y="1070.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.25%)</title><rect x="1005.3" y="1059.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1008.3" y="1070.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.25%)</title><rect x="1005.3" y="1043.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1008.3" y="1054.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.25%)</title><rect x="1005.3" y="1027.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1008.3" y="1038.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.51%)</title><rect x="1008.2" y="1075.0" width="6.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1011.2" y="1086.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.51%)</title><rect x="1008.2" y="1059.0" width="6.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1011.2" y="1070.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.25%)</title><rect x="1008.2" y="1043.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1011.2" y="1054.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.25%)</title><rect x="1011.2" y="1043.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1014.2" y="1054.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (4 samples, 1.01%)</title><rect x="1014.2" y="1075.0" width="11.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1017.2" y="1086.0"></text>
</g>
<g>
<title>Node::pinned() const (1 samples, 0.25%)</title><rect x="1014.2" y="1059.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1017.2" y="1070.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (3 samples, 0.76%)</title><rect x="1017.2" y="1059.0" width="8.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1020.2" y="1070.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.25%)</title><rect x="1017.2" y="1043.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1020.2" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_entry_block_pressure(Block*) (1 samples, 0.25%)</title><rect x="1017.2" y="1027.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1020.2" y="1038.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.25%)</title><rect x="1017.2" y="1011.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1020.2" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.25%)</title><rect x="1020.2" y="1043.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1023.2" y="1054.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.25%)</title><rect x="1023.1" y="1043.0" width="3.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1026.1" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (22 samples, 5.56%)</title><rect x="1026.1" y="1075.0" width="65.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1029.1" y="1086.0">PhaseCh..</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.25%)</title><rect x="1026.1" y="1059.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1029.1" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.51%)</title><rect x="1029.1" y="1059.0" width="6.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1032.1" y="1070.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (2 samples, 0.51%)</title><rect x="1029.1" y="1043.0" width="6.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1032.1" y="1054.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.25%)</title><rect x="1032.1" y="1027.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1035.1" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (3 samples, 0.76%)</title><rect x="1035.1" y="1059.0" width="8.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1038.1" y="1070.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.25%)</title><rect x="1035.1" y="1043.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1038.1" y="1054.0"></text>
</g>
<g>
<title>loadConPNode::rule() const (1 samples, 0.25%)</title><rect x="1035.1" y="1027.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1038.1" y="1038.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.25%)</title><rect x="1038.0" y="1043.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1041.0" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.25%)</title><rect x="1041.0" y="1043.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1044.0" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (1 samples, 0.25%)</title><rect x="1041.0" y="1027.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1044.0" y="1038.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.25%)</title><rect x="1041.0" y="1011.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1044.0" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (5 samples, 1.26%)</title><rect x="1044.0" y="1059.0" width="14.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1047.0" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_initial_block_pressure(Block*, IndexSet*, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;, double) (1 samples, 0.25%)</title><rect x="1044.0" y="1043.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1047.0" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.51%)</title><rect x="1047.0" y="1043.0" width="5.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.0" y="1054.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.25%)</title><rect x="1049.9" y="1027.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1052.9" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.51%)</title><rect x="1052.9" y="1043.0" width="6.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1055.9" y="1054.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.25%)</title><rect x="1052.9" y="1027.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1055.9" y="1038.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.25%)</title><rect x="1055.9" y="1027.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1058.9" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.25%)</title><rect x="1058.9" y="1059.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1061.9" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.25%)</title><rect x="1058.9" y="1043.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1061.9" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (1 samples, 0.25%)</title><rect x="1061.9" y="1059.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1064.9" y="1070.0"></text>
</g>
<g>
<title>find_hihghest_bit(unsigned int) (1 samples, 0.25%)</title><rect x="1061.9" y="1043.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1064.9" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.179] (3 samples, 0.76%)</title><rect x="1064.8" y="1059.0" width="9.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1067.8" y="1070.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (1 samples, 0.25%)</title><rect x="1067.8" y="1043.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1070.8" y="1054.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.25%)</title><rect x="1067.8" y="1027.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1070.8" y="1038.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.25%)</title><rect x="1070.8" y="1043.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1073.8" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (3 samples, 0.76%)</title><rect x="1073.8" y="1059.0" width="8.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1076.8" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 0.51%)</title><rect x="1073.8" y="1043.0" width="5.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1076.8" y="1054.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.25%)</title><rect x="1079.7" y="1043.0" width="3.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1082.7" y="1054.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.25%)</title><rect x="1082.7" y="1059.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1085.7" y="1070.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.25%)</title><rect x="1085.7" y="1059.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1088.7" y="1070.0"></text>
</g>
<g>
<title>rRegLOper::type() const (1 samples, 0.25%)</title><rect x="1088.7" y="1059.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1091.7" y="1070.0"></text>
</g>
<g>
<title>Compile::Optimize() (20 samples, 5.05%)</title><rect x="1091.7" y="1091.0" width="59.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1094.7" y="1102.0">Compil..</text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.25%)</title><rect x="1091.7" y="1075.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1094.7" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.25%)</title><rect x="1091.7" y="1059.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1094.7" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (1 samples, 0.25%)</title><rect x="1091.7" y="1043.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1094.7" y="1054.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.25%)</title><rect x="1094.6" y="1075.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1097.6" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (13 samples, 3.28%)</title><rect x="1097.6" y="1075.0" width="38.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1100.6" y="1086.0">Pha..</text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.25%)</title><rect x="1100.6" y="1059.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1103.6" y="1070.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.25%)</title><rect x="1100.6" y="1043.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1103.6" y="1054.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.25%)</title><rect x="1100.6" y="1027.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1103.6" y="1038.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.25%)</title><rect x="1100.6" y="1011.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1103.6" y="1022.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.25%)</title><rect x="1100.6" y="995.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1103.6" y="1006.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.25%)</title><rect x="1100.6" y="979.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1103.6" y="990.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.25%)</title><rect x="1100.6" y="963.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1103.6" y="974.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.25%)</title><rect x="1100.6" y="947.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1103.6" y="958.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.25%)</title><rect x="1100.6" y="931.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1103.6" y="942.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.25%)</title><rect x="1100.6" y="915.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1103.6" y="926.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.25%)</title><rect x="1100.6" y="899.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1103.6" y="910.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.25%)</title><rect x="1100.6" y="883.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1103.6" y="894.0"></text>
</g>
<g>
<title>IdealLoopTree::policy_unroll(PhaseIdealLoop*) (1 samples, 0.25%)</title><rect x="1100.6" y="867.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1103.6" y="878.0"></text>
</g>
<g>
<title>IdealLoopTree::policy_unroll_slp_analysis(CountedLoopNode*, PhaseIdealLoop*, int) (1 samples, 0.25%)</title><rect x="1100.6" y="851.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1103.6" y="862.0"></text>
</g>
<g>
<title>SuperWord::unrolling_analysis(int&amp;) (1 samples, 0.25%)</title><rect x="1100.6" y="835.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1103.6" y="846.0"></text>
</g>
<g>
<title>VectorNode::implemented(int, unsigned int, BasicType) (1 samples, 0.25%)</title><rect x="1100.6" y="819.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1103.6" y="830.0"></text>
</g>
<g>
<title>Matcher::min_vector_size(BasicType) (1 samples, 0.25%)</title><rect x="1100.6" y="803.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1103.6" y="814.0"></text>
</g>
<g>
<title>Node::pinned() const (1 samples, 0.25%)</title><rect x="1103.6" y="1059.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1106.6" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.25%)</title><rect x="1106.6" y="1059.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1109.6" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.51%)</title><rect x="1109.5" y="1059.0" width="6.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1112.5" y="1070.0"></text>
</g>
<g>
<title>Node::pinned() const (1 samples, 0.25%)</title><rect x="1112.5" y="1043.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1115.5" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (4 samples, 1.01%)</title><rect x="1115.5" y="1059.0" width="11.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1118.5" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (4 samples, 1.01%)</title><rect x="1115.5" y="1043.0" width="11.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1118.5" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (4 samples, 1.01%)</title><rect x="1115.5" y="1027.0" width="11.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1118.5" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (3 samples, 0.76%)</title><rect x="1118.5" y="1011.0" width="8.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1121.5" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.25%)</title><rect x="1127.4" y="1059.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1130.4" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.25%)</title><rect x="1127.4" y="1043.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1130.4" y="1054.0"></text>
</g>
<g>
<title>IdealLoopTree::is_member(IdealLoopTree const*) const (1 samples, 0.25%)</title><rect x="1127.4" y="1027.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1130.4" y="1038.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.51%)</title><rect x="1130.4" y="1059.0" width="6.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1133.4" y="1070.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.51%)</title><rect x="1130.4" y="1043.0" width="6.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1133.4" y="1054.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.25%)</title><rect x="1130.4" y="1027.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1133.4" y="1038.0"></text>
</g>
<g>
<title>LoadNNode::Opcode() const (1 samples, 0.25%)</title><rect x="1130.4" y="1011.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1133.4" y="1022.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.25%)</title><rect x="1133.4" y="1027.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1136.4" y="1038.0"></text>
</g>
<g>
<title>NodeHash::grow() (1 samples, 0.25%)</title><rect x="1133.4" y="1011.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.4" y="1022.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 1.01%)</title><rect x="1136.4" y="1075.0" width="11.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1139.4" y="1086.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 1.01%)</title><rect x="1136.4" y="1059.0" width="11.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1139.4" y="1070.0"></text>
</g>
<g>
<title>ConvI2LNode::Ideal(PhaseGVN*, bool) (1 samples, 0.25%)</title><rect x="1136.4" y="1043.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1139.4" y="1054.0"></text>
</g>
<g>
<title>Compile::constrained_convI2L(PhaseGVN*, Node*, TypeInt const*, Node*) (1 samples, 0.25%)</title><rect x="1136.4" y="1027.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1139.4" y="1038.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.25%)</title><rect x="1136.4" y="1011.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1139.4" y="1022.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.25%)</title><rect x="1136.4" y="995.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1139.4" y="1006.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.25%)</title><rect x="1139.3" y="1043.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1142.3" y="1054.0"></text>
</g>
<g>
<title>PhaseIterGVN::register_new_node_with_optimizer(Node*, Node*) (1 samples, 0.25%)</title><rect x="1139.3" y="1027.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1142.3" y="1038.0"></text>
</g>
<g>
<title>ProjNode::bottom_type() const (1 samples, 0.25%)</title><rect x="1139.3" y="1011.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1142.3" y="1022.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.25%)</title><rect x="1142.3" y="1043.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1145.3" y="1054.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist0(Node*) (1 samples, 0.25%)</title><rect x="1142.3" y="1027.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1145.3" y="1038.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.25%)</title><rect x="1145.3" y="1043.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1148.3" y="1054.0"></text>
</g>
<g>
<title>Compile::copy_node_notes_to(Node*, Node*) (1 samples, 0.25%)</title><rect x="1145.3" y="1027.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1148.3" y="1038.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.25%)</title><rect x="1148.3" y="1075.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1151.3" y="1086.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.25%)</title><rect x="1148.3" y="1059.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.3" y="1070.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.25%)</title><rect x="1148.3" y="1043.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1151.3" y="1054.0"></text>
</g>
<g>
<title>PhiNode::Identity(PhaseGVN*) (1 samples, 0.25%)</title><rect x="1148.3" y="1027.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.3" y="1038.0"></text>
</g>
<g>
<title>PhiNode::unique_input(PhaseTransform*, bool) (1 samples, 0.25%)</title><rect x="1148.3" y="1011.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.3" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 2.02%)</title><rect x="1151.3" y="1091.0" width="23.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1154.3" y="1102.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 2.02%)</title><rect x="1151.3" y="1075.0" width="23.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1154.3" y="1086.0">P..</text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 1.77%)</title><rect x="1151.3" y="1059.0" width="20.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1154.3" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 1.77%)</title><rect x="1151.3" y="1043.0" width="20.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.3" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 1.77%)</title><rect x="1151.3" y="1027.0" width="20.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1154.3" y="1038.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 1.77%)</title><rect x="1151.3" y="1011.0" width="20.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1154.3" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 1.26%)</title><rect x="1151.3" y="995.0" width="14.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1154.3" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 1.26%)</title><rect x="1151.3" y="979.0" width="14.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1154.3" y="990.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 1.26%)</title><rect x="1151.3" y="963.0" width="14.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.3" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 1.26%)</title><rect x="1151.3" y="947.0" width="14.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1154.3" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 1.26%)</title><rect x="1151.3" y="931.0" width="14.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1154.3" y="942.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 1.26%)</title><rect x="1151.3" y="915.0" width="14.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1154.3" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 1.26%)</title><rect x="1151.3" y="899.0" width="14.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1154.3" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 1.26%)</title><rect x="1151.3" y="883.0" width="14.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.3" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 1.26%)</title><rect x="1151.3" y="867.0" width="14.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.3" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 1.26%)</title><rect x="1151.3" y="851.0" width="14.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1154.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 1.26%)</title><rect x="1151.3" y="835.0" width="14.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1154.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 1.26%)</title><rect x="1151.3" y="819.0" width="14.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.3" y="830.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.25%)</title><rect x="1151.3" y="803.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1154.3" y="814.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.25%)</title><rect x="1151.3" y="787.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1154.3" y="798.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.25%)</title><rect x="1151.3" y="771.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.3" y="782.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.25%)</title><rect x="1151.3" y="755.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.3" y="766.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.25%)</title><rect x="1151.3" y="739.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1154.3" y="750.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.25%)</title><rect x="1151.3" y="723.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.3" y="734.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.25%)</title><rect x="1151.3" y="707.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1154.3" y="718.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.25%)</title><rect x="1151.3" y="691.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1154.3" y="702.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.25%)</title><rect x="1151.3" y="675.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1154.3" y="686.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.25%)</title><rect x="1151.3" y="659.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.3" y="670.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.25%)</title><rect x="1151.3" y="643.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1154.3" y="654.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.25%)</title><rect x="1151.3" y="627.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.3" y="638.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.25%)</title><rect x="1151.3" y="611.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1154.3" y="622.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.25%)</title><rect x="1151.3" y="595.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.3" y="606.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.25%)</title><rect x="1151.3" y="579.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1154.3" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.51%)</title><rect x="1154.2" y="803.0" width="6.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1157.2" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.51%)</title><rect x="1154.2" y="787.0" width="6.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.25%)</title><rect x="1157.2" y="771.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1160.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.25%)</title><rect x="1157.2" y="755.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1160.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.25%)</title><rect x="1157.2" y="739.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1160.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.25%)</title><rect x="1157.2" y="723.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.2" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.25%)</title><rect x="1157.2" y="707.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1160.2" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.25%)</title><rect x="1157.2" y="691.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1160.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.25%)</title><rect x="1157.2" y="675.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1160.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.25%)</title><rect x="1157.2" y="659.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1160.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.25%)</title><rect x="1157.2" y="643.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1160.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.25%)</title><rect x="1157.2" y="627.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1160.2" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.25%)</title><rect x="1157.2" y="611.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1160.2" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.25%)</title><rect x="1157.2" y="595.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1160.2" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.25%)</title><rect x="1157.2" y="579.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1160.2" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.25%)</title><rect x="1157.2" y="563.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1160.2" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.25%)</title><rect x="1157.2" y="547.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1160.2" y="558.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.25%)</title><rect x="1157.2" y="531.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.2" y="542.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.51%)</title><rect x="1160.2" y="803.0" width="6.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.2" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.51%)</title><rect x="1160.2" y="787.0" width="6.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.2" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.51%)</title><rect x="1160.2" y="771.0" width="6.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.51%)</title><rect x="1160.2" y="755.0" width="6.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1163.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.51%)</title><rect x="1160.2" y="739.0" width="6.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.51%)</title><rect x="1160.2" y="723.0" width="6.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.2" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.51%)</title><rect x="1160.2" y="707.0" width="6.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.2" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.51%)</title><rect x="1160.2" y="691.0" width="6.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.2" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.51%)</title><rect x="1160.2" y="675.0" width="6.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.51%)</title><rect x="1160.2" y="659.0" width="6.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1163.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.51%)</title><rect x="1160.2" y="643.0" width="6.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.51%)</title><rect x="1160.2" y="627.0" width="6.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.2" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.51%)</title><rect x="1160.2" y="611.0" width="6.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.2" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.25%)</title><rect x="1160.2" y="595.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1163.2" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.25%)</title><rect x="1160.2" y="579.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.2" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.25%)</title><rect x="1160.2" y="563.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1163.2" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.25%)</title><rect x="1160.2" y="547.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.2" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.25%)</title><rect x="1160.2" y="531.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.2" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.25%)</title><rect x="1160.2" y="515.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.2" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.25%)</title><rect x="1160.2" y="499.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.2" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.25%)</title><rect x="1160.2" y="483.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.2" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.25%)</title><rect x="1160.2" y="467.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.2" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.25%)</title><rect x="1160.2" y="451.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.2" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.25%)</title><rect x="1160.2" y="435.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.2" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.25%)</title><rect x="1160.2" y="419.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.2" y="430.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.25%)</title><rect x="1160.2" y="403.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.2" y="414.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.25%)</title><rect x="1160.2" y="387.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1163.2" y="398.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.25%)</title><rect x="1160.2" y="371.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.2" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.25%)</title><rect x="1160.2" y="355.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.2" y="366.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.25%)</title><rect x="1163.2" y="595.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1166.2" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.25%)</title><rect x="1163.2" y="579.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.2" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.25%)</title><rect x="1163.2" y="563.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1166.2" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.25%)</title><rect x="1163.2" y="547.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1166.2" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.25%)</title><rect x="1163.2" y="531.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1166.2" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.25%)</title><rect x="1163.2" y="515.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.2" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.25%)</title><rect x="1163.2" y="499.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.2" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.25%)</title><rect x="1163.2" y="483.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1166.2" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.25%)</title><rect x="1163.2" y="467.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.2" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.25%)</title><rect x="1163.2" y="451.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.2" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.25%)</title><rect x="1163.2" y="435.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.2" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.25%)</title><rect x="1163.2" y="419.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.2" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.25%)</title><rect x="1163.2" y="403.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1166.2" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.25%)</title><rect x="1163.2" y="387.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.2" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.25%)</title><rect x="1163.2" y="371.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.2" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.25%)</title><rect x="1163.2" y="355.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1166.2" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.25%)</title><rect x="1163.2" y="339.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.2" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.25%)</title><rect x="1163.2" y="323.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.2" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.25%)</title><rect x="1163.2" y="307.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1166.2" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.25%)</title><rect x="1163.2" y="291.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.2" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.25%)</title><rect x="1163.2" y="275.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.2" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.25%)</title><rect x="1163.2" y="259.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.2" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.25%)</title><rect x="1163.2" y="243.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.2" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.25%)</title><rect x="1163.2" y="227.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1166.2" y="238.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.25%)</title><rect x="1163.2" y="211.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.2" y="222.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.25%)</title><rect x="1163.2" y="195.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1166.2" y="206.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.25%)</title><rect x="1163.2" y="179.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1166.2" y="190.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.25%)</title><rect x="1163.2" y="163.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.2" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.25%)</title><rect x="1163.2" y="147.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1166.2" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.25%)</title><rect x="1163.2" y="131.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1166.2" y="142.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.25%)</title><rect x="1163.2" y="115.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.2" y="126.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.25%)</title><rect x="1163.2" y="99.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.2" y="110.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.25%)</title><rect x="1163.2" y="83.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.2" y="94.0"></text>
</g>
<g>
<title>GraphKit::add_safepoint_edges(SafePointNode*, bool) (1 samples, 0.25%)</title><rect x="1163.2" y="67.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1166.2" y="78.0"></text>
</g>
<g>
<title>Node::add_req_batch(Node*, unsigned int) (1 samples, 0.25%)</title><rect x="1163.2" y="51.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.2" y="62.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.25%)</title><rect x="1163.2" y="35.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1166.2" y="46.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.51%)</title><rect x="1166.2" y="995.0" width="5.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1169.2" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.51%)</title><rect x="1166.2" y="979.0" width="5.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1169.2" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.51%)</title><rect x="1166.2" y="963.0" width="5.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1169.2" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.51%)</title><rect x="1166.2" y="947.0" width="5.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1169.2" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.51%)</title><rect x="1166.2" y="931.0" width="5.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.2" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.51%)</title><rect x="1166.2" y="915.0" width="5.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.2" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.51%)</title><rect x="1166.2" y="899.0" width="5.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.2" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.51%)</title><rect x="1166.2" y="883.0" width="5.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.2" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.51%)</title><rect x="1166.2" y="867.0" width="5.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.2" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.51%)</title><rect x="1166.2" y="851.0" width="5.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.2" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.51%)</title><rect x="1166.2" y="835.0" width="5.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.2" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.51%)</title><rect x="1166.2" y="819.0" width="5.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.2" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.51%)</title><rect x="1166.2" y="803.0" width="5.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.2" y="814.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.25%)</title><rect x="1166.2" y="787.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1169.2" y="798.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.25%)</title><rect x="1166.2" y="771.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.2" y="782.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.25%)</title><rect x="1166.2" y="755.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.2" y="766.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.25%)</title><rect x="1166.2" y="739.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.2" y="750.0"></text>
</g>
<g>
<title>constantPoolHandle::~constantPoolHandle() (1 samples, 0.25%)</title><rect x="1166.2" y="723.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.2" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.25%)</title><rect x="1169.1" y="787.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.1" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.25%)</title><rect x="1169.1" y="771.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.1" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.25%)</title><rect x="1169.1" y="755.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.1" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.25%)</title><rect x="1169.1" y="739.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.1" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.25%)</title><rect x="1169.1" y="723.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1172.1" y="734.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.25%)</title><rect x="1169.1" y="707.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1172.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.25%)</title><rect x="1169.1" y="691.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.1" y="702.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.25%)</title><rect x="1169.1" y="675.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.1" y="686.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.25%)</title><rect x="1169.1" y="659.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.1" y="670.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.25%)</title><rect x="1169.1" y="643.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.1" y="654.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.25%)</title><rect x="1169.1" y="627.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.1" y="638.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.25%)</title><rect x="1169.1" y="611.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.1" y="622.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields() (1 samples, 0.25%)</title><rect x="1169.1" y="595.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.1" y="606.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_nonstatic_fields_impl(GrowableArray&lt;ciField*&gt;*) (1 samples, 0.25%)</title><rect x="1169.1" y="579.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1172.1" y="590.0"></text>
</g>
<g>
<title>ciField::ciField(fieldDescriptor*) (1 samples, 0.25%)</title><rect x="1169.1" y="563.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.1" y="574.0"></text>
</g>
<g>
<title>Parse::load_interpreter_state(Node*) (1 samples, 0.25%)</title><rect x="1172.1" y="1059.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.1" y="1070.0"></text>
</g>
<g>
<title>GraphKit::basic_plus_adr(Node*, Node*, Node*) (1 samples, 0.25%)</title><rect x="1172.1" y="1043.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.1" y="1054.0"></text>
</g>
<g>
<title>PhaseTransform::intcon(int) (1 samples, 0.25%)</title><rect x="1172.1" y="1027.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.1" y="1038.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.25%)</title><rect x="1172.1" y="1011.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.1" y="1022.0"></text>
</g>
<g>
<title>TypeInt::hash() const (1 samples, 0.25%)</title><rect x="1172.1" y="995.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.1" y="1006.0"></text>
</g>
<g>
<title>[tid=4303] (4 samples, 1.01%)</title><rect x="1175.1" y="1251.0" width="11.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1178.1" y="1262.0"></text>
</g>
<g>
<title>start_thread (4 samples, 1.01%)</title><rect x="1175.1" y="1235.0" width="11.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1178.1" y="1246.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 1.01%)</title><rect x="1175.1" y="1219.0" width="11.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1178.1" y="1230.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 1.01%)</title><rect x="1175.1" y="1203.0" width="11.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1178.1" y="1214.0"></text>
</g>
<g>
<title>JavaThread::run() (4 samples, 1.01%)</title><rect x="1175.1" y="1187.0" width="11.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.1" y="1198.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (4 samples, 1.01%)</title><rect x="1175.1" y="1171.0" width="11.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.1" y="1182.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (4 samples, 1.01%)</title><rect x="1175.1" y="1155.0" width="11.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.1" y="1166.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (4 samples, 1.01%)</title><rect x="1175.1" y="1139.0" width="11.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.1" y="1150.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4 samples, 1.01%)</title><rect x="1175.1" y="1123.0" width="11.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1178.1" y="1134.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (4 samples, 1.01%)</title><rect x="1175.1" y="1107.0" width="11.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.1" y="1118.0"></text>
</g>
<g>
<title>Compilation::compile_method() (4 samples, 1.01%)</title><rect x="1175.1" y="1091.0" width="11.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.1" y="1102.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (4 samples, 1.01%)</title><rect x="1175.1" y="1075.0" width="11.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.1" y="1086.0"></text>
</g>
<g>
<title>Compilation::build_hir() (2 samples, 0.51%)</title><rect x="1175.1" y="1059.0" width="6.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.1" y="1070.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (2 samples, 0.51%)</title><rect x="1175.1" y="1043.0" width="6.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.1" y="1054.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (2 samples, 0.51%)</title><rect x="1175.1" y="1027.0" width="6.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.1" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (2 samples, 0.51%)</title><rect x="1175.1" y="1011.0" width="6.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.1" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.51%)</title><rect x="1175.1" y="995.0" width="6.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.1" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.51%)</title><rect x="1175.1" y="979.0" width="6.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.1" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.25%)</title><rect x="1175.1" y="963.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.1" y="974.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.25%)</title><rect x="1175.1" y="947.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.1" y="958.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.25%)</title><rect x="1175.1" y="931.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.1" y="942.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.25%)</title><rect x="1175.1" y="915.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1178.1" y="926.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.25%)</title><rect x="1175.1" y="899.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.1" y="910.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.25%)</title><rect x="1175.1" y="883.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.1" y="894.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.25%)</title><rect x="1175.1" y="867.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1178.1" y="878.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.25%)</title><rect x="1175.1" y="851.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.1" y="862.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.25%)</title><rect x="1175.1" y="835.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.1" y="846.0"></text>
</g>
<g>
<title>ciObjectFactory::get_unloaded_klass(ciKlass*, ciSymbol*, bool) (1 samples, 0.25%)</title><rect x="1175.1" y="819.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.1" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.25%)</title><rect x="1178.1" y="963.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.1" y="974.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.25%)</title><rect x="1178.1" y="947.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.1" y="958.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.25%)</title><rect x="1178.1" y="931.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.1" y="942.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (2 samples, 0.51%)</title><rect x="1181.1" y="1059.0" width="5.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.1" y="1070.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (2 samples, 0.51%)</title><rect x="1181.1" y="1043.0" width="5.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.1" y="1054.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (1 samples, 0.25%)</title><rect x="1181.1" y="1027.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.1" y="1038.0"></text>
</g>
<g>
<title>LIR_OpAllocObj::emit_code(LIR_Assembler*) (1 samples, 0.25%)</title><rect x="1184.0" y="1027.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.0" y="1038.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_alloc_obj(LIR_OpAllocObj*) (1 samples, 0.25%)</title><rect x="1184.0" y="1011.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.0" y="1022.0"></text>
</g>
<g>
<title>C1_MacroAssembler::initialize_object(RegisterImpl*, RegisterImpl*, RegisterImpl*, int, RegisterImpl*, RegisterImpl*, bool) (1 samples, 0.25%)</title><rect x="1184.0" y="995.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.0" y="1006.0"></text>
</g>
<g>
<title>C1_MacroAssembler::initialize_header(RegisterImpl*, RegisterImpl*, RegisterImpl*, RegisterImpl*, RegisterImpl*) (1 samples, 0.25%)</title><rect x="1184.0" y="979.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.0" y="990.0"></text>
</g>
<g>
<title>Assembler::movq(RegisterImpl*, Address) (1 samples, 0.25%)</title><rect x="1184.0" y="963.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.0" y="974.0"></text>
</g>
<g>
<title>Assembler::prefixq(Address, RegisterImpl*) (1 samples, 0.25%)</title><rect x="1184.0" y="947.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.0" y="958.0"></text>
</g>
<g>
<title>[tid=4306] (1 samples, 0.25%)</title><rect x="1187.0" y="1251.0" width="3.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1190.0" y="1262.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.25%)</title><rect x="1187.0" y="1235.0" width="3.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1190.0" y="1246.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.25%)</title><rect x="1187.0" y="1219.0" width="3.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1190.0" y="1230.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.25%)</title><rect x="1187.0" y="1203.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.0" y="1214.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.25%)</title><rect x="1187.0" y="1187.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.0" y="1198.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.25%)</title><rect x="1187.0" y="1171.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.0" y="1182.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.25%)</title><rect x="1187.0" y="1155.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.0" y="1166.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.25%)</title><rect x="1187.0" y="1139.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.0" y="1150.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.25%)</title><rect x="1187.0" y="1123.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.0" y="1134.0"></text>
</g>
</g>
</svg>
