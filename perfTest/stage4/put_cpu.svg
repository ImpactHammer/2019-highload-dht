<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1029"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1029"> </text>
<g id="frames">
<g>
<title>all (395 samples, 100.00%)</title><rect x="10.0" y="995.0" width="1180.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="1006.0">all</text>
</g>
<g>
<title>Runtime1::new_type_array(JavaThread*, Klass*, int) (1 samples, 0.25%)</title><rect x="10.0" y="979.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>ThreadInVMfromJava::~ThreadInVMfromJava() (1 samples, 0.25%)</title><rect x="10.0" y="963.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.51%)</title><rect x="13.0" y="979.0" width="6.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="16.0" y="990.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (1 samples, 0.25%)</title><rect x="13.0" y="963.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.0" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.25%)</title><rect x="13.0" y="947.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.0" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.25%)</title><rect x="16.0" y="963.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="19.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.25%)</title><rect x="19.0" y="979.0" width="2.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="22.0" y="990.0"></text>
</g>
<g>
<title>__GI__IO_default_xsputn (1 samples, 0.25%)</title><rect x="19.0" y="963.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="22.0" y="974.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.51%)</title><rect x="21.9" y="979.0" width="6.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="24.9" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.run (223 samples, 56.46%)</title><rect x="27.9" y="979.0" width="666.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.9" y="990.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (223 samples, 56.46%)</title><rect x="27.9" y="963.0" width="666.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.9" y="974.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (223 samples, 56.46%)</title><rect x="27.9" y="947.0" width="666.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.9" y="958.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/lang/Thread.interrupted (5 samples, 1.27%)</title><rect x="39.9" y="931.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.9" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (5 samples, 1.27%)</title><rect x="39.9" y="915.0" width="14.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.9" y="926.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (4 samples, 1.01%)</title><rect x="39.9" y="899.0" width="11.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="42.9" y="910.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.51%)</title><rect x="42.9" y="883.0" width="5.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="45.9" y="894.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.25%)</title><rect x="48.8" y="883.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="51.8" y="894.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.25%)</title><rect x="51.8" y="899.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="54.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (25 samples, 6.33%)</title><rect x="54.8" y="931.0" width="74.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.8" y="942.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (25 samples, 6.33%)</title><rect x="54.8" y="915.0" width="74.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.8" y="926.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (24 samples, 6.08%)</title><rect x="54.8" y="899.0" width="71.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.8" y="910.0">java/uti..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.25%)</title><rect x="54.8" y="883.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="57.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (1 samples, 0.25%)</title><rect x="57.8" y="883.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.8" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.25%)</title><rect x="57.8" y="867.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (22 samples, 5.57%)</title><rect x="60.8" y="883.0" width="65.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="63.8" y="894.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (22 samples, 5.57%)</title><rect x="60.8" y="867.0" width="65.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.8" y="878.0">jdk/int..</text>
</g>
<g>
<title>Unsafe_Park (21 samples, 5.32%)</title><rect x="60.8" y="851.0" width="62.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="63.8" y="862.0">Unsafe..</text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.51%)</title><rect x="63.8" y="835.0" width="5.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="66.8" y="846.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.25%)</title><rect x="63.8" y="819.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="66.8" y="830.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.25%)</title><rect x="66.8" y="819.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="69.8" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.51%)</title><rect x="69.7" y="835.0" width="6.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="72.7" y="846.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (1 samples, 0.25%)</title><rect x="75.7" y="835.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="78.7" y="846.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 1.01%)</title><rect x="78.7" y="835.0" width="12.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="81.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.76%)</title><rect x="81.7" y="819.0" width="9.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="84.7" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.76%)</title><rect x="81.7" y="803.0" width="9.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="84.7" y="814.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.25%)</title><rect x="87.7" y="787.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="90.7" y="798.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.25%)</title><rect x="87.7" y="771.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="90.7" y="782.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.25%)</title><rect x="87.7" y="755.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="90.7" y="766.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.25%)</title><rect x="87.7" y="739.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="90.7" y="750.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.25%)</title><rect x="87.7" y="723.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="90.7" y="734.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.25%)</title><rect x="87.7" y="707.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="90.7" y="718.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.25%)</title><rect x="87.7" y="691.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="90.7" y="702.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.11 (1 samples, 0.25%)</title><rect x="87.7" y="675.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="90.7" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 1.52%)</title><rect x="90.7" y="835.0" width="17.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="93.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (4 samples, 1.01%)</title><rect x="96.6" y="819.0" width="12.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="99.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.01%)</title><rect x="96.6" y="803.0" width="12.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="99.6" y="814.0"></text>
</g>
<g>
<title>sys_write (3 samples, 0.76%)</title><rect x="99.6" y="787.0" width="9.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="102.6" y="798.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.76%)</title><rect x="99.6" y="771.0" width="9.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="102.6" y="782.0"></text>
</g>
<g>
<title>SYSC_sendto (3 samples, 0.76%)</title><rect x="99.6" y="755.0" width="9.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="102.6" y="766.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.76%)</title><rect x="99.6" y="739.0" width="9.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="102.6" y="750.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.76%)</title><rect x="99.6" y="723.0" width="9.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="102.6" y="734.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="102.6" y="707.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="105.6" y="718.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.25%)</title><rect x="102.6" y="691.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="105.6" y="702.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.25%)</title><rect x="102.6" y="675.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="105.6" y="686.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.25%)</title><rect x="102.6" y="659.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="105.6" y="670.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.25%)</title><rect x="105.6" y="707.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="108.6" y="718.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.25%)</title><rect x="105.6" y="691.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="108.6" y="702.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.25%)</title><rect x="105.6" y="675.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="108.6" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.25%)</title><rect x="105.6" y="659.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="108.6" y="670.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.25%)</title><rect x="105.6" y="643.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="108.6" y="654.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.25%)</title><rect x="105.6" y="627.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="108.6" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.25%)</title><rect x="105.6" y="611.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="108.6" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.25%)</title><rect x="108.6" y="835.0" width="3.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="111.6" y="846.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.25%)</title><rect x="111.6" y="835.0" width="3.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="114.6" y="846.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.51%)</title><rect x="114.6" y="835.0" width="5.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="117.6" y="846.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.25%)</title><rect x="120.5" y="835.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="123.5" y="846.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.25%)</title><rect x="123.5" y="851.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="126.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.25%)</title><rect x="126.5" y="899.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.25%)</title><rect x="126.5" y="883.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.5" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.25%)</title><rect x="126.5" y="867.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.5" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/426511219.run (189 samples, 47.85%)</title><rect x="129.5" y="931.0" width="564.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="132.5" y="942.0">ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/426511219.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.25%)</title><rect x="129.5" y="915.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (188 samples, 47.59%)</title><rect x="132.5" y="915.0" width="561.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="135.5" y="926.0">ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4</text>
</g>
<g>
<title>itable stub (1 samples, 0.25%)</title><rect x="138.5" y="899.0" width="2.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="141.5" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (60 samples, 15.19%)</title><rect x="141.4" y="899.0" width="179.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="144.4" y="910.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (59 samples, 14.94%)</title><rect x="144.4" y="883.0" width="176.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="147.4" y="894.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 1.27%)</title><rect x="144.4" y="867.0" width="15.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.4" y="878.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.25%)</title><rect x="150.4" y="851.0" width="3.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="153.4" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.51%)</title><rect x="153.4" y="851.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.4" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.51%)</title><rect x="153.4" y="835.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.51%)</title><rect x="153.4" y="819.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.25%)</title><rect x="156.4" y="803.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.25%)</title><rect x="156.4" y="787.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="159.4" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (54 samples, 13.67%)</title><rect x="159.4" y="867.0" width="161.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.4" y="878.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>one/nio/net/Session.write (54 samples, 13.67%)</title><rect x="159.4" y="851.0" width="161.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.4" y="862.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>_init (1 samples, 0.25%)</title><rect x="159.4" y="835.0" width="3.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="162.4" y="846.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.25%)</title><rect x="162.4" y="835.0" width="2.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="165.4" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (52 samples, 13.16%)</title><rect x="165.3" y="835.0" width="155.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="168.3" y="846.0">one/nio/net/Session$..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (52 samples, 13.16%)</title><rect x="165.3" y="819.0" width="155.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="168.3" y="830.0">one/nio/net/NativeSo..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.76%)</title><rect x="165.3" y="803.0" width="9.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="168.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.76%)</title><rect x="165.3" y="787.0" width="9.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="168.3" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.25%)</title><rect x="165.3" y="771.0" width="3.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="168.3" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.25%)</title><rect x="165.3" y="755.0" width="3.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="168.3" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.25%)</title><rect x="165.3" y="739.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="168.3" y="750.0"></text>
</g>
<g>
<title>__send (2 samples, 0.51%)</title><rect x="168.3" y="771.0" width="6.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="171.3" y="782.0"></text>
</g>
<g>
<title>__send (49 samples, 12.41%)</title><rect x="174.3" y="803.0" width="146.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="177.3" y="814.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (49 samples, 12.41%)</title><rect x="174.3" y="787.0" width="146.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="177.3" y="798.0">entry_SYSCALL_64_a..</text>
</g>
<g>
<title>do_syscall_64 (49 samples, 12.41%)</title><rect x="174.3" y="771.0" width="146.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="177.3" y="782.0">do_syscall_64</text>
</g>
<g>
<title>schedule (1 samples, 0.25%)</title><rect x="183.3" y="755.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="186.3" y="766.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.25%)</title><rect x="183.3" y="739.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="186.3" y="750.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.25%)</title><rect x="183.3" y="723.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="186.3" y="734.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.25%)</title><rect x="183.3" y="707.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="186.3" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.25%)</title><rect x="183.3" y="691.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="186.3" y="702.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.25%)</title><rect x="183.3" y="675.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="186.3" y="686.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.25%)</title><rect x="183.3" y="659.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="186.3" y="670.0"></text>
</g>
<g>
<title>sys_setsockopt (19 samples, 4.81%)</title><rect x="186.3" y="755.0" width="56.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="189.3" y="766.0">sys_se..</text>
</g>
<g>
<title>sock_setsockopt (19 samples, 4.81%)</title><rect x="186.3" y="739.0" width="56.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="189.3" y="750.0">sock_s..</text>
</g>
<g>
<title>SYSC_sendto (19 samples, 4.81%)</title><rect x="186.3" y="723.0" width="56.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="189.3" y="734.0">SYSC_s..</text>
</g>
<g>
<title>sock_sendmsg (19 samples, 4.81%)</title><rect x="186.3" y="707.0" width="56.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="189.3" y="718.0">sock_s..</text>
</g>
<g>
<title>tcp_sendmsg (19 samples, 4.81%)</title><rect x="186.3" y="691.0" width="56.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="189.3" y="702.0">tcp_se..</text>
</g>
<g>
<title>__tcp_push_pending_frames (13 samples, 3.29%)</title><rect x="192.2" y="675.0" width="38.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="195.2" y="686.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (13 samples, 3.29%)</title><rect x="192.2" y="659.0" width="38.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="195.2" y="670.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (13 samples, 3.29%)</title><rect x="192.2" y="643.0" width="38.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="195.2" y="654.0">__t..</text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.25%)</title><rect x="198.2" y="627.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="201.2" y="638.0"></text>
</g>
<g>
<title>ip_local_out (9 samples, 2.28%)</title><rect x="201.2" y="627.0" width="26.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="204.2" y="638.0">i..</text>
</g>
<g>
<title>__sk_dst_check (9 samples, 2.28%)</title><rect x="201.2" y="611.0" width="26.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="204.2" y="622.0">_..</text>
</g>
<g>
<title>ipv4_dst_check (9 samples, 2.28%)</title><rect x="201.2" y="595.0" width="26.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="204.2" y="606.0">i..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.25%)</title><rect x="201.2" y="579.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="204.2" y="590.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.25%)</title><rect x="201.2" y="563.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="204.2" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.25%)</title><rect x="201.2" y="547.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="204.2" y="558.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.25%)</title><rect x="201.2" y="531.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="204.2" y="542.0"></text>
</g>
<g>
<title>ip_output (8 samples, 2.03%)</title><rect x="204.2" y="579.0" width="23.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="207.2" y="590.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (8 samples, 2.03%)</title><rect x="204.2" y="563.0" width="23.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="207.2" y="574.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.51%)</title><rect x="204.2" y="547.0" width="6.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="207.2" y="558.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.51%)</title><rect x="204.2" y="531.0" width="6.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="207.2" y="542.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.51%)</title><rect x="204.2" y="515.0" width="6.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="207.2" y="526.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.51%)</title><rect x="204.2" y="499.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="207.2" y="510.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.25%)</title><rect x="207.2" y="483.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="210.2" y="494.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 1.52%)</title><rect x="210.2" y="547.0" width="17.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="213.2" y="558.0"></text>
</g>
<g>
<title>do_softirq.part.18 (6 samples, 1.52%)</title><rect x="210.2" y="531.0" width="17.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="213.2" y="542.0"></text>
</g>
<g>
<title>do_softirq_own_stack (6 samples, 1.52%)</title><rect x="210.2" y="515.0" width="17.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="213.2" y="526.0"></text>
</g>
<g>
<title>__do_softirq (6 samples, 1.52%)</title><rect x="210.2" y="499.0" width="17.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="213.2" y="510.0"></text>
</g>
<g>
<title>net_rx_action (6 samples, 1.52%)</title><rect x="210.2" y="483.0" width="17.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="213.2" y="494.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 1.52%)</title><rect x="210.2" y="467.0" width="17.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="213.2" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.51%)</title><rect x="210.2" y="451.0" width="5.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="213.2" y="462.0"></text>
</g>
<g>
<title>load_balance (2 samples, 0.51%)</title><rect x="210.2" y="435.0" width="5.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="213.2" y="446.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.51%)</title><rect x="210.2" y="419.0" width="5.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="213.2" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.51%)</title><rect x="210.2" y="403.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="213.2" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.51%)</title><rect x="210.2" y="387.0" width="5.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="213.2" y="398.0"></text>
</g>
<g>
<title>find_busiest_group (2 samples, 0.51%)</title><rect x="210.2" y="371.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="213.2" y="382.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.51%)</title><rect x="210.2" y="355.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="213.2" y="366.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.25%)</title><rect x="213.1" y="339.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="216.1" y="350.0"></text>
</g>
<g>
<title>sched_clock (4 samples, 1.01%)</title><rect x="216.1" y="451.0" width="12.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="219.1" y="462.0"></text>
</g>
<g>
<title>enqueue_task_fair (3 samples, 0.76%)</title><rect x="216.1" y="435.0" width="9.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="219.1" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.76%)</title><rect x="216.1" y="419.0" width="9.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="219.1" y="430.0"></text>
</g>
<g>
<title>enqueue_entity (2 samples, 0.51%)</title><rect x="216.1" y="403.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="219.1" y="414.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.51%)</title><rect x="216.1" y="387.0" width="6.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="219.1" y="398.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (2 samples, 0.51%)</title><rect x="216.1" y="371.0" width="6.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="219.1" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.51%)</title><rect x="216.1" y="355.0" width="6.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="219.1" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.51%)</title><rect x="216.1" y="339.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="219.1" y="350.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="219.1" y="323.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="222.1" y="334.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="219.1" y="307.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="222.1" y="318.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="219.1" y="291.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="222.1" y="302.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="219.1" y="275.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="222.1" y="286.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="219.1" y="259.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="222.1" y="270.0"></text>
</g>
<g>
<title>__wake_up_common (1 samples, 0.25%)</title><rect x="219.1" y="243.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="222.1" y="254.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="219.1" y="227.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="222.1" y="238.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.25%)</title><rect x="219.1" y="211.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="222.1" y="222.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.25%)</title><rect x="222.1" y="403.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="225.1" y="414.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="222.1" y="387.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="225.1" y="398.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="222.1" y="371.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="225.1" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="222.1" y="355.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="225.1" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="222.1" y="339.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="225.1" y="350.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="222.1" y="323.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="225.1" y="334.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="222.1" y="307.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="225.1" y="318.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="222.1" y="291.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="225.1" y="302.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="222.1" y="275.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="225.1" y="286.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="222.1" y="259.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="225.1" y="270.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.25%)</title><rect x="222.1" y="243.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="225.1" y="254.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.25%)</title><rect x="222.1" y="227.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="225.1" y="238.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.25%)</title><rect x="222.1" y="211.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="225.1" y="222.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.25%)</title><rect x="222.1" y="195.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="225.1" y="206.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.25%)</title><rect x="222.1" y="179.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="225.1" y="190.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.25%)</title><rect x="222.1" y="163.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="225.1" y="174.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.25%)</title><rect x="222.1" y="147.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="225.1" y="158.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.25%)</title><rect x="222.1" y="131.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="225.1" y="142.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.25%)</title><rect x="222.1" y="115.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="225.1" y="126.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.25%)</title><rect x="225.1" y="435.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="228.1" y="446.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.25%)</title><rect x="225.1" y="419.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="228.1" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.25%)</title><rect x="225.1" y="403.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="228.1" y="414.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.25%)</title><rect x="225.1" y="387.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="228.1" y="398.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="225.1" y="371.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="228.1" y="382.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="225.1" y="355.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="228.1" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="225.1" y="339.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="228.1" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="225.1" y="323.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="228.1" y="334.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="225.1" y="307.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="228.1" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="225.1" y="291.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="228.1" y="302.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="225.1" y="275.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="228.1" y="286.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="225.1" y="259.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="228.1" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="225.1" y="243.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="228.1" y="254.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="225.1" y="227.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="228.1" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="225.1" y="211.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="228.1" y="222.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="225.1" y="195.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="228.1" y="206.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.25%)</title><rect x="228.1" y="627.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="231.1" y="638.0"></text>
</g>
<g>
<title>native_sched_clock (1 samples, 0.25%)</title><rect x="228.1" y="611.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="231.1" y="622.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.76%)</title><rect x="231.1" y="675.0" width="8.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="234.1" y="686.0"></text>
</g>
<g>
<title>__release_sock (3 samples, 0.76%)</title><rect x="231.1" y="659.0" width="8.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="234.1" y="670.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.76%)</title><rect x="231.1" y="643.0" width="8.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="234.1" y="654.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.51%)</title><rect x="234.1" y="627.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="237.1" y="638.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.25%)</title><rect x="234.1" y="611.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="237.1" y="622.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.25%)</title><rect x="234.1" y="595.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="237.1" y="606.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.25%)</title><rect x="237.0" y="611.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="240.0" y="622.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="237.0" y="595.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="240.0" y="606.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.25%)</title><rect x="237.0" y="579.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="240.0" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.25%)</title><rect x="240.0" y="675.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="243.0" y="686.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.25%)</title><rect x="240.0" y="659.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="243.0" y="670.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.25%)</title><rect x="240.0" y="643.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="243.0" y="654.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.25%)</title><rect x="240.0" y="627.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="243.0" y="638.0"></text>
</g>
<g>
<title>sys_write (26 samples, 6.58%)</title><rect x="243.0" y="755.0" width="77.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="246.0" y="766.0">sys_write</text>
</g>
<g>
<title>sys_futex (1 samples, 0.25%)</title><rect x="243.0" y="739.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="246.0" y="750.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.25%)</title><rect x="243.0" y="723.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="246.0" y="734.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.25%)</title><rect x="243.0" y="707.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="246.0" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.25%)</title><rect x="243.0" y="691.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="246.0" y="702.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.25%)</title><rect x="243.0" y="675.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="246.0" y="686.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.25%)</title><rect x="243.0" y="659.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="246.0" y="670.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.25%)</title><rect x="243.0" y="643.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="246.0" y="654.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.25%)</title><rect x="243.0" y="627.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="246.0" y="638.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.25%)</title><rect x="243.0" y="611.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="246.0" y="622.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.25%)</title><rect x="243.0" y="595.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="246.0" y="606.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.25%)</title><rect x="243.0" y="579.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="246.0" y="590.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.25%)</title><rect x="243.0" y="563.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="246.0" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.25%)</title><rect x="243.0" y="547.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="246.0" y="558.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.25%)</title><rect x="243.0" y="531.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="246.0" y="542.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.25%)</title><rect x="243.0" y="515.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="246.0" y="526.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.25%)</title><rect x="243.0" y="499.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="246.0" y="510.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.25%)</title><rect x="243.0" y="483.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="246.0" y="494.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.25%)</title><rect x="243.0" y="467.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="246.0" y="478.0"></text>
</g>
<g>
<title>tcp_write_timer (1 samples, 0.25%)</title><rect x="243.0" y="451.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="246.0" y="462.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.25%)</title><rect x="243.0" y="435.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="246.0" y="446.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.25%)</title><rect x="243.0" y="419.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="246.0" y="430.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.25%)</title><rect x="243.0" y="403.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="246.0" y="414.0"></text>
</g>
<g>
<title>task_tick_fair (1 samples, 0.25%)</title><rect x="243.0" y="387.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="246.0" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.25%)</title><rect x="243.0" y="371.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="246.0" y="382.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="243.0" y="355.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="246.0" y="366.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="243.0" y="339.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="246.0" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="243.0" y="323.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="246.0" y="334.0"></text>
</g>
<g>
<title>vfs_write (25 samples, 6.33%)</title><rect x="246.0" y="739.0" width="74.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="249.0" y="750.0">vfs_write</text>
</g>
<g>
<title>SYSC_sendto (25 samples, 6.33%)</title><rect x="246.0" y="723.0" width="74.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="249.0" y="734.0">SYSC_sen..</text>
</g>
<g>
<title>sock_sendmsg (24 samples, 6.08%)</title><rect x="249.0" y="707.0" width="71.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="252.0" y="718.0">sock_sen..</text>
</g>
<g>
<title>tcp_sendmsg (24 samples, 6.08%)</title><rect x="249.0" y="691.0" width="71.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="252.0" y="702.0">tcp_send..</text>
</g>
<g>
<title>__tcp_push_pending_frames (20 samples, 5.06%)</title><rect x="252.0" y="675.0" width="59.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="255.0" y="686.0">__tcp_..</text>
</g>
<g>
<title>copy_from_iter (1 samples, 0.25%)</title><rect x="252.0" y="659.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="255.0" y="670.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.25%)</title><rect x="252.0" y="643.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="255.0" y="654.0"></text>
</g>
<g>
<title>tcp_tso_segs (1 samples, 0.25%)</title><rect x="252.0" y="627.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="255.0" y="638.0"></text>
</g>
<g>
<title>tcp_write_xmit (19 samples, 4.81%)</title><rect x="255.0" y="659.0" width="56.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="258.0" y="670.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (17 samples, 4.30%)</title><rect x="255.0" y="643.0" width="50.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="258.0" y="654.0">__tcp..</text>
</g>
<g>
<title>ip_local_out (15 samples, 3.80%)</title><rect x="255.0" y="627.0" width="44.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="258.0" y="638.0">ip_l..</text>
</g>
<g>
<title>__sk_dst_check (15 samples, 3.80%)</title><rect x="255.0" y="611.0" width="44.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="258.0" y="622.0">__sk..</text>
</g>
<g>
<title>ipv4_dst_check (15 samples, 3.80%)</title><rect x="255.0" y="595.0" width="44.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="258.0" y="606.0">ipv4..</text>
</g>
<g>
<title>ip_output (15 samples, 3.80%)</title><rect x="255.0" y="579.0" width="44.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="258.0" y="590.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output2 (15 samples, 3.80%)</title><rect x="255.0" y="563.0" width="44.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="258.0" y="574.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (15 samples, 3.80%)</title><rect x="255.0" y="547.0" width="44.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="258.0" y="558.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.18 (15 samples, 3.80%)</title><rect x="255.0" y="531.0" width="44.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="258.0" y="542.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (14 samples, 3.54%)</title><rect x="257.9" y="515.0" width="41.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="260.9" y="526.0">do_..</text>
</g>
<g>
<title>__do_softirq (14 samples, 3.54%)</title><rect x="257.9" y="499.0" width="41.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="260.9" y="510.0">__d..</text>
</g>
<g>
<title>net_rx_action (14 samples, 3.54%)</title><rect x="257.9" y="483.0" width="41.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="260.9" y="494.0">net..</text>
</g>
<g>
<title>process_backlog (14 samples, 3.54%)</title><rect x="257.9" y="467.0" width="41.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="260.9" y="478.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 1.27%)</title><rect x="257.9" y="451.0" width="15.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="260.9" y="462.0"></text>
</g>
<g>
<title>load_balance (4 samples, 1.01%)</title><rect x="257.9" y="435.0" width="12.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="260.9" y="446.0"></text>
</g>
<g>
<title>cpumask_next_and (2 samples, 0.51%)</title><rect x="257.9" y="419.0" width="6.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="260.9" y="430.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.51%)</title><rect x="257.9" y="403.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="260.9" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.51%)</title><rect x="257.9" y="387.0" width="6.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="260.9" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.51%)</title><rect x="257.9" y="371.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="260.9" y="382.0"></text>
</g>
<g>
<title>find_busiest_group (2 samples, 0.51%)</title><rect x="257.9" y="355.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="260.9" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.51%)</title><rect x="257.9" y="339.0" width="6.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="260.9" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="260.9" y="323.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="263.9" y="334.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="260.9" y="307.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="263.9" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="260.9" y="291.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="263.9" y="302.0"></text>
</g>
<g>
<title>__tcp_send_ack (1 samples, 0.25%)</title><rect x="260.9" y="275.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="263.9" y="286.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.25%)</title><rect x="260.9" y="259.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="263.9" y="270.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.25%)</title><rect x="260.9" y="243.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="263.9" y="254.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.51%)</title><rect x="263.9" y="419.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="266.9" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.51%)</title><rect x="263.9" y="403.0" width="6.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="266.9" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.51%)</title><rect x="263.9" y="387.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="266.9" y="398.0"></text>
</g>
<g>
<title>find_busiest_group (2 samples, 0.51%)</title><rect x="263.9" y="371.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="266.9" y="382.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.51%)</title><rect x="263.9" y="355.0" width="6.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="266.9" y="366.0"></text>
</g>
<g>
<title>tcp_prequeue (1 samples, 0.25%)</title><rect x="263.9" y="339.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="266.9" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="263.9" y="323.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="266.9" y="334.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="266.9" y="339.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="269.9" y="350.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="266.9" y="323.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="269.9" y="334.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="266.9" y="307.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="269.9" y="318.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="266.9" y="291.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="269.9" y="302.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="266.9" y="275.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="269.9" y="286.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="266.9" y="259.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="269.9" y="270.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.25%)</title><rect x="269.9" y="435.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="272.9" y="446.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.25%)</title><rect x="269.9" y="419.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="272.9" y="430.0"></text>
</g>
<g>
<title>cpumask_next_and (1 samples, 0.25%)</title><rect x="269.9" y="403.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="272.9" y="414.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="269.9" y="387.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="272.9" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="269.9" y="371.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="272.9" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="269.9" y="355.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="272.9" y="366.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="269.9" y="339.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="272.9" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="269.9" y="323.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="272.9" y="334.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="269.9" y="307.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="272.9" y="318.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="269.9" y="291.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="272.9" y="302.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="269.9" y="275.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="272.9" y="286.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.25%)</title><rect x="269.9" y="259.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="272.9" y="270.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="269.9" y="243.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="272.9" y="254.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.25%)</title><rect x="269.9" y="227.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="272.9" y="238.0"></text>
</g>
<g>
<title>sched_clock (8 samples, 2.03%)</title><rect x="272.9" y="451.0" width="23.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="275.9" y="462.0">s..</text>
</g>
<g>
<title>enqueue_task_fair (6 samples, 1.52%)</title><rect x="272.9" y="435.0" width="17.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="275.9" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 1.52%)</title><rect x="272.9" y="419.0" width="17.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="275.9" y="430.0"></text>
</g>
<g>
<title>enqueue_entity (6 samples, 1.52%)</title><rect x="272.9" y="403.0" width="17.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="275.9" y="414.0"></text>
</g>
<g>
<title>ip_rcv (6 samples, 1.52%)</title><rect x="272.9" y="387.0" width="17.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="275.9" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.51%)</title><rect x="272.9" y="371.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="275.9" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.51%)</title><rect x="272.9" y="355.0" width="6.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="275.9" y="366.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="272.9" y="339.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="275.9" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="272.9" y="323.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="275.9" y="334.0"></text>
</g>
<g>
<title>tcp_prequeue (1 samples, 0.25%)</title><rect x="272.9" y="307.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="275.9" y="318.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.25%)</title><rect x="272.9" y="291.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="275.9" y="302.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.25%)</title><rect x="272.9" y="275.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="275.9" y="286.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.25%)</title><rect x="272.9" y="259.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="275.9" y="270.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.25%)</title><rect x="275.9" y="339.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="278.9" y="350.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (4 samples, 1.01%)</title><rect x="278.9" y="371.0" width="11.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="281.9" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 1.01%)</title><rect x="278.9" y="355.0" width="11.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="281.9" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 1.01%)</title><rect x="278.9" y="339.0" width="11.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="281.9" y="350.0"></text>
</g>
<g>
<title>find_busiest_group (3 samples, 0.76%)</title><rect x="281.8" y="323.0" width="9.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="284.8" y="334.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.76%)</title><rect x="281.8" y="307.0" width="9.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="284.8" y="318.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (1 samples, 0.25%)</title><rect x="281.8" y="291.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="284.8" y="302.0"></text>
</g>
<g>
<title>tcp_prequeue (2 samples, 0.51%)</title><rect x="284.8" y="291.0" width="6.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="287.8" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.51%)</title><rect x="284.8" y="275.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="287.8" y="286.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.25%)</title><rect x="290.8" y="435.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="293.8" y="446.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.25%)</title><rect x="290.8" y="419.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="293.8" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.25%)</title><rect x="290.8" y="403.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="293.8" y="414.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="290.8" y="387.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="293.8" y="398.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="290.8" y="371.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="293.8" y="382.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.25%)</title><rect x="290.8" y="355.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="293.8" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="290.8" y="339.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="293.8" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="290.8" y="323.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="293.8" y="334.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="290.8" y="307.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="293.8" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="290.8" y="291.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="293.8" y="302.0"></text>
</g>
<g>
<title>tcp_prequeue (1 samples, 0.25%)</title><rect x="290.8" y="275.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="293.8" y="286.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="290.8" y="259.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="293.8" y="270.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.25%)</title><rect x="293.8" y="435.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="296.8" y="446.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.25%)</title><rect x="293.8" y="419.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="296.8" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.25%)</title><rect x="293.8" y="403.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="296.8" y="414.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="293.8" y="387.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="296.8" y="398.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="293.8" y="371.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="296.8" y="382.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.25%)</title><rect x="293.8" y="355.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="296.8" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="293.8" y="339.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="296.8" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="293.8" y="323.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="296.8" y="334.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="293.8" y="307.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="296.8" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="293.8" y="291.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="296.8" y="302.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="293.8" y="275.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="296.8" y="286.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="293.8" y="259.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="296.8" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="293.8" y="243.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="296.8" y="254.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.25%)</title><rect x="293.8" y="227.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="296.8" y="238.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="293.8" y="211.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="296.8" y="222.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.25%)</title><rect x="293.8" y="195.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="296.8" y="206.0"></text>
</g>
<g>
<title>tcp_write_timer (1 samples, 0.25%)</title><rect x="296.8" y="451.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="299.8" y="462.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.25%)</title><rect x="296.8" y="435.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="299.8" y="446.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.25%)</title><rect x="296.8" y="419.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="299.8" y="430.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.25%)</title><rect x="296.8" y="403.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="299.8" y="414.0"></text>
</g>
<g>
<title>task_tick_fair (1 samples, 0.25%)</title><rect x="296.8" y="387.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="299.8" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.25%)</title><rect x="296.8" y="371.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="299.8" y="382.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="296.8" y="355.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="299.8" y="366.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="296.8" y="339.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="299.8" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="296.8" y="323.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="299.8" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="296.8" y="307.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="299.8" y="318.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="296.8" y="291.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="299.8" y="302.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="296.8" y="275.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="299.8" y="286.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.25%)</title><rect x="296.8" y="259.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="299.8" y="270.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.51%)</title><rect x="299.8" y="627.0" width="5.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="302.8" y="638.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.51%)</title><rect x="299.8" y="611.0" width="5.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="302.8" y="622.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.25%)</title><rect x="305.7" y="643.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="308.7" y="654.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.25%)</title><rect x="305.7" y="627.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="308.7" y="638.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.25%)</title><rect x="305.7" y="611.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="308.7" y="622.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.25%)</title><rect x="305.7" y="595.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="308.7" y="606.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.25%)</title><rect x="305.7" y="579.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="308.7" y="590.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.25%)</title><rect x="308.7" y="643.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="311.7" y="654.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.25%)</title><rect x="311.7" y="675.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="314.7" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.25%)</title><rect x="311.7" y="659.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="314.7" y="670.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.25%)</title><rect x="314.7" y="675.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="317.7" y="686.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.25%)</title><rect x="314.7" y="659.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="317.7" y="670.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.25%)</title><rect x="314.7" y="643.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="317.7" y="654.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.25%)</title><rect x="317.7" y="675.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="320.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$66/801568905.act (64 samples, 16.20%)</title><rect x="320.7" y="899.0" width="191.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="323.7" y="910.0">ru/mail/polis/service/imp..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (64 samples, 16.20%)</title><rect x="320.7" y="883.0" width="191.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.7" y="894.0">ru/mail/polis/service/imp..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (64 samples, 16.20%)</title><rect x="320.7" y="867.0" width="191.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="323.7" y="878.0">ru/mail/polis/service/imp..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.25%)</title><rect x="323.7" y="851.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="326.7" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.25%)</title><rect x="323.7" y="835.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="326.7" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.25%)</title><rect x="323.7" y="819.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="326.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.25%)</title><rect x="323.7" y="803.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="326.7" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.25%)</title><rect x="323.7" y="787.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="326.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.25%)</title><rect x="323.7" y="771.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="326.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.25%)</title><rect x="323.7" y="755.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.7" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.25%)</title><rect x="323.7" y="739.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (62 samples, 15.70%)</title><rect x="326.7" y="851.0" width="185.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.7" y="862.0">ru/mail/polis/dao/impl/R..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (61 samples, 15.44%)</title><rect x="326.7" y="835.0" width="182.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="329.7" y="846.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (61 samples, 15.44%)</title><rect x="326.7" y="819.0" width="182.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="329.7" y="830.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (60 samples, 15.19%)</title><rect x="326.7" y="803.0" width="179.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="329.7" y="814.0">Java_org_rocksdb_RocksD..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.25%)</title><rect x="326.7" y="787.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="329.7" y="798.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (59 samples, 14.94%)</title><rect x="329.6" y="787.0" width="176.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="332.6" y="798.0">rocksdb_put_helper(JNIE..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.25%)</title><rect x="329.6" y="771.0" width="3.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="332.6" y="782.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (56 samples, 14.18%)</title><rect x="332.6" y="771.0" width="167.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="335.6" y="782.0">rocksdb::DB::Put(rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (56 samples, 14.18%)</title><rect x="332.6" y="755.0" width="167.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="335.6" y="766.0">rocksdb::DBImpl::Put(..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (54 samples, 13.67%)</title><rect x="332.6" y="739.0" width="161.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="335.6" y="750.0">rocksdb::DB::Put(rock..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.25%)</title><rect x="335.6" y="723.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="338.6" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (48 samples, 12.15%)</title><rect x="338.6" y="723.0" width="143.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="341.6" y="734.0">rocksdb::DBImpl::W..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (47 samples, 11.90%)</title><rect x="338.6" y="707.0" width="140.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="341.6" y="718.0">rocksdb::DBImpl::W..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.25%)</title><rect x="356.5" y="691.0" width="3.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="359.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (21 samples, 5.32%)</title><rect x="359.5" y="691.0" width="62.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="362.5" y="702.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (18 samples, 4.56%)</title><rect x="362.5" y="675.0" width="53.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="365.5" y="686.0">rocks..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (17 samples, 4.30%)</title><rect x="362.5" y="659.0" width="50.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="365.5" y="670.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni1525110871305939205.so (2 samples, 0.51%)</title><rect x="365.5" y="643.0" width="6.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="368.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (14 samples, 3.54%)</title><rect x="371.5" y="643.0" width="41.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="374.5" y="654.0">roc..</text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.25%)</title><rect x="371.5" y="627.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="374.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (13 samples, 3.29%)</title><rect x="374.5" y="627.0" width="38.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="377.5" y="638.0">roc..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (13 samples, 3.29%)</title><rect x="374.5" y="611.0" width="38.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="377.5" y="622.0">roc..</text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (13 samples, 3.29%)</title><rect x="374.5" y="595.0" width="38.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="377.5" y="606.0">/li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (13 samples, 3.29%)</title><rect x="374.5" y="579.0" width="38.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="377.5" y="590.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (13 samples, 3.29%)</title><rect x="374.5" y="563.0" width="38.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="377.5" y="574.0">do_..</text>
</g>
<g>
<title>sys_write (13 samples, 3.29%)</title><rect x="374.5" y="547.0" width="38.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="377.5" y="558.0">sys..</text>
</g>
<g>
<title>vfs_write (13 samples, 3.29%)</title><rect x="374.5" y="531.0" width="38.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="377.5" y="542.0">vfs..</text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.25%)</title><rect x="374.5" y="515.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="377.5" y="526.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 2.78%)</title><rect x="377.4" y="515.0" width="32.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="380.4" y="526.0">ne..</text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (1 samples, 0.25%)</title><rect x="377.4" y="499.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="380.4" y="510.0"></text>
</g>
<g>
<title>sock_sendmsg (10 samples, 2.53%)</title><rect x="380.4" y="499.0" width="29.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="383.4" y="510.0">so..</text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (10 samples, 2.53%)</title><rect x="380.4" y="483.0" width="29.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="383.4" y="494.0">ex..</text>
</g>
<g>
<title>__generic_file_write_iter (9 samples, 2.28%)</title><rect x="380.4" y="467.0" width="26.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="383.4" y="478.0">_..</text>
</g>
<g>
<title>file_update_time (1 samples, 0.25%)</title><rect x="383.4" y="451.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="386.4" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.25%)</title><rect x="383.4" y="435.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="386.4" y="446.0"></text>
</g>
<g>
<title>ext4_da_write_begin	[ext4] (1 samples, 0.25%)</title><rect x="383.4" y="419.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="386.4" y="430.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.25%)</title><rect x="383.4" y="403.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="386.4" y="414.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.25%)</title><rect x="383.4" y="387.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="386.4" y="398.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.76%)</title><rect x="386.4" y="451.0" width="9.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="389.4" y="462.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.76%)</title><rect x="386.4" y="435.0" width="9.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="389.4" y="446.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.76%)</title><rect x="386.4" y="419.0" width="9.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="389.4" y="430.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.51%)</title><rect x="389.4" y="403.0" width="6.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="392.4" y="414.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.51%)</title><rect x="389.4" y="387.0" width="6.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="392.4" y="398.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (2 samples, 0.51%)</title><rect x="389.4" y="371.0" width="6.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="392.4" y="382.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb	[ext4] (1 samples, 0.25%)</title><rect x="389.4" y="355.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="392.4" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (1 samples, 0.25%)</title><rect x="392.4" y="355.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="395.4" y="366.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.25%)</title><rect x="392.4" y="339.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="395.4" y="350.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access	[ext4] (1 samples, 0.25%)</title><rect x="392.4" y="323.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="395.4" y="334.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access	[jbd2] (1 samples, 0.25%)</title><rect x="392.4" y="307.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="395.4" y="318.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty	[ext4] (1 samples, 0.25%)</title><rect x="392.4" y="291.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="395.4" y="302.0"></text>
</g>
<g>
<title>ext4_get_inode_flags	[ext4] (1 samples, 0.25%)</title><rect x="392.4" y="275.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="395.4" y="286.0"></text>
</g>
<g>
<title>generic_perform_write (4 samples, 1.01%)</title><rect x="395.4" y="451.0" width="11.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="398.4" y="462.0"></text>
</g>
<g>
<title>ext4_da_write_end	[ext4] (4 samples, 1.01%)</title><rect x="395.4" y="435.0" width="11.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="398.4" y="446.0"></text>
</g>
<g>
<title>generic_write_end (4 samples, 1.01%)</title><rect x="395.4" y="419.0" width="11.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="398.4" y="430.0"></text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 1.01%)</title><rect x="395.4" y="403.0" width="11.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="398.4" y="414.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (4 samples, 1.01%)</title><rect x="395.4" y="387.0" width="11.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="398.4" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb	[ext4] (1 samples, 0.25%)</title><rect x="395.4" y="371.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="398.4" y="382.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (1 samples, 0.25%)</title><rect x="395.4" y="355.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="398.4" y="366.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.25%)</title><rect x="395.4" y="339.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="398.4" y="350.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write	[ext4] (1 samples, 0.25%)</title><rect x="395.4" y="323.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="398.4" y="334.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.25%)</title><rect x="395.4" y="307.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="398.4" y="318.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc	[ext4] (1 samples, 0.25%)</title><rect x="395.4" y="291.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="398.4" y="302.0"></text>
</g>
<g>
<title>ext4_get_group_desc	[ext4] (1 samples, 0.25%)</title><rect x="395.4" y="275.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="398.4" y="286.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (3 samples, 0.76%)</title><rect x="398.4" y="371.0" width="8.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="401.4" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (3 samples, 0.76%)</title><rect x="398.4" y="355.0" width="8.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="401.4" y="366.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access	[ext4] (3 samples, 0.76%)</title><rect x="398.4" y="339.0" width="8.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="401.4" y="350.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty	[ext4] (3 samples, 0.76%)</title><rect x="398.4" y="323.0" width="8.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="401.4" y="334.0"></text>
</g>
<g>
<title>ext4_inode_csum_set	[ext4] (2 samples, 0.51%)</title><rect x="401.3" y="307.0" width="6.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="404.3" y="318.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.61	[ext4] (2 samples, 0.51%)</title><rect x="401.3" y="291.0" width="6.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="404.3" y="302.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.25%)</title><rect x="404.3" y="275.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="407.3" y="286.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update	[crc32c_intel] (1 samples, 0.25%)</title><rect x="404.3" y="259.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="407.3" y="270.0"></text>
</g>
<g>
<title>down_write (1 samples, 0.25%)</title><rect x="407.3" y="467.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="410.3" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (1 samples, 0.25%)</title><rect x="407.3" y="451.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="410.3" y="462.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.25%)</title><rect x="407.3" y="435.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="410.3" y="446.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.25%)</title><rect x="407.3" y="419.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="410.3" y="430.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.25%)</title><rect x="410.3" y="515.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="413.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.25%)</title><rect x="413.3" y="659.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="416.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.51%)</title><rect x="416.3" y="675.0" width="6.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="419.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.25%)</title><rect x="422.3" y="691.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="425.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (16 samples, 4.05%)</title><rect x="425.2" y="691.0" width="47.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="428.2" y="702.0">rock..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (13 samples, 3.29%)</title><rect x="434.2" y="675.0" width="38.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="437.2" y="686.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 3.29%)</title><rect x="434.2" y="659.0" width="38.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="437.2" y="670.0">roc..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (1 samples, 0.25%)</title><rect x="434.2" y="643.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="437.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (12 samples, 3.04%)</title><rect x="437.2" y="643.0" width="35.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="440.2" y="654.0">roc..</text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.25%)</title><rect x="440.2" y="627.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="443.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (10 samples, 2.53%)</title><rect x="443.2" y="627.0" width="29.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="446.2" y="638.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni1525110871305939205.so (1 samples, 0.25%)</title><rect x="446.2" y="611.0" width="2.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="449.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.25%)</title><rect x="446.2" y="595.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="449.2" y="606.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (7 samples, 1.77%)</title><rect x="449.1" y="611.0" width="21.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="452.1" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1525110871305939205.so (6 samples, 1.52%)</title><rect x="452.1" y="595.0" width="18.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="455.1" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1525110871305939205.so (4 samples, 1.01%)</title><rect x="458.1" y="579.0" width="12.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="461.1" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.25%)</title><rect x="458.1" y="563.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="461.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.76%)</title><rect x="461.1" y="563.0" width="9.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="464.1" y="574.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (1 samples, 0.25%)</title><rect x="464.1" y="547.0" width="3.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="467.1" y="558.0"></text>
</g>
<g>
<title>_init (1 samples, 0.25%)</title><rect x="467.1" y="547.0" width="3.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="470.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.25%)</title><rect x="470.1" y="611.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="473.1" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1525110871305939205.so (1 samples, 0.25%)</title><rect x="470.1" y="595.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="473.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (1 samples, 0.25%)</title><rect x="473.0" y="691.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="476.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.25%)</title><rect x="476.0" y="691.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="479.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.25%)</title><rect x="479.0" y="707.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="482.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (2 samples, 0.51%)</title><rect x="482.0" y="723.0" width="6.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="485.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.51%)</title><rect x="488.0" y="723.0" width="5.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="491.0" y="734.0"></text>
</g>
<g>
<title>_init (1 samples, 0.25%)</title><rect x="488.0" y="707.0" width="3.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="491.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.25%)</title><rect x="491.0" y="707.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="494.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.25%)</title><rect x="493.9" y="739.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="496.9" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.25%)</title><rect x="496.9" y="739.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="499.9" y="750.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.51%)</title><rect x="499.9" y="771.0" width="6.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="502.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.25%)</title><rect x="505.9" y="803.0" width="3.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="508.9" y="814.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.25%)</title><rect x="505.9" y="787.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="508.9" y="798.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.25%)</title><rect x="505.9" y="771.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="508.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksUtils.toArrayShifted (1 samples, 0.25%)</title><rect x="508.9" y="835.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="511.9" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.25%)</title><rect x="508.9" y="819.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.9" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.25%)</title><rect x="508.9" y="803.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.25%)</title><rect x="508.9" y="787.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="511.9" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.25%)</title><rect x="508.9" y="771.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="511.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.25%)</title><rect x="508.9" y="755.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="511.9" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.25%)</title><rect x="508.9" y="739.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$62/2143888110.act (61 samples, 15.44%)</title><rect x="511.9" y="899.0" width="182.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.9" y="910.0">ru/mail/polis/service/im..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.lambda$entity$1 (60 samples, 15.19%)</title><rect x="514.9" y="883.0" width="179.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="517.9" y="894.0">ru/mail/polis/service/i..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.proxy (60 samples, 15.19%)</title><rect x="514.9" y="867.0" width="179.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="517.9" y="878.0">ru/mail/polis/service/i..</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.25%)</title><rect x="514.9" y="851.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="517.9" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.25%)</title><rect x="514.9" y="835.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="517.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (59 samples, 14.94%)</title><rect x="517.8" y="851.0" width="176.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="520.8" y="862.0">one/nio/http/HttpClient..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (58 samples, 14.68%)</title><rect x="520.8" y="835.0" width="173.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="523.8" y="846.0">one/nio/http/HttpClien..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.25%)</title><rect x="526.8" y="819.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="529.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (17 samples, 4.30%)</title><rect x="529.8" y="819.0" width="50.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="532.8" y="830.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (15 samples, 3.80%)</title><rect x="535.8" y="803.0" width="44.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.8" y="814.0">one/..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.76%)</title><rect x="535.8" y="787.0" width="8.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="538.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.76%)</title><rect x="535.8" y="771.0" width="8.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="538.8" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.76%)</title><rect x="535.8" y="755.0" width="8.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="538.8" y="766.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.25%)</title><rect x="535.8" y="739.0" width="3.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="538.8" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.51%)</title><rect x="538.8" y="739.0" width="5.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="541.8" y="750.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.25%)</title><rect x="538.8" y="723.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="541.8" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.25%)</title><rect x="541.7" y="723.0" width="3.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="544.7" y="734.0"></text>
</g>
<g>
<title>__libc_recv (11 samples, 2.78%)</title><rect x="544.7" y="787.0" width="32.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="547.7" y="798.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (10 samples, 2.53%)</title><rect x="547.7" y="771.0" width="29.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="550.7" y="782.0">en..</text>
</g>
<g>
<title>do_syscall_64 (10 samples, 2.53%)</title><rect x="547.7" y="755.0" width="29.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="550.7" y="766.0">do..</text>
</g>
<g>
<title>sys_setsockopt (10 samples, 2.53%)</title><rect x="547.7" y="739.0" width="29.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="550.7" y="750.0">sy..</text>
</g>
<g>
<title>sock_setsockopt (10 samples, 2.53%)</title><rect x="547.7" y="723.0" width="29.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="550.7" y="734.0">so..</text>
</g>
<g>
<title>SYSC_recvfrom (10 samples, 2.53%)</title><rect x="547.7" y="707.0" width="29.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="550.7" y="718.0">SY..</text>
</g>
<g>
<title>inet_recvmsg (10 samples, 2.53%)</title><rect x="547.7" y="691.0" width="29.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="550.7" y="702.0">in..</text>
</g>
<g>
<title>tcp_recvmsg (10 samples, 2.53%)</title><rect x="547.7" y="675.0" width="29.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="550.7" y="686.0">tc..</text>
</g>
<g>
<title>autoremove_wake_function (1 samples, 0.25%)</title><rect x="547.7" y="659.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="550.7" y="670.0"></text>
</g>
<g>
<title>sk_wait_data (1 samples, 0.25%)</title><rect x="547.7" y="643.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="550.7" y="654.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.25%)</title><rect x="547.7" y="627.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="550.7" y="638.0"></text>
</g>
<g>
<title>schedule_timeout (1 samples, 0.25%)</title><rect x="547.7" y="611.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="550.7" y="622.0"></text>
</g>
<g>
<title>del_timer_sync (1 samples, 0.25%)</title><rect x="547.7" y="595.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="550.7" y="606.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (1 samples, 0.25%)</title><rect x="547.7" y="579.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="550.7" y="590.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.25%)</title><rect x="547.7" y="563.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="550.7" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.25%)</title><rect x="547.7" y="547.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="550.7" y="558.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.25%)</title><rect x="550.7" y="659.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="553.7" y="670.0"></text>
</g>
<g>
<title>tcp_prequeue_process (8 samples, 2.03%)</title><rect x="553.7" y="659.0" width="23.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="556.7" y="670.0">t..</text>
</g>
<g>
<title>tcp_v4_do_rcv (8 samples, 2.03%)</title><rect x="553.7" y="643.0" width="23.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="556.7" y="654.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (8 samples, 2.03%)</title><rect x="553.7" y="627.0" width="23.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="556.7" y="638.0">t..</text>
</g>
<g>
<title>kfree_skb_partial (1 samples, 0.25%)</title><rect x="553.7" y="611.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="556.7" y="622.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.25%)</title><rect x="553.7" y="595.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="556.7" y="606.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.25%)</title><rect x="556.7" y="611.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="559.7" y="622.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.25%)</title><rect x="556.7" y="595.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="559.7" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="556.7" y="579.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="559.7" y="590.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.51%)</title><rect x="559.7" y="611.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="562.7" y="622.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (2 samples, 0.51%)</title><rect x="559.7" y="595.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="562.7" y="606.0"></text>
</g>
<g>
<title>copy_to_iter (2 samples, 0.51%)</title><rect x="559.7" y="579.0" width="5.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="562.7" y="590.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.25%)</title><rect x="559.7" y="563.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="562.7" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.25%)</title><rect x="562.7" y="563.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="565.7" y="574.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="565.6" y="611.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="568.6" y="622.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.25%)</title><rect x="565.6" y="595.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="568.6" y="606.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (3 samples, 0.76%)</title><rect x="568.6" y="611.0" width="9.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="571.6" y="622.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.76%)</title><rect x="568.6" y="595.0" width="9.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="571.6" y="606.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.51%)</title><rect x="571.6" y="579.0" width="6.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="574.6" y="590.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.25%)</title><rect x="571.6" y="563.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="574.6" y="574.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.25%)</title><rect x="574.6" y="563.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="577.6" y="574.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.25%)</title><rect x="577.6" y="787.0" width="3.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="580.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2 samples, 0.51%)</title><rect x="580.6" y="819.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="583.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.25%)</title><rect x="580.6" y="803.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="583.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.25%)</title><rect x="583.6" y="803.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.25%)</title><rect x="583.6" y="787.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="586.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.25%)</title><rect x="583.6" y="771.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.25%)</title><rect x="586.6" y="819.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="589.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.25%)</title><rect x="586.6" y="803.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="589.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.25%)</title><rect x="586.6" y="787.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="589.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.25%)</title><rect x="586.6" y="771.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (7 samples, 1.77%)</title><rect x="589.5" y="819.0" width="21.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="592.5" y="830.0"></text>
</g>
<g>
<title>__GI___setsockopt (6 samples, 1.52%)</title><rect x="592.5" y="803.0" width="18.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="595.5" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (5 samples, 1.27%)</title><rect x="595.5" y="787.0" width="15.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="598.5" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.27%)</title><rect x="595.5" y="771.0" width="15.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="598.5" y="782.0"></text>
</g>
<g>
<title>sys_setsockopt (4 samples, 1.01%)</title><rect x="598.5" y="755.0" width="12.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="601.5" y="766.0"></text>
</g>
<g>
<title>sock_setsockopt (4 samples, 1.01%)</title><rect x="598.5" y="739.0" width="12.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="601.5" y="750.0"></text>
</g>
<g>
<title>__get_user_4 (1 samples, 0.25%)</title><rect x="598.5" y="723.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="601.5" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.25%)</title><rect x="601.5" y="723.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="604.5" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.25%)</title><rect x="601.5" y="707.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="604.5" y="718.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.51%)</title><rect x="604.5" y="723.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="607.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (28 samples, 7.09%)</title><rect x="610.5" y="819.0" width="83.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.5" y="830.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (3 samples, 0.76%)</title><rect x="613.4" y="803.0" width="9.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="616.4" y="814.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.51%)</title><rect x="616.4" y="787.0" width="6.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="619.4" y="798.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.25%)</title><rect x="622.4" y="803.0" width="3.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="625.4" y="814.0"></text>
</g>
<g>
<title>__send (23 samples, 5.82%)</title><rect x="625.4" y="803.0" width="68.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="628.4" y="814.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (23 samples, 5.82%)</title><rect x="625.4" y="787.0" width="68.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="628.4" y="798.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (23 samples, 5.82%)</title><rect x="625.4" y="771.0" width="68.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="628.4" y="782.0">do_sysc..</text>
</g>
<g>
<title>sys_setsockopt (23 samples, 5.82%)</title><rect x="625.4" y="755.0" width="68.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="628.4" y="766.0">sys_set..</text>
</g>
<g>
<title>sock_setsockopt (23 samples, 5.82%)</title><rect x="625.4" y="739.0" width="68.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="628.4" y="750.0">sock_se..</text>
</g>
<g>
<title>SYSC_sendto (23 samples, 5.82%)</title><rect x="625.4" y="723.0" width="68.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="628.4" y="734.0">SYSC_se..</text>
</g>
<g>
<title>sock_sendmsg (22 samples, 5.57%)</title><rect x="628.4" y="707.0" width="65.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="631.4" y="718.0">sock_se..</text>
</g>
<g>
<title>tcp_sendmsg (22 samples, 5.57%)</title><rect x="628.4" y="691.0" width="65.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="631.4" y="702.0">tcp_sen..</text>
</g>
<g>
<title>__tcp_push_pending_frames (20 samples, 5.06%)</title><rect x="628.4" y="675.0" width="59.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="631.4" y="686.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (19 samples, 4.81%)</title><rect x="631.4" y="659.0" width="56.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="634.4" y="670.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (16 samples, 4.05%)</title><rect x="637.3" y="643.0" width="47.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="640.3" y="654.0">__tc..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.25%)</title><rect x="637.3" y="627.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="640.3" y="638.0"></text>
</g>
<g>
<title>ip_local_out (13 samples, 3.29%)</title><rect x="640.3" y="627.0" width="38.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="643.3" y="638.0">ip_..</text>
</g>
<g>
<title>__sk_dst_check (13 samples, 3.29%)</title><rect x="640.3" y="611.0" width="38.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="643.3" y="622.0">__s..</text>
</g>
<g>
<title>ipv4_dst_check (13 samples, 3.29%)</title><rect x="640.3" y="595.0" width="38.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="643.3" y="606.0">ipv..</text>
</g>
<g>
<title>ip_output (13 samples, 3.29%)</title><rect x="640.3" y="579.0" width="38.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="643.3" y="590.0">ip_..</text>
</g>
<g>
<title>ip_finish_output2 (13 samples, 3.29%)</title><rect x="640.3" y="563.0" width="38.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="643.3" y="574.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (11 samples, 2.78%)</title><rect x="640.3" y="547.0" width="32.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="643.3" y="558.0">__..</text>
</g>
<g>
<title>do_softirq.part.18 (11 samples, 2.78%)</title><rect x="640.3" y="531.0" width="32.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="643.3" y="542.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (11 samples, 2.78%)</title><rect x="640.3" y="515.0" width="32.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="643.3" y="526.0">do..</text>
</g>
<g>
<title>__do_softirq (11 samples, 2.78%)</title><rect x="640.3" y="499.0" width="32.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="643.3" y="510.0">__..</text>
</g>
<g>
<title>net_rx_action (11 samples, 2.78%)</title><rect x="640.3" y="483.0" width="32.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="643.3" y="494.0">ne..</text>
</g>
<g>
<title>process_backlog (11 samples, 2.78%)</title><rect x="640.3" y="467.0" width="32.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="643.3" y="478.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 1.01%)</title><rect x="643.3" y="451.0" width="12.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="646.3" y="462.0"></text>
</g>
<g>
<title>load_balance (4 samples, 1.01%)</title><rect x="643.3" y="435.0" width="12.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="646.3" y="446.0"></text>
</g>
<g>
<title>cpumask_next_and (1 samples, 0.25%)</title><rect x="643.3" y="419.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="646.3" y="430.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="643.3" y="403.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="646.3" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="643.3" y="387.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="646.3" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="643.3" y="371.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="646.3" y="382.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="643.3" y="355.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="646.3" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="643.3" y="339.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="646.3" y="350.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.25%)</title><rect x="643.3" y="323.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="646.3" y="334.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.76%)</title><rect x="646.3" y="419.0" width="9.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="649.3" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.76%)</title><rect x="646.3" y="403.0" width="9.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="649.3" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.76%)</title><rect x="646.3" y="387.0" width="9.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="649.3" y="398.0"></text>
</g>
<g>
<title>find_busiest_group (3 samples, 0.76%)</title><rect x="646.3" y="371.0" width="9.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="649.3" y="382.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.76%)</title><rect x="646.3" y="355.0" width="9.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="649.3" y="366.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.76%)</title><rect x="646.3" y="339.0" width="9.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="649.3" y="350.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.76%)</title><rect x="646.3" y="323.0" width="9.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="649.3" y="334.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.76%)</title><rect x="646.3" y="307.0" width="9.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="649.3" y="318.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.25%)</title><rect x="646.3" y="291.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="649.3" y="302.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.25%)</title><rect x="646.3" y="275.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="649.3" y="286.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="646.3" y="259.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="649.3" y="270.0"></text>
</g>
<g>
<title>tcp_data_queue (2 samples, 0.51%)</title><rect x="649.3" y="291.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="652.3" y="302.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.51%)</title><rect x="649.3" y="275.0" width="6.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="652.3" y="286.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.51%)</title><rect x="649.3" y="259.0" width="6.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="652.3" y="270.0"></text>
</g>
<g>
<title>sched_clock (6 samples, 1.52%)</title><rect x="655.3" y="451.0" width="17.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="658.3" y="462.0"></text>
</g>
<g>
<title>enqueue_task_fair (5 samples, 1.27%)</title><rect x="655.3" y="435.0" width="14.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="658.3" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 1.27%)</title><rect x="655.3" y="419.0" width="14.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="658.3" y="430.0"></text>
</g>
<g>
<title>enqueue_entity (5 samples, 1.27%)</title><rect x="655.3" y="403.0" width="14.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="658.3" y="414.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 1.27%)</title><rect x="655.3" y="387.0" width="14.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="658.3" y="398.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (5 samples, 1.27%)</title><rect x="655.3" y="371.0" width="14.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="658.3" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver (5 samples, 1.27%)</title><rect x="655.3" y="355.0" width="14.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="658.3" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 1.27%)</title><rect x="655.3" y="339.0" width="14.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="658.3" y="350.0"></text>
</g>
<g>
<title>find_busiest_group (5 samples, 1.27%)</title><rect x="655.3" y="323.0" width="14.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="658.3" y="334.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 1.27%)</title><rect x="655.3" y="307.0" width="14.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="658.3" y="318.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.25%)</title><rect x="655.3" y="291.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="658.3" y="302.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 1.01%)</title><rect x="658.3" y="291.0" width="11.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="661.3" y="302.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 1.01%)</title><rect x="658.3" y="275.0" width="11.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="661.3" y="286.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 1.01%)</title><rect x="658.3" y="259.0" width="11.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="661.3" y="270.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.25%)</title><rect x="658.3" y="243.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="661.3" y="254.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="658.3" y="227.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="661.3" y="238.0"></text>
</g>
<g>
<title>tcp_rtt_estimator (1 samples, 0.25%)</title><rect x="658.3" y="211.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="661.3" y="222.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.25%)</title><rect x="658.3" y="195.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="661.3" y="206.0"></text>
</g>
<g>
<title>tcp_data_queue (2 samples, 0.51%)</title><rect x="661.2" y="243.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="664.2" y="254.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="664.2" y="227.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="667.2" y="238.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="664.2" y="211.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="667.2" y="222.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.25%)</title><rect x="667.2" y="243.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="670.2" y="254.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.25%)</title><rect x="670.2" y="435.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="673.2" y="446.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.25%)</title><rect x="670.2" y="419.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="673.2" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.25%)</title><rect x="670.2" y="403.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="673.2" y="414.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.25%)</title><rect x="670.2" y="387.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="673.2" y="398.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.25%)</title><rect x="670.2" y="371.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="673.2" y="382.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.25%)</title><rect x="670.2" y="355.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="673.2" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.25%)</title><rect x="670.2" y="339.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="673.2" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.25%)</title><rect x="670.2" y="323.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="673.2" y="334.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.25%)</title><rect x="670.2" y="307.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="673.2" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.25%)</title><rect x="670.2" y="291.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="673.2" y="302.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="670.2" y="275.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="673.2" y="286.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="670.2" y="259.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="673.2" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.25%)</title><rect x="670.2" y="243.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="673.2" y="254.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.25%)</title><rect x="670.2" y="227.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="673.2" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.25%)</title><rect x="670.2" y="211.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="673.2" y="222.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="670.2" y="195.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="673.2" y="206.0"></text>
</g>
<g>
<title>__switch_to_asm (2 samples, 0.51%)</title><rect x="673.2" y="547.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="676.2" y="558.0"></text>
</g>
<g>
<title>__perf_event_task_sched_in (2 samples, 0.51%)</title><rect x="673.2" y="531.0" width="6.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="676.2" y="542.0"></text>
</g>
<g>
<title>perf_pmu_nop_void (2 samples, 0.51%)</title><rect x="673.2" y="515.0" width="6.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="676.2" y="526.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.51%)</title><rect x="673.2" y="499.0" width="6.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="676.2" y="510.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.51%)</title><rect x="673.2" y="483.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="676.2" y="494.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.25%)</title><rect x="676.2" y="467.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="679.2" y="478.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.25%)</title><rect x="676.2" y="451.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="679.2" y="462.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.51%)</title><rect x="679.2" y="627.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="682.2" y="638.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.25%)</title><rect x="682.2" y="611.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="685.2" y="622.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.25%)</title><rect x="682.2" y="595.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="685.2" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.25%)</title><rect x="685.1" y="643.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="688.1" y="654.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.25%)</title><rect x="685.1" y="627.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="688.1" y="638.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.25%)</title><rect x="685.1" y="611.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="688.1" y="622.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.25%)</title><rect x="685.1" y="595.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="688.1" y="606.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.25%)</title><rect x="685.1" y="579.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="688.1" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.51%)</title><rect x="688.1" y="675.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="691.1" y="686.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.51%)</title><rect x="688.1" y="659.0" width="6.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="691.1" y="670.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.51%)</title><rect x="688.1" y="643.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="691.1" y="654.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.25%)</title><rect x="691.1" y="627.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="694.1" y="638.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.25%)</title><rect x="691.1" y="611.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="694.1" y="622.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (3 samples, 0.76%)</title><rect x="694.1" y="979.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.1" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (1 samples, 0.25%)</title><rect x="694.1" y="963.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="697.1" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.accept0 (1 samples, 0.25%)</title><rect x="694.1" y="947.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.25%)</title><rect x="694.1" y="931.0" width="3.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="697.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.25%)</title><rect x="694.1" y="915.0" width="3.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="697.1" y="926.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.25%)</title><rect x="694.1" y="899.0" width="3.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="697.1" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.25%)</title><rect x="694.1" y="883.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="697.1" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.25%)</title><rect x="694.1" y="867.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="697.1" y="878.0"></text>
</g>
<g>
<title>ep_ptable_queue_proc (1 samples, 0.25%)</title><rect x="694.1" y="851.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="697.1" y="862.0"></text>
</g>
<g>
<title>SYSC_accept4 (1 samples, 0.25%)</title><rect x="694.1" y="835.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="697.1" y="846.0"></text>
</g>
<g>
<title>__alloc_fd (1 samples, 0.25%)</title><rect x="694.1" y="819.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="697.1" y="830.0"></text>
</g>
<g>
<title>_find_next_bit.part.0 (1 samples, 0.25%)</title><rect x="694.1" y="803.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="697.1" y="814.0"></text>
</g>
<g>
<title>one/nio/server/Server.register (2 samples, 0.51%)</title><rect x="697.1" y="963.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.1" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.register (2 samples, 0.51%)</title><rect x="697.1" y="947.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.1" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.enable (2 samples, 0.51%)</title><rect x="697.1" y="931.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.1" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollCtl (2 samples, 0.51%)</title><rect x="697.1" y="915.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.1" y="926.0"></text>
</g>
<g>
<title>__GI_epoll_ctl (2 samples, 0.51%)</title><rect x="697.1" y="899.0" width="6.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="700.1" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.51%)</title><rect x="697.1" y="883.0" width="6.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="700.1" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.51%)</title><rect x="697.1" y="867.0" width="6.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="700.1" y="878.0"></text>
</g>
<g>
<title>ep_ptable_queue_proc (1 samples, 0.25%)</title><rect x="700.1" y="851.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="703.1" y="862.0"></text>
</g>
<g>
<title>sys_epoll_ctl (1 samples, 0.25%)</title><rect x="700.1" y="835.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="703.1" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="700.1" y="819.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="703.1" y="830.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (85 samples, 21.52%)</title><rect x="703.1" y="979.0" width="253.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.1" y="990.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.51%)</title><rect x="709.0" y="963.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.0" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (20 samples, 5.06%)</title><rect x="715.0" y="963.0" width="59.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.0" y="974.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (19 samples, 4.81%)</title><rect x="718.0" y="947.0" width="56.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="721.0" y="958.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.25%)</title><rect x="727.0" y="931.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="730.0" y="942.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.76%)</title><rect x="729.9" y="931.0" width="9.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="732.9" y="942.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.25%)</title><rect x="735.9" y="915.0" width="3.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="738.9" y="926.0"></text>
</g>
<g>
<title>epoll_wait (12 samples, 3.04%)</title><rect x="738.9" y="931.0" width="35.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="741.9" y="942.0">epo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (10 samples, 2.53%)</title><rect x="744.9" y="915.0" width="29.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="747.9" y="926.0">en..</text>
</g>
<g>
<title>do_syscall_64 (10 samples, 2.53%)</title><rect x="744.9" y="899.0" width="29.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="747.9" y="910.0">do..</text>
</g>
<g>
<title>sys_epoll_wait (10 samples, 2.53%)</title><rect x="744.9" y="883.0" width="29.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="747.9" y="894.0">sy..</text>
</g>
<g>
<title>__fget_light (1 samples, 0.25%)</title><rect x="744.9" y="867.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="747.9" y="878.0"></text>
</g>
<g>
<title>default_wake_function (7 samples, 1.77%)</title><rect x="747.9" y="867.0" width="20.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="750.9" y="878.0"></text>
</g>
<g>
<title>ep_poll (7 samples, 1.77%)</title><rect x="747.9" y="851.0" width="20.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="750.9" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="747.9" y="835.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="750.9" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (6 samples, 1.52%)</title><rect x="750.9" y="835.0" width="17.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="753.9" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.25%)</title><rect x="750.9" y="819.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="753.9" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.25%)</title><rect x="753.8" y="819.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="756.8" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.25%)</title><rect x="753.8" y="803.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="756.8" y="814.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.25%)</title><rect x="753.8" y="787.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="756.8" y="798.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.25%)</title><rect x="753.8" y="771.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="756.8" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 1.01%)</title><rect x="756.8" y="819.0" width="12.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="759.8" y="830.0"></text>
</g>
<g>
<title>schedule (4 samples, 1.01%)</title><rect x="756.8" y="803.0" width="12.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="759.8" y="814.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 1.01%)</title><rect x="756.8" y="787.0" width="12.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="759.8" y="798.0"></text>
</g>
<g>
<title>__schedule (4 samples, 1.01%)</title><rect x="756.8" y="771.0" width="12.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="759.8" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 1.01%)</title><rect x="756.8" y="755.0" width="12.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="759.8" y="766.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.25%)</title><rect x="768.8" y="867.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="771.8" y="878.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (1 samples, 0.25%)</title><rect x="768.8" y="851.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="771.8" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.25%)</title><rect x="768.8" y="835.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="771.8" y="846.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.25%)</title><rect x="768.8" y="819.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="771.8" y="830.0"></text>
</g>
<g>
<title>fput (1 samples, 0.25%)</title><rect x="771.8" y="867.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="774.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (61 samples, 15.44%)</title><rect x="774.8" y="963.0" width="182.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="777.8" y="974.0">one/nio/net/Session.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (61 samples, 15.44%)</title><rect x="774.8" y="947.0" width="182.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.8" y="958.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (1 samples, 0.25%)</title><rect x="774.8" y="931.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.8" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (1 samples, 0.25%)</title><rect x="774.8" y="915.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="777.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 0.25%)</title><rect x="774.8" y="899.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.8" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (1 samples, 0.25%)</title><rect x="774.8" y="883.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="777.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.25%)</title><rect x="774.8" y="867.0" width="2.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="777.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.25%)</title><rect x="774.8" y="851.0" width="2.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="777.8" y="862.0"></text>
</g>
<g>
<title>__GI___shutdown (1 samples, 0.25%)</title><rect x="774.8" y="835.0" width="2.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="777.8" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.25%)</title><rect x="774.8" y="819.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="777.8" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.25%)</title><rect x="774.8" y="803.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="777.8" y="814.0"></text>
</g>
<g>
<title>sys_shutdown (1 samples, 0.25%)</title><rect x="774.8" y="787.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="777.8" y="798.0"></text>
</g>
<g>
<title>inet_shutdown (1 samples, 0.25%)</title><rect x="774.8" y="771.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="777.8" y="782.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.25%)</title><rect x="774.8" y="755.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="777.8" y="766.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.25%)</title><rect x="774.8" y="739.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="777.8" y="750.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.25%)</title><rect x="774.8" y="723.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="777.8" y="734.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.25%)</title><rect x="774.8" y="707.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="777.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (40 samples, 10.13%)</title><rect x="777.7" y="931.0" width="119.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="780.7" y="942.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (30 samples, 7.59%)</title><rect x="777.7" y="915.0" width="89.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.7" y="926.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (30 samples, 7.59%)</title><rect x="777.7" y="899.0" width="89.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="780.7" y="910.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler3_entity.handleRequest (28 samples, 7.09%)</title><rect x="777.7" y="883.0" width="83.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="780.7" y="894.0">RequestHa..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.entity (28 samples, 7.09%)</title><rect x="777.7" y="867.0" width="83.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.7" y="878.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.25%)</title><rect x="780.7" y="851.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="783.7" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (18 samples, 4.56%)</title><rect x="783.7" y="851.0" width="53.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="786.7" y="862.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.25%)</title><rect x="786.7" y="835.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="789.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.25%)</title><rect x="786.7" y="819.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (16 samples, 4.05%)</title><rect x="789.7" y="835.0" width="47.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="792.7" y="846.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 4.05%)</title><rect x="789.7" y="819.0" width="47.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="792.7" y="830.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (15 samples, 3.80%)</title><rect x="792.7" y="803.0" width="44.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="795.7" y="814.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (14 samples, 3.54%)</title><rect x="792.7" y="787.0" width="41.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.7" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 3.54%)</title><rect x="792.7" y="771.0" width="41.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="795.7" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 3.54%)</title><rect x="792.7" y="755.0" width="41.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.7" y="766.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 3.54%)</title><rect x="792.7" y="739.0" width="41.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="795.7" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 3.54%)</title><rect x="792.7" y="723.0" width="41.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="795.7" y="734.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 3.54%)</title><rect x="792.7" y="707.0" width="41.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.7" y="718.0">jdk..</text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.76%)</title><rect x="792.7" y="691.0" width="8.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="795.7" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.25%)</title><rect x="792.7" y="675.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="795.7" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.51%)</title><rect x="795.7" y="675.0" width="5.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="798.7" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 2.78%)</title><rect x="801.6" y="691.0" width="32.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="804.6" y="702.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (9 samples, 2.28%)</title><rect x="807.6" y="675.0" width="26.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="810.6" y="686.0">e..</text>
</g>
<g>
<title>do_syscall_64 (9 samples, 2.28%)</title><rect x="807.6" y="659.0" width="26.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="810.6" y="670.0">d..</text>
</g>
<g>
<title>sys_futex (8 samples, 2.03%)</title><rect x="810.6" y="643.0" width="23.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="813.6" y="654.0">s..</text>
</g>
<g>
<title>do_futex (8 samples, 2.03%)</title><rect x="810.6" y="627.0" width="23.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="813.6" y="638.0">d..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.25%)</title><rect x="813.6" y="611.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="816.6" y="622.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 1.52%)</title><rect x="816.6" y="611.0" width="17.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="819.6" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 1.52%)</title><rect x="816.6" y="595.0" width="17.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="819.6" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 1.52%)</title><rect x="816.6" y="579.0" width="17.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="819.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.25%)</title><rect x="834.5" y="787.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="837.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.25%)</title><rect x="834.5" y="771.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="837.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.25%)</title><rect x="834.5" y="755.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="837.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.25%)</title><rect x="834.5" y="739.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="837.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.25%)</title><rect x="834.5" y="723.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="837.5" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.25%)</title><rect x="834.5" y="707.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (8 samples, 2.03%)</title><rect x="837.5" y="851.0" width="23.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="840.5" y="862.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 2.03%)</title><rect x="837.5" y="835.0" width="23.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="840.5" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 2.03%)</title><rect x="837.5" y="819.0" width="23.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="840.5" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (1 samples, 0.25%)</title><rect x="837.5" y="803.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="840.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 1.77%)</title><rect x="840.5" y="803.0" width="20.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 1.77%)</title><rect x="840.5" y="787.0" width="20.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="843.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 1.77%)</title><rect x="840.5" y="771.0" width="20.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="843.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 1.77%)</title><rect x="840.5" y="755.0" width="20.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="843.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 1.77%)</title><rect x="840.5" y="739.0" width="20.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="843.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 1.77%)</title><rect x="840.5" y="723.0" width="20.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.5" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.51%)</title><rect x="840.5" y="707.0" width="6.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="843.5" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.25%)</title><rect x="843.5" y="691.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="846.5" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 1.27%)</title><rect x="846.5" y="707.0" width="14.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="849.5" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (4 samples, 1.01%)</title><rect x="849.4" y="691.0" width="12.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="852.4" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.01%)</title><rect x="849.4" y="675.0" width="12.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="852.4" y="686.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 1.01%)</title><rect x="849.4" y="659.0" width="12.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="852.4" y="670.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.76%)</title><rect x="852.4" y="643.0" width="9.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="855.4" y="654.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.25%)</title><rect x="852.4" y="627.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="855.4" y="638.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.25%)</title><rect x="852.4" y="611.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="855.4" y="622.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.51%)</title><rect x="855.4" y="627.0" width="6.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="858.4" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.51%)</title><rect x="855.4" y="611.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="858.4" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.51%)</title><rect x="855.4" y="595.0" width="6.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="858.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.51%)</title><rect x="861.4" y="883.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.4" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.51%)</title><rect x="861.4" y="867.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="864.4" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.25%)</title><rect x="861.4" y="851.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="864.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.25%)</title><rect x="861.4" y="835.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="864.4" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.25%)</title><rect x="864.4" y="851.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="867.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.25%)</title><rect x="864.4" y="835.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="867.4" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.25%)</title><rect x="864.4" y="819.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="867.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.76%)</title><rect x="867.4" y="915.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="870.4" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.51%)</title><rect x="870.4" y="899.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.25%)</title><rect x="873.3" y="883.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.25%)</title><rect x="873.3" y="867.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="876.3" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.25%)</title><rect x="873.3" y="851.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="876.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="873.3" y="835.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.51%)</title><rect x="876.3" y="915.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="879.3" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.51%)</title><rect x="876.3" y="899.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="879.3" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.51%)</title><rect x="876.3" y="883.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="879.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.51%)</title><rect x="876.3" y="867.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="879.3" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.51%)</title><rect x="876.3" y="851.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="879.3" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.25%)</title><rect x="879.3" y="835.0" width="3.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="882.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.25%)</title><rect x="882.3" y="915.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="885.3" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 1.01%)</title><rect x="885.3" y="915.0" width="11.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="888.3" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.51%)</title><rect x="888.3" y="899.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.51%)</title><rect x="888.3" y="883.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="891.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.51%)</title><rect x="888.3" y="867.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="891.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.25%)</title><rect x="894.3" y="899.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.3" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.25%)</title><rect x="894.3" y="883.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (20 samples, 5.06%)</title><rect x="897.2" y="931.0" width="59.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="900.2" y="942.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (20 samples, 5.06%)</title><rect x="897.2" y="915.0" width="59.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.2" y="926.0">one/ni..</text>
</g>
<g>
<title>[unknown] (7 samples, 1.77%)</title><rect x="897.2" y="899.0" width="21.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="900.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 1.52%)</title><rect x="897.2" y="883.0" width="18.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="900.2" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 1.27%)</title><rect x="897.2" y="867.0" width="15.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="900.2" y="878.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.25%)</title><rect x="897.2" y="851.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="900.2" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.51%)</title><rect x="900.2" y="851.0" width="6.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="903.2" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.25%)</title><rect x="903.2" y="835.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="906.2" y="846.0"></text>
</g>
<g>
<title>jni_ThrowNew (2 samples, 0.51%)</title><rect x="906.2" y="851.0" width="6.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="909.2" y="862.0"></text>
</g>
<g>
<title>Exceptions::_throw_msg(Thread*, char const*, int, Symbol*, char const*, Handle, Handle) (2 samples, 0.51%)</title><rect x="906.2" y="835.0" width="6.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="909.2" y="846.0"></text>
</g>
<g>
<title>Exceptions::_throw(Thread*, char const*, int, Handle, char const*) (1 samples, 0.25%)</title><rect x="906.2" y="819.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="909.2" y="830.0"></text>
</g>
<g>
<title>oopDesc::print_value_string() (1 samples, 0.25%)</title><rect x="906.2" y="803.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="909.2" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::oop_print_value_on(oopDesc*, outputStream*) (1 samples, 0.25%)</title><rect x="906.2" y="787.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="909.2" y="798.0"></text>
</g>
<g>
<title>Symbol::print_value_on(outputStream*) const (1 samples, 0.25%)</title><rect x="906.2" y="771.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="909.2" y="782.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.25%)</title><rect x="906.2" y="755.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="909.2" y="766.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, __va_list_tag*, bool) (1 samples, 0.25%)</title><rect x="906.2" y="739.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="909.2" y="750.0"></text>
</g>
<g>
<title>stringStream::write(char const*, unsigned long) (1 samples, 0.25%)</title><rect x="906.2" y="723.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="909.2" y="734.0"></text>
</g>
<g>
<title>Exceptions::new_exception(Thread*, Symbol*, char const*, Handle, Handle, Handle, Exceptions::ExceptionMsgToUtf8Mode) (1 samples, 0.25%)</title><rect x="909.2" y="819.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="912.2" y="830.0"></text>
</g>
<g>
<title>Exceptions::new_exception(Thread*, Symbol*, Symbol*, JavaCallArguments*, Handle, Handle, Handle) (1 samples, 0.25%)</title><rect x="909.2" y="803.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="912.2" y="814.0"></text>
</g>
<g>
<title>JavaCalls::construct_new_instance(InstanceKlass*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.25%)</title><rect x="909.2" y="787.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="912.2" y="798.0"></text>
</g>
<g>
<title>JavaCalls::call_special(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.25%)</title><rect x="909.2" y="771.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="912.2" y="782.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.25%)</title><rect x="909.2" y="755.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="912.2" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.25%)</title><rect x="912.2" y="867.0" width="3.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="915.2" y="878.0"></text>
</g>
<g>
<title>_IO_str_init_static_internal (1 samples, 0.25%)</title><rect x="915.2" y="883.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="918.2" y="894.0"></text>
</g>
<g>
<title>__libc_recv (12 samples, 3.04%)</title><rect x="918.2" y="899.0" width="35.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="921.2" y="910.0">__l..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (10 samples, 2.53%)</title><rect x="924.1" y="883.0" width="29.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="927.1" y="894.0">en..</text>
</g>
<g>
<title>do_syscall_64 (10 samples, 2.53%)</title><rect x="924.1" y="867.0" width="29.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="927.1" y="878.0">do..</text>
</g>
<g>
<title>sys_epoll_wait (10 samples, 2.53%)</title><rect x="924.1" y="851.0" width="29.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="927.1" y="862.0">sy..</text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.25%)</title><rect x="924.1" y="835.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="927.1" y="846.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.25%)</title><rect x="924.1" y="819.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="927.1" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.25%)</title><rect x="924.1" y="803.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="927.1" y="814.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.25%)</title><rect x="924.1" y="787.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="927.1" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.25%)</title><rect x="924.1" y="771.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="927.1" y="782.0"></text>
</g>
<g>
<title>default_wake_function (9 samples, 2.28%)</title><rect x="927.1" y="835.0" width="26.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="930.1" y="846.0">d..</text>
</g>
<g>
<title>SYSC_recvfrom (9 samples, 2.28%)</title><rect x="927.1" y="819.0" width="26.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="930.1" y="830.0">S..</text>
</g>
<g>
<title>inet_recvmsg (5 samples, 1.27%)</title><rect x="930.1" y="803.0" width="14.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="933.1" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.25%)</title><rect x="930.1" y="787.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="933.1" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.25%)</title><rect x="930.1" y="771.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="933.1" y="782.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.25%)</title><rect x="930.1" y="755.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="933.1" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 1.01%)</title><rect x="933.1" y="787.0" width="11.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="936.1" y="798.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.25%)</title><rect x="939.1" y="771.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="942.1" y="782.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.25%)</title><rect x="939.1" y="755.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="942.1" y="766.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.25%)</title><rect x="942.1" y="771.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="945.1" y="782.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.25%)</title><rect x="942.1" y="755.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="945.1" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.25%)</title><rect x="945.0" y="803.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="948.0" y="814.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.25%)</title><rect x="945.0" y="787.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="948.0" y="798.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.51%)</title><rect x="948.0" y="803.0" width="6.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="951.0" y="814.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.25%)</title><rect x="951.0" y="787.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="954.0" y="798.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (1 samples, 0.25%)</title><rect x="954.0" y="899.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="957.0" y="910.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (1 samples, 0.25%)</title><rect x="954.0" y="883.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="957.0" y="894.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (1 samples, 0.25%)</title><rect x="954.0" y="867.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="957.0" y="878.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.25%)</title><rect x="954.0" y="851.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="957.0" y="862.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.25%)</title><rect x="954.0" y="835.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="957.0" y="846.0"></text>
</g>
<g>
<title>start_thread (78 samples, 19.75%)</title><rect x="957.0" y="979.0" width="233.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="960.0" y="990.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (78 samples, 19.75%)</title><rect x="957.0" y="963.0" width="233.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="960.0" y="974.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (78 samples, 19.75%)</title><rect x="957.0" y="947.0" width="233.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="960.0" y="958.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::run() (78 samples, 19.75%)</title><rect x="957.0" y="931.0" width="233.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="960.0" y="942.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (78 samples, 19.75%)</title><rect x="957.0" y="915.0" width="233.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="960.0" y="926.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (78 samples, 19.75%)</title><rect x="957.0" y="899.0" width="233.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="960.0" y="910.0">CompileBroker::compiler_thread_..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (78 samples, 19.75%)</title><rect x="957.0" y="883.0" width="233.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="960.0" y="894.0">CompileBroker::invoke_compiler_..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (77 samples, 19.49%)</title><rect x="957.0" y="867.0" width="230.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="960.0" y="878.0">C2Compiler::compile_method(ciE..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (77 samples, 19.49%)</title><rect x="957.0" y="851.0" width="230.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="960.0" y="862.0">Compile::Compile(ciEnv*, C2Com..</text>
</g>
<g>
<title>Compile::Code_Gen() (41 samples, 10.38%)</title><rect x="957.0" y="835.0" width="122.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="960.0" y="846.0">Compile::Code_G..</text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.25%)</title><rect x="957.0" y="819.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="960.0" y="830.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.25%)</title><rect x="957.0" y="803.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="960.0" y="814.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.25%)</title><rect x="957.0" y="787.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="960.0" y="798.0"></text>
</g>
<g>
<title>vsub4B_regNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.25%)</title><rect x="957.0" y="771.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="960.0" y="782.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.25%)</title><rect x="957.0" y="755.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="960.0" y="766.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.25%)</title><rect x="957.0" y="739.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="960.0" y="750.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.25%)</title><rect x="957.0" y="723.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="960.0" y="734.0"></text>
</g>
<g>
<title>__do_fault (1 samples, 0.25%)</title><rect x="957.0" y="707.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="960.0" y="718.0"></text>
</g>
<g>
<title>filemap_fault (1 samples, 0.25%)</title><rect x="957.0" y="691.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="960.0" y="702.0"></text>
</g>
<g>
<title>__do_page_cache_readahead (1 samples, 0.25%)</title><rect x="957.0" y="675.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="960.0" y="686.0"></text>
</g>
<g>
<title>workingset_refault (1 samples, 0.25%)</title><rect x="957.0" y="659.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="960.0" y="670.0"></text>
</g>
<g>
<title>squashfs_readpage	[squashfs] (1 samples, 0.25%)</title><rect x="957.0" y="643.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="960.0" y="654.0"></text>
</g>
<g>
<title>squashfs_readpage_block	[squashfs] (1 samples, 0.25%)</title><rect x="957.0" y="627.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="960.0" y="638.0"></text>
</g>
<g>
<title>squashfs_copy_data.part.0	[squashfs] (1 samples, 0.25%)</title><rect x="957.0" y="611.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="960.0" y="622.0"></text>
</g>
<g>
<title>squashfs_cache_put	[squashfs] (1 samples, 0.25%)</title><rect x="957.0" y="595.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="960.0" y="606.0"></text>
</g>
<g>
<title>squashfs_cache_get	[squashfs] (1 samples, 0.25%)</title><rect x="957.0" y="579.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="960.0" y="590.0"></text>
</g>
<g>
<title>squashfs_read_data	[squashfs] (1 samples, 0.25%)</title><rect x="957.0" y="563.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="960.0" y="574.0"></text>
</g>
<g>
<title>squashfs_decompress	[squashfs] (1 samples, 0.25%)</title><rect x="957.0" y="547.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="960.0" y="558.0"></text>
</g>
<g>
<title>squashfs_xz_uncompress	[squashfs] (1 samples, 0.25%)</title><rect x="957.0" y="531.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="960.0" y="542.0"></text>
</g>
<g>
<title>xz_dec_run (1 samples, 0.25%)</title><rect x="957.0" y="515.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="960.0" y="526.0"></text>
</g>
<g>
<title>xz_dec_lzma2_run (1 samples, 0.25%)</title><rect x="957.0" y="499.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="960.0" y="510.0"></text>
</g>
<g>
<title>lzma_main (1 samples, 0.25%)</title><rect x="957.0" y="483.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="960.0" y="494.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.25%)</title><rect x="960.0" y="819.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="963.0" y="830.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.25%)</title><rect x="960.0" y="803.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="963.0" y="814.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.25%)</title><rect x="960.0" y="787.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="963.0" y="798.0"></text>
</g>
<g>
<title>ConstantOopWriteValue::write_on(DebugInfoWriteStream*) (1 samples, 0.25%)</title><rect x="960.0" y="771.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="963.0" y="782.0"></text>
</g>
<g>
<title>OopRecorder::find_index(_jobject*) (1 samples, 0.25%)</title><rect x="960.0" y="755.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="963.0" y="766.0"></text>
</g>
<g>
<title>ValueRecorder&lt;_jobject*&gt;::maybe_find_index(_jobject*) (1 samples, 0.25%)</title><rect x="960.0" y="739.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="963.0" y="750.0"></text>
</g>
<g>
<title>ValueRecorder&lt;_jobject*&gt;::maybe_initialize() (1 samples, 0.25%)</title><rect x="960.0" y="723.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="963.0" y="734.0"></text>
</g>
<g>
<title>Matcher::match() (4 samples, 1.01%)</title><rect x="963.0" y="819.0" width="11.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="966.0" y="830.0"></text>
</g>
<g>
<title>Matcher::Fixup_Save_On_Entry() (1 samples, 0.25%)</title><rect x="963.0" y="803.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="966.0" y="814.0"></text>
</g>
<g>
<title>Matcher::init_first_stack_mask() (1 samples, 0.25%)</title><rect x="963.0" y="787.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="966.0" y="798.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.25%)</title><rect x="963.0" y="771.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="966.0" y="782.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (3 samples, 0.76%)</title><rect x="965.9" y="803.0" width="9.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="968.9" y="814.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.25%)</title><rect x="965.9" y="787.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="968.9" y="798.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.25%)</title><rect x="965.9" y="771.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="968.9" y="782.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.25%)</title><rect x="965.9" y="755.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="968.9" y="766.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.25%)</title><rect x="965.9" y="739.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="968.9" y="750.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.25%)</title><rect x="965.9" y="723.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="968.9" y="734.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.25%)</title><rect x="965.9" y="707.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="968.9" y="718.0"></text>
</g>
<g>
<title>State::_sub_Op_LoadP(Node const*) (1 samples, 0.25%)</title><rect x="965.9" y="691.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="968.9" y="702.0"></text>
</g>
<g>
<title>Node::clone() const (2 samples, 0.51%)</title><rect x="968.9" y="787.0" width="6.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="971.9" y="798.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (1 samples, 0.25%)</title><rect x="974.9" y="819.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="977.9" y="830.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (1 samples, 0.25%)</title><rect x="974.9" y="803.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="977.9" y="814.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (4 samples, 1.01%)</title><rect x="977.9" y="819.0" width="11.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="980.9" y="830.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (4 samples, 1.01%)</title><rect x="977.9" y="803.0" width="11.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="980.9" y="814.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.51%)</title><rect x="977.9" y="787.0" width="6.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="980.9" y="798.0"></text>
</g>
<g>
<title>jmpDirNode::is_block_proj() const (1 samples, 0.25%)</title><rect x="980.9" y="771.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="983.9" y="782.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.51%)</title><rect x="983.9" y="787.0" width="5.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="986.9" y="798.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.25%)</title><rect x="986.9" y="771.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="989.9" y="782.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.25%)</title><rect x="986.9" y="755.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="989.9" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (30 samples, 7.59%)</title><rect x="989.8" y="819.0" width="89.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="992.8" y="830.0">PhaseChait..</text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.25%)</title><rect x="992.8" y="803.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="995.8" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (3 samples, 0.76%)</title><rect x="995.8" y="803.0" width="9.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="998.8" y="814.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (3 samples, 0.76%)</title><rect x="995.8" y="787.0" width="9.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="998.8" y="798.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.76%)</title><rect x="995.8" y="771.0" width="9.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="998.8" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (3 samples, 0.76%)</title><rect x="1004.8" y="803.0" width="8.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1007.8" y="814.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.25%)</title><rect x="1010.8" y="787.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1013.8" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::Union(Node const*, Node const*) (1 samples, 0.25%)</title><rect x="1013.7" y="803.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1016.7" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (8 samples, 2.03%)</title><rect x="1016.7" y="803.0" width="23.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1019.7" y="814.0">P..</text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.25%)</title><rect x="1016.7" y="787.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1019.7" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.25%)</title><rect x="1019.7" y="787.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1022.7" y="798.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.25%)</title><rect x="1019.7" y="771.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1022.7" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_initial_block_pressure(Block*, IndexSet*, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;, double) (1 samples, 0.25%)</title><rect x="1022.7" y="787.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1025.7" y="798.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.25%)</title><rect x="1022.7" y="771.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1025.7" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (3 samples, 0.76%)</title><rect x="1025.7" y="787.0" width="9.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1028.7" y="798.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.25%)</title><rect x="1028.7" y="771.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1031.7" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.25%)</title><rect x="1031.7" y="771.0" width="3.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1034.7" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::raise_pressure(Block*, LRG&amp;, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.25%)</title><rect x="1034.7" y="787.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1037.7" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.25%)</title><rect x="1037.6" y="787.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1040.6" y="798.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.25%)</title><rect x="1037.6" y="771.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1040.6" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.179] (3 samples, 0.76%)</title><rect x="1040.6" y="803.0" width="9.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1043.6" y="814.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.25%)</title><rect x="1046.6" y="787.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1049.6" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (5 samples, 1.27%)</title><rect x="1049.6" y="803.0" width="14.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1052.6" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (3 samples, 0.76%)</title><rect x="1055.6" y="787.0" width="8.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1058.6" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (1 samples, 0.25%)</title><rect x="1064.5" y="803.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1067.5" y="814.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.25%)</title><rect x="1067.5" y="803.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1070.5" y="814.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.25%)</title><rect x="1067.5" y="787.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1070.5" y="798.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.51%)</title><rect x="1070.5" y="803.0" width="6.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1073.5" y="814.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.25%)</title><rect x="1073.5" y="787.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1076.5" y="798.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.25%)</title><rect x="1073.5" y="771.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1076.5" y="782.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.25%)</title><rect x="1073.5" y="755.0" width="3.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1076.5" y="766.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.25%)</title><rect x="1076.5" y="803.0" width="3.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1079.5" y="814.0"></text>
</g>
<g>
<title>Compile::Optimize() (23 samples, 5.82%)</title><rect x="1079.5" y="835.0" width="68.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1082.5" y="846.0">Compile..</text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (2 samples, 0.51%)</title><rect x="1079.5" y="819.0" width="5.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1082.5" y="830.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (2 samples, 0.51%)</title><rect x="1079.5" y="803.0" width="5.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1082.5" y="814.0"></text>
</g>
<g>
<title>ConnectionGraph::add_node_to_connection_graph(Node*, Unique_Node_List*) (1 samples, 0.25%)</title><rect x="1079.5" y="787.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1082.5" y="798.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field(Node*, PointsToNode::EscapeState, int) (1 samples, 0.25%)</title><rect x="1079.5" y="771.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1082.5" y="782.0"></text>
</g>
<g>
<title>ConnectionGraph::is_oop_field(Node*, int, bool*) (1 samples, 0.25%)</title><rect x="1079.5" y="755.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1082.5" y="766.0"></text>
</g>
<g>
<title>Node::has_out_with(int, int, int, int) (1 samples, 0.25%)</title><rect x="1079.5" y="739.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1082.5" y="750.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (1 samples, 0.25%)</title><rect x="1082.5" y="787.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1085.5" y="798.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) (1 samples, 0.25%)</title><rect x="1082.5" y="771.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1085.5" y="782.0"></text>
</g>
<g>
<title>ConnectionGraph::add_edge(PointsToNode*, PointsToNode*) [clone .isra.264] (1 samples, 0.25%)</title><rect x="1082.5" y="755.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1085.5" y="766.0"></text>
</g>
<g>
<title>IdealLoopTree::check_safepts(VectorSet&amp;, Node_List&amp;) (1 samples, 0.25%)</title><rect x="1085.4" y="819.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1088.4" y="830.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.25%)</title><rect x="1088.4" y="819.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1091.4" y="830.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.25%)</title><rect x="1088.4" y="803.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1091.4" y="814.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.25%)</title><rect x="1088.4" y="787.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1091.4" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (14 samples, 3.54%)</title><rect x="1091.4" y="819.0" width="41.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1094.4" y="830.0">Pha..</text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.25%)</title><rect x="1091.4" y="803.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1094.4" y="814.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.25%)</title><rect x="1091.4" y="787.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1094.4" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_counted_loop(Node*, IdealLoopTree*&amp;) (1 samples, 0.25%)</title><rect x="1091.4" y="771.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1094.4" y="782.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.25%)</title><rect x="1094.4" y="803.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1097.4" y="814.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.25%)</title><rect x="1094.4" y="787.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1097.4" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::partial_peel(IdealLoopTree*, Node_List&amp;) (1 samples, 0.25%)</title><rect x="1094.4" y="771.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1097.4" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.25%)</title><rect x="1094.4" y="755.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1097.4" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (2 samples, 0.51%)</title><rect x="1097.4" y="803.0" width="6.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1100.4" y="814.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.25%)</title><rect x="1100.4" y="787.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1103.4" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.51%)</title><rect x="1103.4" y="803.0" width="5.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1106.4" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (7 samples, 1.77%)</title><rect x="1109.3" y="803.0" width="21.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1112.3" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (5 samples, 1.27%)</title><rect x="1115.3" y="787.0" width="15.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1118.3" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (3 samples, 0.76%)</title><rect x="1118.3" y="771.0" width="9.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1121.3" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (2 samples, 0.51%)</title><rect x="1118.3" y="755.0" width="6.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1121.3" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.182] (1 samples, 0.25%)</title><rect x="1118.3" y="739.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1121.3" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.25%)</title><rect x="1121.3" y="739.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1124.3" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.182] (1 samples, 0.25%)</title><rect x="1121.3" y="723.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1124.3" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (1 samples, 0.25%)</title><rect x="1124.3" y="755.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1127.3" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.25%)</title><rect x="1127.3" y="771.0" width="3.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1130.3" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.25%)</title><rect x="1130.3" y="803.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1133.3" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.25%)</title><rect x="1130.3" y="787.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1133.3" y="798.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (1 samples, 0.25%)</title><rect x="1133.2" y="819.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1136.2" y="830.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.51%)</title><rect x="1136.2" y="819.0" width="6.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1139.2" y="830.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.51%)</title><rect x="1136.2" y="803.0" width="6.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1139.2" y="814.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.25%)</title><rect x="1136.2" y="787.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1139.2" y="798.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.25%)</title><rect x="1136.2" y="771.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1139.2" y="782.0"></text>
</g>
<g>
<title>BoolNode::Ideal(PhaseGVN*, bool) (1 samples, 0.25%)</title><rect x="1136.2" y="755.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1139.2" y="766.0"></text>
</g>
<g>
<title>LoadNode::Identity(PhaseGVN*) (1 samples, 0.25%)</title><rect x="1139.2" y="787.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1142.2" y="798.0"></text>
</g>
<g>
<title>LoadNode::is_instance_field_load_with_local_phi(Node*) (1 samples, 0.25%)</title><rect x="1139.2" y="771.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1142.2" y="782.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.25%)</title><rect x="1139.2" y="755.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1142.2" y="766.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.25%)</title><rect x="1139.2" y="739.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1142.2" y="750.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.25%)</title><rect x="1139.2" y="723.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1142.2" y="734.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (2 samples, 0.51%)</title><rect x="1142.2" y="819.0" width="6.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1145.2" y="830.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (2 samples, 0.51%)</title><rect x="1142.2" y="803.0" width="6.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1145.2" y="814.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.25%)</title><rect x="1142.2" y="787.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1145.2" y="798.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.25%)</title><rect x="1142.2" y="771.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1145.2" y="782.0"></text>
</g>
<g>
<title>PhaseMacroExpand::initialize_object(AllocateNode*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.25%)</title><rect x="1145.2" y="787.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.2" y="798.0"></text>
</g>
<g>
<title>InitializeNode::complete_stores(Node*, Node*, Node*, long, Node*, PhaseGVN*) (1 samples, 0.25%)</title><rect x="1145.2" y="771.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1148.2" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.25%)</title><rect x="1145.2" y="755.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1148.2" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist0(Node*) (1 samples, 0.25%)</title><rect x="1145.2" y="739.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1148.2" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 2.53%)</title><rect x="1148.2" y="835.0" width="29.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.2" y="846.0">Pa..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 2.53%)</title><rect x="1148.2" y="819.0" width="29.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1151.2" y="830.0">Pa..</text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 2.53%)</title><rect x="1148.2" y="803.0" width="29.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1151.2" y="814.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 2.53%)</title><rect x="1148.2" y="787.0" width="29.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1151.2" y="798.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 2.53%)</title><rect x="1148.2" y="771.0" width="29.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1151.2" y="782.0">Pa..</text>
</g>
<g>
<title>Parse::do_call() (9 samples, 2.28%)</title><rect x="1148.2" y="755.0" width="26.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1151.2" y="766.0">P..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 2.28%)</title><rect x="1148.2" y="739.0" width="26.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1151.2" y="750.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 2.28%)</title><rect x="1148.2" y="723.0" width="26.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1151.2" y="734.0">P..</text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.25%)</title><rect x="1148.2" y="707.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1151.2" y="718.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.25%)</title><rect x="1148.2" y="691.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1151.2" y="702.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.25%)</title><rect x="1148.2" y="675.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 1.77%)</title><rect x="1151.2" y="707.0" width="20.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1154.2" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 1.77%)</title><rect x="1151.2" y="691.0" width="20.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.25%)</title><rect x="1151.2" y="675.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.2" y="686.0"></text>
</g>
<g>
<title>Parse::catch_inline_exceptions(SafePointNode*) (1 samples, 0.25%)</title><rect x="1151.2" y="659.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1154.2" y="670.0"></text>
</g>
<g>
<title>Phase::gen_subtype_check(Node*, Node*, Node**, MergeMemNode*, PhaseGVN*) (1 samples, 0.25%)</title><rect x="1151.2" y="643.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1154.2" y="654.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.25%)</title><rect x="1151.2" y="627.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1154.2" y="638.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.25%)</title><rect x="1151.2" y="611.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1154.2" y="622.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.25%)</title><rect x="1151.2" y="595.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1154.2" y="606.0"></text>
</g>
<g>
<title>TypeKlassPtr::xmeet(Type const*) const (1 samples, 0.25%)</title><rect x="1151.2" y="579.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.2" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 1.52%)</title><rect x="1154.2" y="675.0" width="17.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.2" y="686.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*) (1 samples, 0.25%)</title><rect x="1154.2" y="659.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1157.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 1.27%)</title><rect x="1157.1" y="659.0" width="15.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1160.1" y="670.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.25%)</title><rect x="1157.1" y="643.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1160.1" y="654.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) [clone .part.285] (1 samples, 0.25%)</title><rect x="1157.1" y="627.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.1" y="638.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.25%)</title><rect x="1157.1" y="611.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1160.1" y="622.0"></text>
</g>
<g>
<title>SubNode::Value(PhaseGVN*) const (1 samples, 0.25%)</title><rect x="1157.1" y="595.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1160.1" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 1.01%)</title><rect x="1160.1" y="643.0" width="12.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.1" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 1.01%)</title><rect x="1160.1" y="627.0" width="12.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.1" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 1.01%)</title><rect x="1160.1" y="611.0" width="12.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.1" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 1.01%)</title><rect x="1160.1" y="595.0" width="12.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.1" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 1.01%)</title><rect x="1160.1" y="579.0" width="12.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1163.1" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 1.01%)</title><rect x="1160.1" y="563.0" width="12.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.1" y="574.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.25%)</title><rect x="1160.1" y="547.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.1" y="558.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.25%)</title><rect x="1160.1" y="531.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.1" y="542.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.25%)</title><rect x="1160.1" y="515.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.1" y="526.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.25%)</title><rect x="1160.1" y="499.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.1" y="510.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.25%)</title><rect x="1160.1" y="483.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.1" y="494.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.25%)</title><rect x="1160.1" y="467.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1163.1" y="478.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.25%)</title><rect x="1160.1" y="451.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.1" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.76%)</title><rect x="1163.1" y="547.0" width="9.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1166.1" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.76%)</title><rect x="1163.1" y="531.0" width="9.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.1" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.76%)</title><rect x="1163.1" y="515.0" width="9.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1166.1" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.76%)</title><rect x="1163.1" y="499.0" width="9.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.1" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.76%)</title><rect x="1163.1" y="483.0" width="9.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.1" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.76%)</title><rect x="1163.1" y="467.0" width="9.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.1" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.51%)</title><rect x="1166.1" y="451.0" width="6.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1169.1" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.51%)</title><rect x="1166.1" y="435.0" width="6.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.1" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.51%)</title><rect x="1166.1" y="419.0" width="6.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1169.1" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.51%)</title><rect x="1166.1" y="403.0" width="6.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.1" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.51%)</title><rect x="1166.1" y="387.0" width="6.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.1" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.51%)</title><rect x="1166.1" y="371.0" width="6.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.1" y="382.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.25%)</title><rect x="1166.1" y="355.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.1" y="366.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.25%)</title><rect x="1166.1" y="339.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.1" y="350.0"></text>
</g>
<g>
<title>TypeTuple::make_domain(ciInstanceKlass*, ciSignature*) (1 samples, 0.25%)</title><rect x="1166.1" y="323.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.1" y="334.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.25%)</title><rect x="1166.1" y="307.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.1" y="318.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.25%)</title><rect x="1166.1" y="291.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.1" y="302.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.25%)</title><rect x="1166.1" y="275.0" width="3.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1169.1" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.25%)</title><rect x="1169.1" y="355.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.1" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.25%)</title><rect x="1169.1" y="339.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.1" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.25%)</title><rect x="1169.1" y="323.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.1" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.25%)</title><rect x="1169.1" y="307.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.1" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.25%)</title><rect x="1169.1" y="291.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1172.1" y="302.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.25%)</title><rect x="1169.1" y="275.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.1" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.25%)</title><rect x="1169.1" y="259.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.1" y="270.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.25%)</title><rect x="1169.1" y="243.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.1" y="254.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.25%)</title><rect x="1169.1" y="227.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.1" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.25%)</title><rect x="1169.1" y="211.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.1" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.25%)</title><rect x="1169.1" y="195.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.1" y="206.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.25%)</title><rect x="1169.1" y="179.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1172.1" y="190.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.25%)</title><rect x="1169.1" y="163.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.1" y="174.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.25%)</title><rect x="1169.1" y="147.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.1" y="158.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.25%)</title><rect x="1169.1" y="131.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.1" y="142.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.25%)</title><rect x="1169.1" y="115.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.1" y="126.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.25%)</title><rect x="1169.1" y="99.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.1" y="110.0"></text>
</g>
<g>
<title>IdealKit::end_if() (1 samples, 0.25%)</title><rect x="1169.1" y="83.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.1" y="94.0"></text>
</g>
<g>
<title>IdealKit::goto_(Node*, bool) (1 samples, 0.25%)</title><rect x="1169.1" y="67.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.1" y="78.0"></text>
</g>
<g>
<title>IdealKit::do_memory_merge(Node*, Node*) (1 samples, 0.25%)</title><rect x="1169.1" y="51.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.1" y="62.0"></text>
</g>
<g>
<title>MergeMemNode::iteration_setup(MergeMemNode const*) (1 samples, 0.25%)</title><rect x="1169.1" y="35.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.1" y="46.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.25%)</title><rect x="1172.1" y="707.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.25%)</title><rect x="1175.1" y="755.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.1" y="766.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.25%)</title><rect x="1175.1" y="739.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.1" y="750.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.25%)</title><rect x="1175.1" y="723.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.1" y="734.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.25%)</title><rect x="1175.1" y="707.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1178.1" y="718.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.25%)</title><rect x="1175.1" y="691.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.1" y="702.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.25%)</title><rect x="1175.1" y="675.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1178.1" y="686.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.25%)</title><rect x="1175.1" y="659.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.1" y="670.0"></text>
</g>
<g>
<title>TypeInstPtr::eq(Type const*) const (1 samples, 0.25%)</title><rect x="1175.1" y="643.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.1" y="654.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (3 samples, 0.76%)</title><rect x="1178.1" y="835.0" width="8.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.1" y="846.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (2 samples, 0.51%)</title><rect x="1178.1" y="819.0" width="5.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.1" y="830.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.25%)</title><rect x="1184.0" y="819.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.0" y="830.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.25%)</title><rect x="1187.0" y="867.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.0" y="878.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.25%)</title><rect x="1187.0" y="851.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.0" y="862.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.25%)</title><rect x="1187.0" y="835.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.0" y="846.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.25%)</title><rect x="1187.0" y="819.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.0" y="830.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.25%)</title><rect x="1187.0" y="803.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.0" y="814.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.25%)</title><rect x="1187.0" y="787.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.0" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::register_nmethod(nmethod*) (1 samples, 0.25%)</title><rect x="1187.0" y="771.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.0" y="782.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.25%)</title><rect x="1187.0" y="755.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.0" y="766.0"></text>
</g>
<g>
<title>G1CodeRootSet::add(nmethod*) (1 samples, 0.25%)</title><rect x="1187.0" y="739.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.0" y="750.0"></text>
</g>
</g>
</svg>
