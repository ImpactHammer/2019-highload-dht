<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (435 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>[NIO Selector #1 tid=24723] (17 samples, 3.91%)</title><rect x="10.0" y="883.0" width="46.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="894.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (17 samples, 3.91%)</title><rect x="10.0" y="867.0" width="46.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.23%)</title><rect x="10.0" y="851.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.23%)</title><rect x="10.0" y="835.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.69%)</title><rect x="12.7" y="851.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.69%)</title><rect x="12.7" y="835.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.7" y="846.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.69%)</title><rect x="12.7" y="819.0" width="8.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="15.7" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.69%)</title><rect x="12.7" y="803.0" width="8.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="15.7" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.69%)</title><rect x="12.7" y="787.0" width="8.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="15.7" y="798.0"></text>
</g>
<g>
<title>sys_epoll_wait (3 samples, 0.69%)</title><rect x="12.7" y="771.0" width="8.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="15.7" y="782.0"></text>
</g>
<g>
<title>default_wake_function (1 samples, 0.23%)</title><rect x="12.7" y="755.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="15.7" y="766.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.23%)</title><rect x="12.7" y="739.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="15.7" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (1 samples, 0.23%)</title><rect x="12.7" y="723.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="15.7" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.23%)</title><rect x="12.7" y="707.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="15.7" y="718.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.23%)</title><rect x="12.7" y="691.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="15.7" y="702.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.23%)</title><rect x="12.7" y="675.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="15.7" y="686.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.23%)</title><rect x="12.7" y="659.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="15.7" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.23%)</title><rect x="12.7" y="643.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="15.7" y="654.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.46%)</title><rect x="15.4" y="755.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="18.4" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="15.4" y="739.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="18.4" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (1 samples, 0.23%)</title><rect x="18.1" y="739.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.1" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.23%)</title><rect x="18.1" y="723.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="21.1" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.23%)</title><rect x="18.1" y="707.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="21.1" y="718.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.23%)</title><rect x="18.1" y="691.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="21.1" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.23%)</title><rect x="18.1" y="675.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="21.1" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (13 samples, 2.99%)</title><rect x="20.9" y="851.0" width="35.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.9" y="862.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (13 samples, 2.99%)</title><rect x="20.9" y="835.0" width="35.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.9" y="846.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7 samples, 1.61%)</title><rect x="20.9" y="819.0" width="18.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5 samples, 1.15%)</title><rect x="20.9" y="803.0" width="13.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4 samples, 0.92%)</title><rect x="23.6" y="787.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.6" y="798.0"></text>
</g>
<g>
<title>RequestHandler3_entity.handleRequest (4 samples, 0.92%)</title><rect x="23.6" y="771.0" width="10.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.entity (4 samples, 0.92%)</title><rect x="23.6" y="755.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="26.6" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.23%)</title><rect x="23.6" y="739.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.23%)</title><rect x="23.6" y="723.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="26.6" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.23%)</title><rect x="23.6" y="707.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.23%)</title><rect x="23.6" y="691.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.6" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.23%)</title><rect x="23.6" y="675.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.6" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.23%)</title><rect x="23.6" y="659.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="26.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (3 samples, 0.69%)</title><rect x="26.3" y="739.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (3 samples, 0.69%)</title><rect x="26.3" y="723.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="29.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.69%)</title><rect x="26.3" y="707.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.69%)</title><rect x="26.3" y="691.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="29.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.69%)</title><rect x="26.3" y="675.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.69%)</title><rect x="26.3" y="659.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.69%)</title><rect x="26.3" y="643.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.69%)</title><rect x="26.3" y="627.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.69%)</title><rect x="26.3" y="611.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.69%)</title><rect x="26.3" y="595.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="29.3" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.23%)</title><rect x="26.3" y="579.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="29.3" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.23%)</title><rect x="26.3" y="563.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="29.3" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.46%)</title><rect x="29.0" y="579.0" width="5.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="32.0" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.46%)</title><rect x="29.0" y="563.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="32.0" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.46%)</title><rect x="29.0" y="547.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="32.0" y="558.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.46%)</title><rect x="29.0" y="531.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="32.0" y="542.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.46%)</title><rect x="29.0" y="515.0" width="5.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="32.0" y="526.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.46%)</title><rect x="29.0" y="499.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="32.0" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.46%)</title><rect x="29.0" y="483.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="32.0" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.46%)</title><rect x="29.0" y="467.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="32.0" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.46%)</title><rect x="34.4" y="803.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.46%)</title><rect x="34.4" y="787.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.46%)</title><rect x="34.4" y="771.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.4" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.46%)</title><rect x="34.4" y="755.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 1.38%)</title><rect x="39.8" y="819.0" width="16.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.8" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 1.38%)</title><rect x="39.8" y="803.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.46%)</title><rect x="48.0" y="787.0" width="5.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="51.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.46%)</title><rect x="48.0" y="771.0" width="5.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="51.0" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.23%)</title><rect x="48.0" y="755.0" width="2.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="51.0" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.23%)</title><rect x="48.0" y="739.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="51.0" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.23%)</title><rect x="48.0" y="723.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="51.0" y="734.0"></text>
</g>
<g>
<title>__libc_recv (1 samples, 0.23%)</title><rect x="50.7" y="755.0" width="2.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="53.7" y="766.0"></text>
</g>
<g>
<title>__libc_recv (1 samples, 0.23%)</title><rect x="53.4" y="787.0" width="2.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="56.4" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="53.4" y="771.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="56.4" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="53.4" y="755.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="56.4" y="766.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.23%)</title><rect x="53.4" y="739.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="56.4" y="750.0"></text>
</g>
<g>
<title>default_wake_function (1 samples, 0.23%)</title><rect x="53.4" y="723.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="56.4" y="734.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.23%)</title><rect x="53.4" y="707.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="56.4" y="718.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.23%)</title><rect x="53.4" y="691.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="56.4" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.23%)</title><rect x="53.4" y="675.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="56.4" y="686.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=24747] (17 samples, 3.91%)</title><rect x="56.1" y="883.0" width="46.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="59.1" y="894.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (17 samples, 3.91%)</title><rect x="56.1" y="867.0" width="46.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="59.1" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.92%)</title><rect x="56.1" y="851.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="59.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.92%)</title><rect x="56.1" y="835.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="59.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="58.8" y="819.0" width="2.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="61.8" y="830.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.23%)</title><rect x="58.8" y="803.0" width="2.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="61.8" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.23%)</title><rect x="58.8" y="787.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="61.8" y="798.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.46%)</title><rect x="61.5" y="819.0" width="5.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="64.5" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.46%)</title><rect x="61.5" y="803.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="64.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.46%)</title><rect x="61.5" y="787.0" width="5.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="64.5" y="798.0"></text>
</g>
<g>
<title>sys_epoll_wait (2 samples, 0.46%)</title><rect x="61.5" y="771.0" width="5.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="64.5" y="782.0"></text>
</g>
<g>
<title>default_wake_function (1 samples, 0.23%)</title><rect x="61.5" y="755.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="64.5" y="766.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.23%)</title><rect x="61.5" y="739.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="64.5" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (1 samples, 0.23%)</title><rect x="61.5" y="723.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="64.5" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="61.5" y="707.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="64.5" y="718.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.23%)</title><rect x="64.3" y="755.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="67.3" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (1 samples, 0.23%)</title><rect x="64.3" y="739.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="67.3" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.23%)</title><rect x="64.3" y="723.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="67.3" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.23%)</title><rect x="64.3" y="707.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="67.3" y="718.0"></text>
</g>
<g>
<title>__list_del_entry (1 samples, 0.23%)</title><rect x="64.3" y="691.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="67.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (13 samples, 2.99%)</title><rect x="67.0" y="851.0" width="35.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.0" y="862.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (12 samples, 2.76%)</title><rect x="69.7" y="835.0" width="32.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.7" y="846.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5 samples, 1.15%)</title><rect x="69.7" y="819.0" width="13.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4 samples, 0.92%)</title><rect x="69.7" y="803.0" width="10.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4 samples, 0.92%)</title><rect x="69.7" y="787.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.7" y="798.0"></text>
</g>
<g>
<title>RequestHandler3_entity.handleRequest (4 samples, 0.92%)</title><rect x="69.7" y="771.0" width="10.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.23%)</title><rect x="69.7" y="755.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="72.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.entity (3 samples, 0.69%)</title><rect x="72.4" y="755.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.23%)</title><rect x="72.4" y="739.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.23%)</title><rect x="72.4" y="723.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.23%)</title><rect x="72.4" y="707.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="75.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.23%)</title><rect x="72.4" y="691.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.4" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.23%)</title><rect x="72.4" y="675.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.23%)</title><rect x="72.4" y="659.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.23%)</title><rect x="72.4" y="643.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="75.4" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.23%)</title><rect x="72.4" y="627.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (2 samples, 0.46%)</title><rect x="75.1" y="739.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (2 samples, 0.46%)</title><rect x="75.1" y="723.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.46%)</title><rect x="75.1" y="707.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.46%)</title><rect x="75.1" y="691.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.46%)</title><rect x="75.1" y="675.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.46%)</title><rect x="75.1" y="659.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.46%)</title><rect x="75.1" y="643.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.46%)</title><rect x="75.1" y="627.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="78.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.46%)</title><rect x="75.1" y="611.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.46%)</title><rect x="75.1" y="595.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.1" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.23%)</title><rect x="75.1" y="579.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="78.1" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.23%)</title><rect x="75.1" y="563.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="78.1" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.23%)</title><rect x="77.8" y="579.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="80.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.23%)</title><rect x="80.5" y="803.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.5" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 1.61%)</title><rect x="83.2" y="819.0" width="19.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 1.61%)</title><rect x="83.2" y="803.0" width="19.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.69%)</title><rect x="86.0" y="787.0" width="8.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="89.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.69%)</title><rect x="86.0" y="771.0" width="8.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="89.0" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.69%)</title><rect x="86.0" y="755.0" width="8.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="89.0" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.23%)</title><rect x="86.0" y="739.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="89.0" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.46%)</title><rect x="88.7" y="739.0" width="5.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="91.7" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.23%)</title><rect x="88.7" y="723.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="91.7" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.23%)</title><rect x="91.4" y="723.0" width="2.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="94.4" y="734.0"></text>
</g>
<g>
<title>__libc_recv (3 samples, 0.69%)</title><rect x="94.1" y="787.0" width="8.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="97.1" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.69%)</title><rect x="94.1" y="771.0" width="8.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="97.1" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.69%)</title><rect x="94.1" y="755.0" width="8.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="97.1" y="766.0"></text>
</g>
<g>
<title>sys_epoll_wait (2 samples, 0.46%)</title><rect x="94.1" y="739.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="97.1" y="750.0"></text>
</g>
<g>
<title>default_wake_function (2 samples, 0.46%)</title><rect x="94.1" y="723.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="97.1" y="734.0"></text>
</g>
<g>
<title>SYSC_recvfrom (2 samples, 0.46%)</title><rect x="94.1" y="707.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="97.1" y="718.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.46%)</title><rect x="94.1" y="691.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="97.1" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.46%)</title><rect x="94.1" y="675.0" width="5.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="97.1" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.23%)</title><rect x="94.1" y="659.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="97.1" y="670.0"></text>
</g>
<g>
<title>copy_to_iter (1 samples, 0.23%)</title><rect x="94.1" y="643.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="97.1" y="654.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.23%)</title><rect x="94.1" y="627.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="97.1" y="638.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.23%)</title><rect x="94.1" y="611.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="97.1" y="622.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.23%)</title><rect x="96.8" y="659.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="99.8" y="670.0"></text>
</g>
<g>
<title>sys_recvfrom (1 samples, 0.23%)</title><rect x="99.5" y="739.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="102.5" y="750.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=24696] (52 samples, 11.95%)</title><rect x="102.2" y="883.0" width="141.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="105.2" y="894.0">[NIO Selector #2 t..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (52 samples, 11.95%)</title><rect x="102.2" y="867.0" width="141.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.2" y="878.0">one/nio/server/Sel..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (17 samples, 3.91%)</title><rect x="102.2" y="851.0" width="46.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.2" y="862.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.46%)</title><rect x="102.2" y="835.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.2" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (15 samples, 3.45%)</title><rect x="107.7" y="835.0" width="40.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.7" y="846.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.23%)</title><rect x="110.4" y="819.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="113.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.69%)</title><rect x="113.1" y="819.0" width="8.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="116.1" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.46%)</title><rect x="113.1" y="803.0" width="5.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="116.1" y="814.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.23%)</title><rect x="118.5" y="803.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="121.5" y="814.0"></text>
</g>
<g>
<title>epoll_wait (10 samples, 2.30%)</title><rect x="121.2" y="819.0" width="27.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="124.2" y="830.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (8 samples, 1.84%)</title><rect x="126.6" y="803.0" width="21.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="129.6" y="814.0">e..</text>
</g>
<g>
<title>do_syscall_64 (8 samples, 1.84%)</title><rect x="126.6" y="787.0" width="21.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="129.6" y="798.0">d..</text>
</g>
<g>
<title>sys_epoll_wait (8 samples, 1.84%)</title><rect x="126.6" y="771.0" width="21.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="129.6" y="782.0">s..</text>
</g>
<g>
<title>default_wake_function (7 samples, 1.61%)</title><rect x="129.4" y="755.0" width="18.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="132.4" y="766.0"></text>
</g>
<g>
<title>ep_poll (7 samples, 1.61%)</title><rect x="129.4" y="739.0" width="18.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="132.4" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="129.4" y="723.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="132.4" y="734.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (6 samples, 1.38%)</title><rect x="132.1" y="723.0" width="16.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="135.1" y="734.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.23%)</title><rect x="132.1" y="707.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="135.1" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 1.15%)</title><rect x="134.8" y="707.0" width="13.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="137.8" y="718.0"></text>
</g>
<g>
<title>schedule (5 samples, 1.15%)</title><rect x="134.8" y="691.0" width="13.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="137.8" y="702.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 1.15%)</title><rect x="134.8" y="675.0" width="13.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="137.8" y="686.0"></text>
</g>
<g>
<title>__schedule (5 samples, 1.15%)</title><rect x="134.8" y="659.0" width="13.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="137.8" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 1.15%)</title><rect x="134.8" y="643.0" width="13.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="137.8" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (35 samples, 8.05%)</title><rect x="148.3" y="851.0" width="95.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="151.3" y="862.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (35 samples, 8.05%)</title><rect x="148.3" y="835.0" width="95.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.3" y="846.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (19 samples, 4.37%)</title><rect x="151.1" y="819.0" width="51.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.1" y="830.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (16 samples, 3.68%)</title><rect x="151.1" y="803.0" width="43.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.1" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (16 samples, 3.68%)</title><rect x="151.1" y="787.0" width="43.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.1" y="798.0">one/..</text>
</g>
<g>
<title>RequestHandler3_entity.handleRequest (15 samples, 3.45%)</title><rect x="151.1" y="771.0" width="40.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.1" y="782.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.23%)</title><rect x="151.1" y="755.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.23%)</title><rect x="151.1" y="739.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.entity (14 samples, 3.22%)</title><rect x="153.8" y="755.0" width="37.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="156.8" y="766.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.23%)</title><rect x="153.8" y="739.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.23%)</title><rect x="153.8" y="723.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (4 samples, 0.92%)</title><rect x="156.5" y="739.0" width="10.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (4 samples, 0.92%)</title><rect x="156.5" y="723.0" width="10.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="159.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.92%)</title><rect x="156.5" y="707.0" width="10.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="159.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.92%)</title><rect x="156.5" y="691.0" width="10.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.92%)</title><rect x="156.5" y="675.0" width="10.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.23%)</title><rect x="156.5" y="659.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.23%)</title><rect x="156.5" y="643.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="159.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.23%)</title><rect x="156.5" y="627.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="159.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.69%)</title><rect x="159.2" y="659.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.69%)</title><rect x="159.2" y="643.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.69%)</title><rect x="159.2" y="627.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="162.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.69%)</title><rect x="159.2" y="611.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.69%)</title><rect x="159.2" y="595.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.2" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.23%)</title><rect x="159.2" y="579.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="162.2" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.23%)</title><rect x="159.2" y="563.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="162.2" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.46%)</title><rect x="161.9" y="579.0" width="5.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="164.9" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.46%)</title><rect x="161.9" y="563.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="164.9" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.46%)</title><rect x="161.9" y="547.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="164.9" y="558.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.46%)</title><rect x="161.9" y="531.0" width="5.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="164.9" y="542.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.46%)</title><rect x="161.9" y="515.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="164.9" y="526.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.46%)</title><rect x="161.9" y="499.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="164.9" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.46%)</title><rect x="161.9" y="483.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="164.9" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.46%)</title><rect x="161.9" y="467.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="164.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (9 samples, 2.07%)</title><rect x="167.3" y="739.0" width="24.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="170.3" y="750.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 2.07%)</title><rect x="167.3" y="723.0" width="24.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.3" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 2.07%)</title><rect x="167.3" y="707.0" width="24.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="170.3" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 2.07%)</title><rect x="167.3" y="691.0" width="24.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="170.3" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.23%)</title><rect x="167.3" y="675.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="170.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.23%)</title><rect x="167.3" y="659.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.23%)</title><rect x="167.3" y="643.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 1.84%)</title><rect x="170.0" y="675.0" width="21.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="173.0" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 1.84%)</title><rect x="170.0" y="659.0" width="21.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.0" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 1.84%)</title><rect x="170.0" y="643.0" width="21.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.0" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 1.84%)</title><rect x="170.0" y="627.0" width="21.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.0" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 1.84%)</title><rect x="170.0" y="611.0" width="21.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="173.0" y="622.0">j..</text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 1.84%)</title><rect x="170.0" y="595.0" width="21.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="173.0" y="606.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (7 samples, 1.61%)</title><rect x="172.8" y="579.0" width="18.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="175.8" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.61%)</title><rect x="172.8" y="563.0" width="18.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="175.8" y="574.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 1.61%)</title><rect x="172.8" y="547.0" width="18.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="175.8" y="558.0"></text>
</g>
<g>
<title>do_futex (7 samples, 1.61%)</title><rect x="172.8" y="531.0" width="18.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="175.8" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.23%)</title><rect x="172.8" y="515.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="175.8" y="526.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 1.38%)</title><rect x="175.5" y="515.0" width="16.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="178.5" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 1.38%)</title><rect x="175.5" y="499.0" width="16.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="178.5" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 1.38%)</title><rect x="175.5" y="483.0" width="16.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="178.5" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.23%)</title><rect x="191.7" y="771.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="194.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.23%)</title><rect x="191.7" y="755.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="194.7" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.23%)</title><rect x="191.7" y="739.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="194.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.69%)</title><rect x="194.5" y="803.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.46%)</title><rect x="194.5" y="787.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="197.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.23%)</title><rect x="197.2" y="771.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="200.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.23%)</title><rect x="197.2" y="755.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="200.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.23%)</title><rect x="197.2" y="739.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="200.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.23%)</title><rect x="199.9" y="787.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="202.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.23%)</title><rect x="199.9" y="771.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="202.9" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (15 samples, 3.45%)</title><rect x="202.6" y="819.0" width="40.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="205.6" y="830.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (15 samples, 3.45%)</title><rect x="202.6" y="803.0" width="40.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="205.6" y="814.0">one..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.69%)</title><rect x="210.7" y="787.0" width="8.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="213.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.69%)</title><rect x="210.7" y="771.0" width="8.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="213.7" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.46%)</title><rect x="210.7" y="755.0" width="5.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="213.7" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.23%)</title><rect x="210.7" y="739.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="213.7" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.23%)</title><rect x="213.4" y="739.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="216.4" y="750.0"></text>
</g>
<g>
<title>__libc_recv (1 samples, 0.23%)</title><rect x="216.2" y="755.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="219.2" y="766.0"></text>
</g>
<g>
<title>__libc_recv (8 samples, 1.84%)</title><rect x="218.9" y="787.0" width="21.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="221.9" y="798.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (6 samples, 1.38%)</title><rect x="224.3" y="771.0" width="16.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="227.3" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.38%)</title><rect x="224.3" y="755.0" width="16.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="227.3" y="766.0"></text>
</g>
<g>
<title>sys_epoll_wait (4 samples, 0.92%)</title><rect x="229.7" y="739.0" width="10.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="232.7" y="750.0"></text>
</g>
<g>
<title>default_wake_function (4 samples, 0.92%)</title><rect x="229.7" y="723.0" width="10.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="232.7" y="734.0"></text>
</g>
<g>
<title>SYSC_recvfrom (4 samples, 0.92%)</title><rect x="229.7" y="707.0" width="10.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="232.7" y="718.0"></text>
</g>
<g>
<title>fput (1 samples, 0.23%)</title><rect x="229.7" y="691.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="232.7" y="702.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.46%)</title><rect x="232.4" y="691.0" width="5.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="235.4" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.46%)</title><rect x="232.4" y="675.0" width="5.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="235.4" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.23%)</title><rect x="235.1" y="659.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="238.1" y="670.0"></text>
</g>
<g>
<title>copy_to_iter (1 samples, 0.23%)</title><rect x="235.1" y="643.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="238.1" y="654.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.23%)</title><rect x="235.1" y="627.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="238.1" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.23%)</title><rect x="237.9" y="691.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="240.9" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.23%)</title><rect x="237.9" y="675.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="240.9" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.23%)</title><rect x="240.6" y="787.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="243.6" y="798.0"></text>
</g>
<g>
<title>[worker tid=24773] (45 samples, 10.34%)</title><rect x="243.3" y="883.0" width="122.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="246.3" y="894.0">[worker tid=247..</text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.46%)</title><rect x="243.3" y="867.0" width="5.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="246.3" y="878.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (2 samples, 0.46%)</title><rect x="243.3" y="851.0" width="5.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="246.3" y="862.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (2 samples, 0.46%)</title><rect x="243.3" y="835.0" width="5.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="246.3" y="846.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="243.3" y="819.0" width="5.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="246.3" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="243.3" y="803.0" width="5.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="246.3" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="243.3" y="787.0" width="5.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="246.3" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2 samples, 0.46%)</title><rect x="243.3" y="771.0" width="5.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="246.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.46%)</title><rect x="243.3" y="755.0" width="5.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="246.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.46%)</title><rect x="243.3" y="739.0" width="5.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="246.3" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.46%)</title><rect x="243.3" y="723.0" width="5.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="246.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="243.3" y="707.0" width="5.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="246.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.46%)</title><rect x="243.3" y="691.0" width="5.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="246.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.46%)</title><rect x="243.3" y="675.0" width="5.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="246.3" y="686.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.46%)</title><rect x="243.3" y="659.0" width="5.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="246.3" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (2 samples, 0.46%)</title><rect x="243.3" y="643.0" width="5.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="246.3" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (2 samples, 0.46%)</title><rect x="243.3" y="627.0" width="5.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="246.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.46%)</title><rect x="243.3" y="611.0" width="5.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="246.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.46%)</title><rect x="243.3" y="595.0" width="5.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="246.3" y="606.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.46%)</title><rect x="243.3" y="579.0" width="5.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="246.3" y="590.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.46%)</title><rect x="243.3" y="563.0" width="5.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="246.3" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.46%)</title><rect x="243.3" y="547.0" width="5.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="246.3" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.46%)</title><rect x="243.3" y="531.0" width="5.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="246.3" y="542.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.23%)</title><rect x="246.0" y="515.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="249.0" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (43 samples, 9.89%)</title><rect x="248.7" y="867.0" width="116.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="251.7" y="878.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (43 samples, 9.89%)</title><rect x="248.7" y="851.0" width="116.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="251.7" y="862.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (43 samples, 9.89%)</title><rect x="248.7" y="835.0" width="116.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.7" y="846.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.23%)</title><rect x="248.7" y="819.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.23%)</title><rect x="248.7" y="803.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (1 samples, 0.23%)</title><rect x="248.7" y="787.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="251.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (1 samples, 0.23%)</title><rect x="248.7" y="771.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="251.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.46%)</title><rect x="251.4" y="819.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="254.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.46%)</title><rect x="251.4" y="803.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="254.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.46%)</title><rect x="251.4" y="787.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.46%)</title><rect x="251.4" y="771.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="254.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.46%)</title><rect x="251.4" y="755.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="254.4" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.46%)</title><rect x="251.4" y="739.0" width="5.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="254.4" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.23%)</title><rect x="251.4" y="723.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="254.4" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.23%)</title><rect x="254.1" y="723.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="257.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (40 samples, 9.20%)</title><rect x="256.9" y="819.0" width="108.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="259.9" y="830.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (40 samples, 9.20%)</title><rect x="256.9" y="803.0" width="108.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.9" y="814.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (11 samples, 2.53%)</title><rect x="256.9" y="787.0" width="29.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.9" y="798.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (11 samples, 2.53%)</title><rect x="256.9" y="771.0" width="29.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="259.9" y="782.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.23%)</title><rect x="256.9" y="755.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="259.9" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 2.30%)</title><rect x="259.6" y="755.0" width="27.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.6" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 2.30%)</title><rect x="259.6" y="739.0" width="27.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.6" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10 samples, 2.30%)</title><rect x="259.6" y="723.0" width="27.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="262.6" y="734.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (10 samples, 2.30%)</title><rect x="259.6" y="707.0" width="27.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="262.6" y="718.0">o..</text>
</g>
<g>
<title>__send (10 samples, 2.30%)</title><rect x="259.6" y="691.0" width="27.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="262.6" y="702.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (10 samples, 2.30%)</title><rect x="259.6" y="675.0" width="27.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="262.6" y="686.0">e..</text>
</g>
<g>
<title>do_syscall_64 (10 samples, 2.30%)</title><rect x="259.6" y="659.0" width="27.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="262.6" y="670.0">d..</text>
</g>
<g>
<title>sys_setsockopt (5 samples, 1.15%)</title><rect x="259.6" y="643.0" width="13.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="262.6" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (5 samples, 1.15%)</title><rect x="259.6" y="627.0" width="13.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="262.6" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (5 samples, 1.15%)</title><rect x="259.6" y="611.0" width="13.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="262.6" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (5 samples, 1.15%)</title><rect x="259.6" y="595.0" width="13.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="262.6" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (5 samples, 1.15%)</title><rect x="259.6" y="579.0" width="13.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="262.6" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (5 samples, 1.15%)</title><rect x="259.6" y="563.0" width="13.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="262.6" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (5 samples, 1.15%)</title><rect x="259.6" y="547.0" width="13.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="262.6" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.92%)</title><rect x="262.3" y="531.0" width="10.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="265.3" y="542.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.92%)</title><rect x="262.3" y="515.0" width="10.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="265.3" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.92%)</title><rect x="262.3" y="499.0" width="10.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="265.3" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.92%)</title><rect x="262.3" y="483.0" width="10.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="265.3" y="494.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.92%)</title><rect x="262.3" y="467.0" width="10.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="265.3" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.92%)</title><rect x="262.3" y="451.0" width="10.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="265.3" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.92%)</title><rect x="262.3" y="435.0" width="10.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="265.3" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.18 (4 samples, 0.92%)</title><rect x="262.3" y="419.0" width="10.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="265.3" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.69%)</title><rect x="265.0" y="403.0" width="8.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="268.0" y="414.0"></text>
</g>
<g>
<title>__do_softirq (3 samples, 0.69%)</title><rect x="265.0" y="387.0" width="8.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="268.0" y="398.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.69%)</title><rect x="265.0" y="371.0" width="8.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="268.0" y="382.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.46%)</title><rect x="267.7" y="355.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="270.7" y="366.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="270.4" y="339.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="273.4" y="350.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.23%)</title><rect x="270.4" y="323.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="273.4" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="270.4" y="307.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="273.4" y="318.0"></text>
</g>
<g>
<title>update_curr (1 samples, 0.23%)</title><rect x="270.4" y="291.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="273.4" y="302.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="270.4" y="275.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="273.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="270.4" y="259.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="273.4" y="270.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.23%)</title><rect x="270.4" y="243.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="273.4" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="270.4" y="227.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="273.4" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="270.4" y="211.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="273.4" y="222.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.23%)</title><rect x="270.4" y="195.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="273.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="270.4" y="179.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="273.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="270.4" y="163.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="273.4" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="270.4" y="147.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="273.4" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="270.4" y="131.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="273.4" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.23%)</title><rect x="270.4" y="115.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="273.4" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.23%)</title><rect x="270.4" y="99.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="273.4" y="110.0"></text>
</g>
<g>
<title>sys_write (5 samples, 1.15%)</title><rect x="273.1" y="643.0" width="13.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="276.1" y="654.0"></text>
</g>
<g>
<title>vfs_write (5 samples, 1.15%)</title><rect x="273.1" y="627.0" width="13.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="276.1" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (5 samples, 1.15%)</title><rect x="273.1" y="611.0" width="13.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="276.1" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (4 samples, 0.92%)</title><rect x="273.1" y="595.0" width="10.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="276.1" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 0.92%)</title><rect x="273.1" y="579.0" width="10.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="276.1" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.46%)</title><rect x="275.8" y="563.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="278.8" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.46%)</title><rect x="275.8" y="547.0" width="5.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="278.8" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.46%)</title><rect x="275.8" y="531.0" width="5.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="278.8" y="542.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.23%)</title><rect x="275.8" y="515.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="278.8" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.23%)</title><rect x="275.8" y="499.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="278.8" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.23%)</title><rect x="275.8" y="483.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="278.8" y="494.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.23%)</title><rect x="275.8" y="467.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="278.8" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.23%)</title><rect x="275.8" y="451.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="278.8" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.23%)</title><rect x="275.8" y="435.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="278.8" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.23%)</title><rect x="275.8" y="419.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="278.8" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.23%)</title><rect x="275.8" y="403.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="278.8" y="414.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.23%)</title><rect x="275.8" y="387.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="278.8" y="398.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.23%)</title><rect x="275.8" y="371.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="278.8" y="382.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.23%)</title><rect x="275.8" y="355.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="278.8" y="366.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="275.8" y="339.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="278.8" y="350.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.23%)</title><rect x="275.8" y="323.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="278.8" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="275.8" y="307.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="278.8" y="318.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="275.8" y="291.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="278.8" y="302.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="275.8" y="275.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="278.8" y="286.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.23%)</title><rect x="275.8" y="259.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="278.8" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="275.8" y="243.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="278.8" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="275.8" y="227.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="278.8" y="238.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.23%)</title><rect x="275.8" y="211.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="278.8" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="275.8" y="195.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="278.8" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="275.8" y="179.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="278.8" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="275.8" y="163.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="278.8" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="275.8" y="147.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="278.8" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.23%)</title><rect x="275.8" y="131.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="278.8" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.23%)</title><rect x="275.8" y="115.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="278.8" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="275.8" y="99.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="278.8" y="110.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.23%)</title><rect x="278.6" y="515.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="281.6" y="526.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.23%)</title><rect x="281.3" y="563.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="284.3" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.23%)</title><rect x="284.0" y="595.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="287.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (15 samples, 3.45%)</title><rect x="286.7" y="787.0" width="40.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.7" y="798.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (15 samples, 3.45%)</title><rect x="286.7" y="771.0" width="40.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.7" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (15 samples, 3.45%)</title><rect x="286.7" y="755.0" width="40.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.7" y="766.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (15 samples, 3.45%)</title><rect x="286.7" y="739.0" width="40.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.7" y="750.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (15 samples, 3.45%)</title><rect x="286.7" y="723.0" width="40.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.7" y="734.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (15 samples, 3.45%)</title><rect x="286.7" y="707.0" width="40.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.7" y="718.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (9 samples, 2.07%)</title><rect x="286.7" y="691.0" width="24.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="289.7" y="702.0">J..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (9 samples, 2.07%)</title><rect x="286.7" y="675.0" width="24.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="289.7" y="686.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 2.07%)</title><rect x="286.7" y="659.0" width="24.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="289.7" y="670.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 2.07%)</title><rect x="286.7" y="643.0" width="24.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="289.7" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 1.84%)</title><rect x="286.7" y="627.0" width="21.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="289.7" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (8 samples, 1.84%)</title><rect x="286.7" y="611.0" width="21.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="289.7" y="622.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (8 samples, 1.84%)</title><rect x="286.7" y="595.0" width="21.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="289.7" y="606.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (4 samples, 0.92%)</title><rect x="289.4" y="579.0" width="10.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="292.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (4 samples, 0.92%)</title><rect x="289.4" y="563.0" width="10.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="292.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (4 samples, 0.92%)</title><rect x="289.4" y="547.0" width="10.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="292.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (4 samples, 0.92%)</title><rect x="289.4" y="531.0" width="10.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="292.4" y="542.0"></text>
</g>
<g>
<title>_init (1 samples, 0.23%)</title><rect x="289.4" y="515.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="292.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (3 samples, 0.69%)</title><rect x="292.1" y="515.0" width="8.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="295.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.46%)</title><rect x="294.8" y="499.0" width="5.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="297.8" y="510.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (2 samples, 0.46%)</title><rect x="294.8" y="483.0" width="5.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="297.8" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.46%)</title><rect x="294.8" y="467.0" width="5.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="297.8" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.46%)</title><rect x="294.8" y="451.0" width="5.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="297.8" y="462.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.46%)</title><rect x="294.8" y="435.0" width="5.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="297.8" y="446.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.46%)</title><rect x="294.8" y="419.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="297.8" y="430.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.46%)</title><rect x="294.8" y="403.0" width="5.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="297.8" y="414.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.46%)</title><rect x="294.8" y="387.0" width="5.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="297.8" y="398.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (2 samples, 0.46%)</title><rect x="294.8" y="371.0" width="5.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="297.8" y="382.0"></text>
</g>
<g>
<title>__generic_file_write_iter (2 samples, 0.46%)</title><rect x="294.8" y="355.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="297.8" y="366.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.23%)</title><rect x="294.8" y="339.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="297.8" y="350.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.23%)</title><rect x="294.8" y="323.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="297.8" y="334.0"></text>
</g>
<g>
<title>ext4_da_write_begin	[ext4] (1 samples, 0.23%)</title><rect x="294.8" y="307.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="297.8" y="318.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.23%)</title><rect x="294.8" y="291.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="297.8" y="302.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.23%)</title><rect x="294.8" y="275.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="297.8" y="286.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.23%)</title><rect x="297.5" y="339.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="300.5" y="350.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.23%)</title><rect x="297.5" y="323.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="300.5" y="334.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.23%)</title><rect x="297.5" y="307.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="300.5" y="318.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.23%)</title><rect x="297.5" y="291.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="300.5" y="302.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.23%)</title><rect x="297.5" y="275.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="300.5" y="286.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="297.5" y="259.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="300.5" y="270.0"></text>
</g>
<g>
<title>jbd2__journal_start	[jbd2] (1 samples, 0.23%)</title><rect x="297.5" y="243.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="300.5" y="254.0"></text>
</g>
<g>
<title>start_this_handle	[jbd2] (1 samples, 0.23%)</title><rect x="297.5" y="227.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="300.5" y="238.0"></text>
</g>
<g>
<title>add_transaction_credits	[jbd2] (1 samples, 0.23%)</title><rect x="297.5" y="211.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="300.5" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (3 samples, 0.69%)</title><rect x="300.3" y="579.0" width="8.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="303.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.69%)</title><rect x="300.3" y="563.0" width="8.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="303.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.69%)</title><rect x="300.3" y="547.0" width="8.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="303.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.69%)</title><rect x="300.3" y="531.0" width="8.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="303.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (3 samples, 0.69%)</title><rect x="300.3" y="515.0" width="8.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="303.3" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.69%)</title><rect x="300.3" y="499.0" width="8.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="303.3" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (3 samples, 0.69%)</title><rect x="300.3" y="483.0" width="8.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="303.3" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (3 samples, 0.69%)</title><rect x="300.3" y="467.0" width="8.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="303.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.69%)</title><rect x="300.3" y="451.0" width="8.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="303.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.69%)</title><rect x="300.3" y="435.0" width="8.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="303.3" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.46%)</title><rect x="300.3" y="419.0" width="5.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="303.3" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.46%)</title><rect x="300.3" y="403.0" width="5.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="303.3" y="414.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.23%)</title><rect x="300.3" y="387.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="303.3" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="303.0" y="387.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="306.0" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="303.0" y="371.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="306.0" y="382.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="303.0" y="355.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="306.0" y="366.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.23%)</title><rect x="305.7" y="419.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="308.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="308.4" y="627.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="311.4" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (6 samples, 1.38%)</title><rect x="311.1" y="691.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.1" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (6 samples, 1.38%)</title><rect x="311.1" y="675.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="314.1" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (5 samples, 1.15%)</title><rect x="311.1" y="659.0" width="13.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="314.1" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (5 samples, 1.15%)</title><rect x="311.1" y="643.0" width="13.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="314.1" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 0.92%)</title><rect x="313.8" y="627.0" width="10.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="316.8" y="638.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (3 samples, 0.69%)</title><rect x="316.5" y="611.0" width="8.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="319.5" y="622.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.46%)</title><rect x="316.5" y="595.0" width="5.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="319.5" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.46%)</title><rect x="316.5" y="579.0" width="5.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="319.5" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.46%)</title><rect x="316.5" y="563.0" width="5.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="319.5" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.46%)</title><rect x="316.5" y="547.0" width="5.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="319.5" y="558.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.23%)</title><rect x="319.2" y="531.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="322.2" y="542.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.23%)</title><rect x="322.0" y="595.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="325.0" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.23%)</title><rect x="322.0" y="579.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="325.0" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (1 samples, 0.23%)</title><rect x="324.7" y="659.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="327.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.23%)</title><rect x="324.7" y="643.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="327.7" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.23%)</title><rect x="324.7" y="627.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="327.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.act (14 samples, 3.22%)</title><rect x="327.4" y="787.0" width="38.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="330.4" y="798.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.lambda$entity$1 (14 samples, 3.22%)</title><rect x="327.4" y="771.0" width="38.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.4" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.proxy (14 samples, 3.22%)</title><rect x="327.4" y="755.0" width="38.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.4" y="766.0">ru/..</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.23%)</title><rect x="327.4" y="739.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.4" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.23%)</title><rect x="327.4" y="723.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.23%)</title><rect x="327.4" y="707.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.23%)</title><rect x="327.4" y="691.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (13 samples, 2.99%)</title><rect x="330.1" y="739.0" width="35.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.1" y="750.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (13 samples, 2.99%)</title><rect x="330.1" y="723.0" width="35.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.1" y="734.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (4 samples, 0.92%)</title><rect x="330.1" y="707.0" width="10.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="333.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.92%)</title><rect x="330.1" y="691.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="333.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.46%)</title><rect x="330.1" y="675.0" width="5.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="333.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.46%)</title><rect x="330.1" y="659.0" width="5.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="333.1" y="670.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.46%)</title><rect x="330.1" y="643.0" width="5.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="333.1" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.23%)</title><rect x="330.1" y="627.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="333.1" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.23%)</title><rect x="332.8" y="627.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="335.8" y="638.0"></text>
</g>
<g>
<title>__libc_recv (1 samples, 0.23%)</title><rect x="335.5" y="675.0" width="2.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="338.5" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="335.5" y="659.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="338.5" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="335.5" y="643.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="338.5" y="654.0"></text>
</g>
<g>
<title>sys_setsockopt (1 samples, 0.23%)</title><rect x="335.5" y="627.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="338.5" y="638.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.23%)</title><rect x="335.5" y="611.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="338.5" y="622.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.23%)</title><rect x="335.5" y="595.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="338.5" y="606.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.23%)</title><rect x="335.5" y="579.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="338.5" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.23%)</title><rect x="335.5" y="563.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="338.5" y="574.0"></text>
</g>
<g>
<title>tcp_prequeue_process (1 samples, 0.23%)</title><rect x="335.5" y="547.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="338.5" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="335.5" y="531.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="338.5" y="542.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.23%)</title><rect x="335.5" y="515.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="338.5" y="526.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.23%)</title><rect x="338.2" y="675.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="341.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.23%)</title><rect x="340.9" y="707.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (1 samples, 0.23%)</title><rect x="343.7" y="707.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="346.7" y="718.0"></text>
</g>
<g>
<title>__GI___setsockopt (1 samples, 0.23%)</title><rect x="343.7" y="691.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="346.7" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="343.7" y="675.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="346.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="343.7" y="659.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="346.7" y="670.0"></text>
</g>
<g>
<title>sys_setsockopt (1 samples, 0.23%)</title><rect x="343.7" y="643.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="346.7" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.23%)</title><rect x="343.7" y="627.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="346.7" y="638.0"></text>
</g>
<g>
<title>__get_user_4 (1 samples, 0.23%)</title><rect x="343.7" y="611.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="346.7" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (7 samples, 1.61%)</title><rect x="346.4" y="707.0" width="19.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="349.4" y="718.0"></text>
</g>
<g>
<title>__send (7 samples, 1.61%)</title><rect x="346.4" y="691.0" width="19.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="349.4" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (7 samples, 1.61%)</title><rect x="346.4" y="675.0" width="19.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="349.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.61%)</title><rect x="346.4" y="659.0" width="19.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="349.4" y="670.0"></text>
</g>
<g>
<title>sys_setsockopt (7 samples, 1.61%)</title><rect x="346.4" y="643.0" width="19.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="349.4" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (7 samples, 1.61%)</title><rect x="346.4" y="627.0" width="19.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="349.4" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (7 samples, 1.61%)</title><rect x="346.4" y="611.0" width="19.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="349.4" y="622.0"></text>
</g>
<g>
<title>fput (1 samples, 0.23%)</title><rect x="346.4" y="595.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="349.4" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (6 samples, 1.38%)</title><rect x="349.1" y="595.0" width="16.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="352.1" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (6 samples, 1.38%)</title><rect x="349.1" y="579.0" width="16.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="352.1" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (5 samples, 1.15%)</title><rect x="349.1" y="563.0" width="13.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="352.1" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (5 samples, 1.15%)</title><rect x="349.1" y="547.0" width="13.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="352.1" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 1.15%)</title><rect x="349.1" y="531.0" width="13.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="352.1" y="542.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.92%)</title><rect x="349.1" y="515.0" width="10.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="352.1" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.92%)</title><rect x="349.1" y="499.0" width="10.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="352.1" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.92%)</title><rect x="349.1" y="483.0" width="10.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="352.1" y="494.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.92%)</title><rect x="349.1" y="467.0" width="10.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="352.1" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.92%)</title><rect x="349.1" y="451.0" width="10.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="352.1" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.92%)</title><rect x="349.1" y="435.0" width="10.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="352.1" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.18 (4 samples, 0.92%)</title><rect x="349.1" y="419.0" width="10.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="352.1" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.92%)</title><rect x="349.1" y="403.0" width="10.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="352.1" y="414.0"></text>
</g>
<g>
<title>__do_softirq (4 samples, 0.92%)</title><rect x="349.1" y="387.0" width="10.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="352.1" y="398.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.69%)</title><rect x="351.8" y="371.0" width="8.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="354.8" y="382.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.69%)</title><rect x="351.8" y="355.0" width="8.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="354.8" y="366.0"></text>
</g>
<g>
<title>delayed_work_timer_fn (1 samples, 0.23%)</title><rect x="354.5" y="339.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="357.5" y="350.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.23%)</title><rect x="354.5" y="323.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="357.5" y="334.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.23%)</title><rect x="354.5" y="307.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="357.5" y="318.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="354.5" y="291.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="357.5" y="302.0"></text>
</g>
<g>
<title>__queue_work (1 samples, 0.23%)</title><rect x="354.5" y="275.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="357.5" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="354.5" y="259.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="357.5" y="270.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.23%)</title><rect x="354.5" y="243.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="357.5" y="254.0"></text>
</g>
<g>
<title>ttwu_do_wakeup (1 samples, 0.23%)</title><rect x="354.5" y="227.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="357.5" y="238.0"></text>
</g>
<g>
<title>check_preempt_curr (1 samples, 0.23%)</title><rect x="354.5" y="211.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="357.5" y="222.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="354.5" y="195.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="357.5" y="206.0"></text>
</g>
<g>
<title>check_preempt_wakeup (1 samples, 0.23%)</title><rect x="354.5" y="179.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="357.5" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="354.5" y="163.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="357.5" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="354.5" y="147.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="357.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="354.5" y="131.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="357.5" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="354.5" y="115.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="357.5" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="354.5" y="99.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="357.5" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="354.5" y="83.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="357.5" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.23%)</title><rect x="354.5" y="67.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="357.5" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.23%)</title><rect x="354.5" y="51.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="357.5" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="354.5" y="35.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="357.5" y="46.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="357.2" y="339.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="360.2" y="350.0"></text>
</g>
<g>
<title>check_preempt_curr (1 samples, 0.23%)</title><rect x="357.2" y="323.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="360.2" y="334.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.23%)</title><rect x="357.2" y="307.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="360.2" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="357.2" y="291.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="360.2" y="302.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="357.2" y="275.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="360.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="357.2" y="259.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="360.2" y="270.0"></text>
</g>
<g>
<title>_nv020037rm	[nvidia] (1 samples, 0.23%)</title><rect x="357.2" y="243.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="360.2" y="254.0"></text>
</g>
<g>
<title>_nv031929rm	[nvidia] (1 samples, 0.23%)</title><rect x="357.2" y="227.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="360.2" y="238.0"></text>
</g>
<g>
<title>os_acquire_spinlock	[nvidia] (1 samples, 0.23%)</title><rect x="357.2" y="211.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="360.2" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="357.2" y="195.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="360.2" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="357.2" y="179.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="360.2" y="190.0"></text>
</g>
<g>
<title>swiotlb_tbl_map_single (1 samples, 0.23%)</title><rect x="357.2" y="163.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="360.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="357.2" y="147.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="360.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="357.2" y="131.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="360.2" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="357.2" y="115.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="360.2" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="357.2" y="99.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="360.2" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.23%)</title><rect x="357.2" y="83.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="360.2" y="94.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.23%)</title><rect x="357.2" y="67.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="360.2" y="78.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.23%)</title><rect x="359.9" y="515.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="362.9" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.23%)</title><rect x="359.9" y="499.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="362.9" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.23%)</title><rect x="359.9" y="483.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="362.9" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.23%)</title><rect x="362.6" y="563.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="365.6" y="574.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.23%)</title><rect x="362.6" y="547.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="365.6" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.23%)</title><rect x="362.6" y="531.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="365.6" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.23%)</title><rect x="362.6" y="515.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="365.6" y="526.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (1 samples, 0.23%)</title><rect x="362.6" y="499.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="365.6" y="510.0"></text>
</g>
<g>
<title>[worker tid=24774] (21 samples, 4.83%)</title><rect x="365.4" y="883.0" width="56.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="368.4" y="894.0">[worke..</text>
</g>
<g>
<title>java/lang/Thread.run (21 samples, 4.83%)</title><rect x="365.4" y="867.0" width="56.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="368.4" y="878.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (21 samples, 4.83%)</title><rect x="365.4" y="851.0" width="56.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.4" y="862.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (21 samples, 4.83%)</title><rect x="365.4" y="835.0" width="56.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.4" y="846.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.69%)</title><rect x="365.4" y="819.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3 samples, 0.69%)</title><rect x="365.4" y="803.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.69%)</title><rect x="365.4" y="787.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.69%)</title><rect x="365.4" y="771.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.69%)</title><rect x="365.4" y="755.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.4" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.69%)</title><rect x="365.4" y="739.0" width="8.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="368.4" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.23%)</title><rect x="365.4" y="723.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="368.4" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.23%)</title><rect x="368.1" y="723.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="371.1" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="368.1" y="707.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="371.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="368.1" y="691.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="371.1" y="702.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="368.1" y="675.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="371.1" y="686.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="368.1" y="659.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="371.1" y="670.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="368.1" y="643.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="371.1" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="368.1" y="627.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="371.1" y="638.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="368.1" y="611.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="371.1" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.23%)</title><rect x="370.8" y="723.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="373.8" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="370.8" y="707.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="373.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="370.8" y="691.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="373.8" y="702.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="370.8" y="675.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="373.8" y="686.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="370.8" y="659.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="373.8" y="670.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="370.8" y="643.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="373.8" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="370.8" y="627.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="373.8" y="638.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="370.8" y="611.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="373.8" y="622.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.23%)</title><rect x="370.8" y="595.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="373.8" y="606.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.23%)</title><rect x="370.8" y="579.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="373.8" y="590.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="370.8" y="563.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="373.8" y="574.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.12 (1 samples, 0.23%)</title><rect x="370.8" y="547.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="373.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (18 samples, 4.14%)</title><rect x="373.5" y="819.0" width="48.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="376.5" y="830.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (18 samples, 4.14%)</title><rect x="373.5" y="803.0" width="48.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.5" y="814.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (18 samples, 4.14%)</title><rect x="373.5" y="787.0" width="48.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="376.5" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (18 samples, 4.14%)</title><rect x="373.5" y="771.0" width="48.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="376.5" y="782.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (18 samples, 4.14%)</title><rect x="373.5" y="755.0" width="48.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="376.5" y="766.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (18 samples, 4.14%)</title><rect x="373.5" y="739.0" width="48.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.5" y="750.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (18 samples, 4.14%)</title><rect x="373.5" y="723.0" width="48.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.5" y="734.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (18 samples, 4.14%)</title><rect x="373.5" y="707.0" width="48.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="376.5" y="718.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (12 samples, 2.76%)</title><rect x="373.5" y="691.0" width="32.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="376.5" y="702.0">Ja..</text>
</g>
<g>
<title>__malloc (1 samples, 0.23%)</title><rect x="373.5" y="675.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="376.5" y="686.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (11 samples, 2.53%)</title><rect x="376.2" y="675.0" width="29.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="379.2" y="686.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (11 samples, 2.53%)</title><rect x="376.2" y="659.0" width="29.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="379.2" y="670.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (10 samples, 2.30%)</title><rect x="378.9" y="643.0" width="27.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="381.9" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (10 samples, 2.30%)</title><rect x="378.9" y="627.0" width="27.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="381.9" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (10 samples, 2.30%)</title><rect x="378.9" y="611.0" width="27.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="381.9" y="622.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (10 samples, 2.30%)</title><rect x="378.9" y="595.0" width="27.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="381.9" y="606.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (2 samples, 0.46%)</title><rect x="378.9" y="579.0" width="5.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="381.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (2 samples, 0.46%)</title><rect x="378.9" y="563.0" width="5.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="381.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="378.9" y="547.0" width="5.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="381.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.46%)</title><rect x="378.9" y="531.0" width="5.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="381.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.46%)</title><rect x="378.9" y="515.0" width="5.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="381.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.46%)</title><rect x="378.9" y="499.0" width="5.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="381.9" y="510.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (2 samples, 0.46%)</title><rect x="378.9" y="483.0" width="5.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="381.9" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="381.6" y="467.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="384.6" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="381.6" y="451.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="384.6" y="462.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="381.6" y="435.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="384.6" y="446.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.23%)</title><rect x="381.6" y="419.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="384.6" y="430.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.23%)</title><rect x="381.6" y="403.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="384.6" y="414.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="381.6" y="387.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="384.6" y="398.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (1 samples, 0.23%)</title><rect x="381.6" y="371.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="384.6" y="382.0"></text>
</g>
<g>
<title>__generic_file_write_iter (1 samples, 0.23%)</title><rect x="381.6" y="355.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="384.6" y="366.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.23%)</title><rect x="381.6" y="339.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="384.6" y="350.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.23%)</title><rect x="381.6" y="323.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="384.6" y="334.0"></text>
</g>
<g>
<title>ext4_da_write_begin	[ext4] (1 samples, 0.23%)</title><rect x="381.6" y="307.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="384.6" y="318.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb	[ext4] (1 samples, 0.23%)</title><rect x="381.6" y="291.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="384.6" y="302.0"></text>
</g>
<g>
<title>ext4_journal_check_start	[ext4] (1 samples, 0.23%)</title><rect x="381.6" y="275.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="384.6" y="286.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.23%)</title><rect x="384.3" y="579.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="387.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (7 samples, 1.61%)</title><rect x="387.1" y="579.0" width="18.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="390.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (7 samples, 1.61%)</title><rect x="387.1" y="563.0" width="18.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="390.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 1.61%)</title><rect x="387.1" y="547.0" width="18.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="390.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (7 samples, 1.61%)</title><rect x="387.1" y="531.0" width="18.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="390.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (7 samples, 1.61%)</title><rect x="387.1" y="515.0" width="18.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="390.1" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (6 samples, 1.38%)</title><rect x="387.1" y="499.0" width="16.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="390.1" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (6 samples, 1.38%)</title><rect x="387.1" y="483.0" width="16.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="390.1" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (5 samples, 1.15%)</title><rect x="387.1" y="467.0" width="13.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="390.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 1.15%)</title><rect x="387.1" y="451.0" width="13.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="390.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 1.15%)</title><rect x="387.1" y="435.0" width="13.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="390.1" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.69%)</title><rect x="389.8" y="419.0" width="8.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="392.8" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (3 samples, 0.69%)</title><rect x="389.8" y="403.0" width="8.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="392.8" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (3 samples, 0.69%)</title><rect x="389.8" y="387.0" width="8.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="392.8" y="398.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.23%)</title><rect x="392.5" y="371.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="395.5" y="382.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.23%)</title><rect x="395.2" y="371.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="398.2" y="382.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.23%)</title><rect x="397.9" y="419.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="400.9" y="430.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.23%)</title><rect x="397.9" y="403.0" width="2.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="400.9" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="400.6" y="467.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="403.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.23%)</title><rect x="400.6" y="451.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="403.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.23%)</title><rect x="403.3" y="499.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="406.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (1 samples, 0.23%)</title><rect x="403.3" y="483.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="406.3" y="494.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.23%)</title><rect x="406.0" y="691.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="409.0" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (5 samples, 1.15%)</title><rect x="408.8" y="691.0" width="13.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.8" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (5 samples, 1.15%)</title><rect x="408.8" y="675.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.8" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (5 samples, 1.15%)</title><rect x="408.8" y="659.0" width="13.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.8" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (5 samples, 1.15%)</title><rect x="408.8" y="643.0" width="13.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.8" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (5 samples, 1.15%)</title><rect x="408.8" y="627.0" width="13.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="411.8" y="638.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (5 samples, 1.15%)</title><rect x="408.8" y="611.0" width="13.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="411.8" y="622.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="408.8" y="595.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="411.8" y="606.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.46%)</title><rect x="411.5" y="595.0" width="5.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="414.5" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.46%)</title><rect x="411.5" y="579.0" width="5.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="414.5" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.23%)</title><rect x="411.5" y="563.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="414.5" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.23%)</title><rect x="411.5" y="547.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="414.5" y="558.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.23%)</title><rect x="411.5" y="531.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="414.5" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.23%)</title><rect x="414.2" y="563.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="417.2" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.46%)</title><rect x="416.9" y="595.0" width="5.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="419.9" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (2 samples, 0.46%)</title><rect x="416.9" y="579.0" width="5.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="419.9" y="590.0"></text>
</g>
<g>
<title>[worker tid=24775] (45 samples, 10.34%)</title><rect x="422.3" y="883.0" width="122.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="425.3" y="894.0">[worker tid=247..</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.23%)</title><rect x="422.3" y="867.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="425.3" y="878.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.23%)</title><rect x="422.3" y="851.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="425.3" y="862.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.23%)</title><rect x="422.3" y="835.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="425.3" y="846.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="422.3" y="819.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="425.3" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="422.3" y="803.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="425.3" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="422.3" y="787.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="425.3" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.23%)</title><rect x="422.3" y="771.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="425.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.23%)</title><rect x="422.3" y="755.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="425.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.23%)</title><rect x="422.3" y="739.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="425.3" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.23%)</title><rect x="422.3" y="723.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="425.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="422.3" y="707.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="425.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.23%)</title><rect x="422.3" y="691.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="425.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.23%)</title><rect x="422.3" y="675.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="425.3" y="686.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.23%)</title><rect x="422.3" y="659.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="425.3" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (1 samples, 0.23%)</title><rect x="422.3" y="643.0" width="2.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="425.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="422.3" y="627.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="425.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="422.3" y="611.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="425.3" y="622.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="422.3" y="595.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="425.3" y="606.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.23%)</title><rect x="422.3" y="579.0" width="2.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="425.3" y="590.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="422.3" y="563.0" width="2.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="425.3" y="574.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.23%)</title><rect x="422.3" y="547.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="425.3" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.run (44 samples, 10.11%)</title><rect x="425.0" y="867.0" width="119.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="428.0" y="878.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (44 samples, 10.11%)</title><rect x="425.0" y="851.0" width="119.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="428.0" y="862.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (44 samples, 10.11%)</title><rect x="425.0" y="835.0" width="119.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="428.0" y="846.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 1.38%)</title><rect x="425.0" y="819.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="428.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (6 samples, 1.38%)</title><rect x="425.0" y="803.0" width="16.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="428.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 1.38%)</title><rect x="425.0" y="787.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="428.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 1.38%)</title><rect x="425.0" y="771.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="428.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 1.38%)</title><rect x="425.0" y="755.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="428.0" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.23%)</title><rect x="425.0" y="739.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="428.0" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 1.15%)</title><rect x="427.7" y="739.0" width="13.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="430.7" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.23%)</title><rect x="427.7" y="723.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="430.7" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.69%)</title><rect x="430.5" y="723.0" width="8.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="433.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.46%)</title><rect x="433.2" y="707.0" width="5.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="436.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.46%)</title><rect x="433.2" y="691.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="436.2" y="702.0"></text>
</g>
<g>
<title>sys_setsockopt (2 samples, 0.46%)</title><rect x="433.2" y="675.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="436.2" y="686.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.46%)</title><rect x="433.2" y="659.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="436.2" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="433.2" y="643.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="436.2" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.23%)</title><rect x="435.9" y="643.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="438.9" y="654.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="435.9" y="627.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="438.9" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="435.9" y="611.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="438.9" y="622.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="435.9" y="595.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="438.9" y="606.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.23%)</title><rect x="435.9" y="579.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="438.9" y="590.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.23%)</title><rect x="435.9" y="563.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="438.9" y="574.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="435.9" y="547.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="438.9" y="558.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.23%)</title><rect x="435.9" y="531.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="438.9" y="542.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.23%)</title><rect x="438.6" y="723.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="441.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (38 samples, 8.74%)</title><rect x="441.3" y="819.0" width="103.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="444.3" y="830.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (37 samples, 8.51%)</title><rect x="444.0" y="803.0" width="100.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="447.0" y="814.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 1.15%)</title><rect x="446.7" y="787.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="449.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 1.15%)</title><rect x="446.7" y="771.0" width="13.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="449.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.15%)</title><rect x="446.7" y="755.0" width="13.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="449.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.15%)</title><rect x="446.7" y="739.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="449.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 1.15%)</title><rect x="446.7" y="723.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 1.15%)</title><rect x="446.7" y="707.0" width="13.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="449.7" y="718.0"></text>
</g>
<g>
<title>__send (5 samples, 1.15%)</title><rect x="446.7" y="691.0" width="13.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="449.7" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (5 samples, 1.15%)</title><rect x="446.7" y="675.0" width="13.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="449.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.15%)</title><rect x="446.7" y="659.0" width="13.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="449.7" y="670.0"></text>
</g>
<g>
<title>sys_setsockopt (2 samples, 0.46%)</title><rect x="446.7" y="643.0" width="5.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="449.7" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.46%)</title><rect x="446.7" y="627.0" width="5.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="449.7" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.46%)</title><rect x="446.7" y="611.0" width="5.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="449.7" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.46%)</title><rect x="446.7" y="595.0" width="5.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="449.7" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.46%)</title><rect x="446.7" y="579.0" width="5.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="449.7" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.46%)</title><rect x="446.7" y="563.0" width="5.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="449.7" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.46%)</title><rect x="446.7" y="547.0" width="5.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="449.7" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.46%)</title><rect x="446.7" y="531.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="449.7" y="542.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.46%)</title><rect x="446.7" y="515.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="449.7" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.46%)</title><rect x="446.7" y="499.0" width="5.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="449.7" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.46%)</title><rect x="446.7" y="483.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="449.7" y="494.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.46%)</title><rect x="446.7" y="467.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="449.7" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.46%)</title><rect x="446.7" y="451.0" width="5.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="449.7" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.46%)</title><rect x="446.7" y="435.0" width="5.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="449.7" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.18 (2 samples, 0.46%)</title><rect x="446.7" y="419.0" width="5.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="449.7" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.46%)</title><rect x="446.7" y="403.0" width="5.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="449.7" y="414.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.46%)</title><rect x="446.7" y="387.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="449.7" y="398.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.46%)</title><rect x="446.7" y="371.0" width="5.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="449.7" y="382.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.46%)</title><rect x="446.7" y="355.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="449.7" y="366.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.46%)</title><rect x="446.7" y="339.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="449.7" y="350.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.23%)</title><rect x="446.7" y="323.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="449.7" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="446.7" y="307.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="449.7" y="318.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="446.7" y="291.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="449.7" y="302.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="446.7" y="275.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="449.7" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="446.7" y="259.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="449.7" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="446.7" y="243.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="449.7" y="254.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.23%)</title><rect x="446.7" y="227.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="449.7" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="446.7" y="211.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="449.7" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="446.7" y="195.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="449.7" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="446.7" y="179.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="449.7" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="446.7" y="163.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="449.7" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.23%)</title><rect x="446.7" y="147.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="449.7" y="158.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.23%)</title><rect x="449.4" y="323.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="452.4" y="334.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.23%)</title><rect x="449.4" y="307.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="452.4" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="449.4" y="291.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="452.4" y="302.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="449.4" y="275.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="452.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="449.4" y="259.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="452.4" y="270.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.23%)</title><rect x="449.4" y="243.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="452.4" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="449.4" y="227.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="452.4" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="449.4" y="211.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="452.4" y="222.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.23%)</title><rect x="449.4" y="195.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="452.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="449.4" y="179.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="452.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="449.4" y="163.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="452.4" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="449.4" y="147.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="452.4" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="449.4" y="131.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="452.4" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.23%)</title><rect x="449.4" y="115.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="452.4" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.23%)</title><rect x="449.4" y="99.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="452.4" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="449.4" y="83.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="452.4" y="94.0"></text>
</g>
<g>
<title>sys_write (3 samples, 0.69%)</title><rect x="452.2" y="643.0" width="8.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="455.2" y="654.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.69%)</title><rect x="452.2" y="627.0" width="8.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="455.2" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (3 samples, 0.69%)</title><rect x="452.2" y="611.0" width="8.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="455.2" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.69%)</title><rect x="452.2" y="595.0" width="8.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="455.2" y="606.0"></text>
</g>
<g>
<title>__generic_file_write_iter (1 samples, 0.23%)</title><rect x="452.2" y="579.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="455.2" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.23%)</title><rect x="452.2" y="563.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="455.2" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.23%)</title><rect x="452.2" y="547.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="455.2" y="558.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.23%)</title><rect x="452.2" y="531.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="455.2" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.46%)</title><rect x="454.9" y="579.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="457.9" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.46%)</title><rect x="454.9" y="563.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="457.9" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.46%)</title><rect x="454.9" y="547.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="457.9" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.46%)</title><rect x="454.9" y="531.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="457.9" y="542.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.46%)</title><rect x="454.9" y="515.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="457.9" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.46%)</title><rect x="454.9" y="499.0" width="5.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="457.9" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.46%)</title><rect x="454.9" y="483.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="457.9" y="494.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.46%)</title><rect x="454.9" y="467.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="457.9" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.46%)</title><rect x="454.9" y="451.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="457.9" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.46%)</title><rect x="454.9" y="435.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="457.9" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.18 (2 samples, 0.46%)</title><rect x="454.9" y="419.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="457.9" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.46%)</title><rect x="454.9" y="403.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="457.9" y="414.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.46%)</title><rect x="454.9" y="387.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="457.9" y="398.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.46%)</title><rect x="454.9" y="371.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="457.9" y="382.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.46%)</title><rect x="454.9" y="355.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="457.9" y="366.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.46%)</title><rect x="454.9" y="339.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="457.9" y="350.0"></text>
</g>
<g>
<title>check_preempt_curr (1 samples, 0.23%)</title><rect x="454.9" y="323.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="457.9" y="334.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.23%)</title><rect x="454.9" y="307.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="457.9" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="454.9" y="291.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="457.9" y="302.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="454.9" y="275.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="457.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="454.9" y="259.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="457.9" y="270.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.23%)</title><rect x="454.9" y="243.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="457.9" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="454.9" y="227.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="457.9" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="454.9" y="211.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="457.9" y="222.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.23%)</title><rect x="454.9" y="195.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="457.9" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="454.9" y="179.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="457.9" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="454.9" y="163.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="457.9" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="454.9" y="147.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="457.9" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="454.9" y="131.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="457.9" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.23%)</title><rect x="454.9" y="115.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="457.9" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.23%)</title><rect x="454.9" y="99.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="457.9" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="454.9" y="83.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="457.9" y="94.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.23%)</title><rect x="457.6" y="323.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="460.6" y="334.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.23%)</title><rect x="457.6" y="307.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="460.6" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="457.6" y="291.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="460.6" y="302.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="457.6" y="275.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="460.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="457.6" y="259.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="460.6" y="270.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.23%)</title><rect x="457.6" y="243.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="460.6" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="457.6" y="227.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="460.6" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="457.6" y="211.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="460.6" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="457.6" y="195.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="460.6" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.23%)</title><rect x="457.6" y="179.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="460.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (13 samples, 2.99%)</title><rect x="460.3" y="787.0" width="35.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.3" y="798.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (13 samples, 2.99%)</title><rect x="460.3" y="771.0" width="35.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="463.3" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (13 samples, 2.99%)</title><rect x="460.3" y="755.0" width="35.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.3" y="766.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (13 samples, 2.99%)</title><rect x="460.3" y="739.0" width="35.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.3" y="750.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (13 samples, 2.99%)</title><rect x="460.3" y="723.0" width="35.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="463.3" y="734.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (13 samples, 2.99%)</title><rect x="460.3" y="707.0" width="35.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.3" y="718.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (9 samples, 2.07%)</title><rect x="460.3" y="691.0" width="24.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="463.3" y="702.0">J..</text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.23%)</title><rect x="460.3" y="675.0" width="2.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="463.3" y="686.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (8 samples, 1.84%)</title><rect x="463.0" y="675.0" width="21.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="466.0" y="686.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 1.84%)</title><rect x="463.0" y="659.0" width="21.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="466.0" y="670.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 1.84%)</title><rect x="463.0" y="643.0" width="21.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="466.0" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 1.84%)</title><rect x="463.0" y="627.0" width="21.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="466.0" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (8 samples, 1.84%)</title><rect x="463.0" y="611.0" width="21.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="466.0" y="622.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (8 samples, 1.84%)</title><rect x="463.0" y="595.0" width="21.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="466.0" y="606.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (3 samples, 0.69%)</title><rect x="463.0" y="579.0" width="8.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="466.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.69%)</title><rect x="463.0" y="563.0" width="8.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="466.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.69%)</title><rect x="463.0" y="547.0" width="8.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="466.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.69%)</title><rect x="463.0" y="531.0" width="8.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="466.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (3 samples, 0.69%)</title><rect x="463.0" y="515.0" width="8.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="466.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (3 samples, 0.69%)</title><rect x="463.0" y="499.0" width="8.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="466.0" y="510.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (3 samples, 0.69%)</title><rect x="463.0" y="483.0" width="8.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="466.0" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.69%)</title><rect x="463.0" y="467.0" width="8.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="466.0" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.69%)</title><rect x="463.0" y="451.0" width="8.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="466.0" y="462.0"></text>
</g>
<g>
<title>sys_write (3 samples, 0.69%)</title><rect x="463.0" y="435.0" width="8.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="466.0" y="446.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.69%)</title><rect x="463.0" y="419.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="466.0" y="430.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.69%)</title><rect x="463.0" y="403.0" width="8.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="466.0" y="414.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.69%)</title><rect x="463.0" y="387.0" width="8.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="466.0" y="398.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (3 samples, 0.69%)</title><rect x="463.0" y="371.0" width="8.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="466.0" y="382.0"></text>
</g>
<g>
<title>__generic_file_write_iter (3 samples, 0.69%)</title><rect x="463.0" y="355.0" width="8.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="466.0" y="366.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.46%)</title><rect x="463.0" y="339.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="466.0" y="350.0"></text>
</g>
<g>
<title>generic_perform_write (2 samples, 0.46%)</title><rect x="463.0" y="323.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="466.0" y="334.0"></text>
</g>
<g>
<title>ext4_da_write_begin	[ext4] (2 samples, 0.46%)</title><rect x="463.0" y="307.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="466.0" y="318.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.23%)</title><rect x="463.0" y="291.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="466.0" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.23%)</title><rect x="463.0" y="275.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="466.0" y="286.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.23%)</title><rect x="463.0" y="259.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="466.0" y="270.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (1 samples, 0.23%)</title><rect x="463.0" y="243.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="466.0" y="254.0"></text>
</g>
<g>
<title>__radix_tree_lookup (1 samples, 0.23%)</title><rect x="463.0" y="227.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="466.0" y="238.0"></text>
</g>
<g>
<title>jbd2__journal_start	[jbd2] (1 samples, 0.23%)</title><rect x="465.7" y="291.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="468.7" y="302.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (1 samples, 0.23%)</title><rect x="465.7" y="275.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="468.7" y="286.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.23%)</title><rect x="465.7" y="259.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="468.7" y="270.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.23%)</title><rect x="465.7" y="243.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="468.7" y="254.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.23%)</title><rect x="468.4" y="339.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="471.4" y="350.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.23%)</title><rect x="468.4" y="323.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="471.4" y="334.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (5 samples, 1.15%)</title><rect x="471.1" y="579.0" width="13.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="474.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (5 samples, 1.15%)</title><rect x="471.1" y="563.0" width="13.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="474.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 1.15%)</title><rect x="471.1" y="547.0" width="13.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="474.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (5 samples, 1.15%)</title><rect x="471.1" y="531.0" width="13.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="474.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (5 samples, 1.15%)</title><rect x="471.1" y="515.0" width="13.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="474.1" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 1.15%)</title><rect x="471.1" y="499.0" width="13.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="474.1" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (4 samples, 0.92%)</title><rect x="473.9" y="483.0" width="10.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="476.9" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (4 samples, 0.92%)</title><rect x="473.9" y="467.0" width="10.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="476.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.92%)</title><rect x="473.9" y="451.0" width="10.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="476.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.92%)</title><rect x="473.9" y="435.0" width="10.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="476.9" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="473.9" y="419.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="476.9" y="430.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.23%)</title><rect x="473.9" y="403.0" width="2.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="476.9" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="473.9" y="387.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="476.9" y="398.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.23%)</title><rect x="473.9" y="371.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="476.9" y="382.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.46%)</title><rect x="476.6" y="419.0" width="5.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="479.6" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.46%)</title><rect x="476.6" y="403.0" width="5.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="479.6" y="414.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.23%)</title><rect x="476.6" y="387.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="479.6" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="479.3" y="387.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="482.3" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="479.3" y="371.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="482.3" y="382.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.23%)</title><rect x="479.3" y="355.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="482.3" y="366.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.23%)</title><rect x="482.0" y="419.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="485.0" y="430.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 0.92%)</title><rect x="484.7" y="691.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.7" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 0.92%)</title><rect x="484.7" y="675.0" width="10.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="487.7" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (4 samples, 0.92%)</title><rect x="484.7" y="659.0" width="10.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.7" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 0.92%)</title><rect x="484.7" y="643.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.7" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 0.92%)</title><rect x="484.7" y="627.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="487.7" y="638.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (3 samples, 0.69%)</title><rect x="484.7" y="611.0" width="8.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="487.7" y="622.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="484.7" y="595.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="487.7" y="606.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.23%)</title><rect x="484.7" y="579.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="487.7" y="590.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.23%)</title><rect x="487.4" y="595.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="490.4" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.23%)</title><rect x="487.4" y="579.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="490.4" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.23%)</title><rect x="487.4" y="563.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="490.4" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.23%)</title><rect x="487.4" y="547.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="490.4" y="558.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.23%)</title><rect x="490.1" y="595.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="493.1" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.23%)</title><rect x="490.1" y="579.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="493.1" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="492.9" y="611.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="495.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.act (18 samples, 4.14%)</title><rect x="495.6" y="787.0" width="48.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="498.6" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.lambda$entity$1 (18 samples, 4.14%)</title><rect x="495.6" y="771.0" width="48.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="498.6" y="782.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.proxy (18 samples, 4.14%)</title><rect x="495.6" y="755.0" width="48.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.6" y="766.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (18 samples, 4.14%)</title><rect x="495.6" y="739.0" width="48.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="498.6" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (18 samples, 4.14%)</title><rect x="495.6" y="723.0" width="48.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="498.6" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (9 samples, 2.07%)</title><rect x="495.6" y="707.0" width="24.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="498.6" y="718.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 2.07%)</title><rect x="495.6" y="691.0" width="24.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="498.6" y="702.0">o..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="495.6" y="675.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="498.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="495.6" y="659.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="498.6" y="670.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.23%)</title><rect x="495.6" y="643.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="498.6" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.23%)</title><rect x="495.6" y="627.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="498.6" y="638.0"></text>
</g>
<g>
<title>__libc_recv (7 samples, 1.61%)</title><rect x="498.3" y="675.0" width="19.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="501.3" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (7 samples, 1.61%)</title><rect x="498.3" y="659.0" width="19.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="501.3" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.61%)</title><rect x="498.3" y="643.0" width="19.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="501.3" y="654.0"></text>
</g>
<g>
<title>sys_setsockopt (7 samples, 1.61%)</title><rect x="498.3" y="627.0" width="19.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="501.3" y="638.0"></text>
</g>
<g>
<title>sock_setsockopt (7 samples, 1.61%)</title><rect x="498.3" y="611.0" width="19.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="501.3" y="622.0"></text>
</g>
<g>
<title>SYSC_recvfrom (7 samples, 1.61%)</title><rect x="498.3" y="595.0" width="19.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="501.3" y="606.0"></text>
</g>
<g>
<title>inet_recvmsg (7 samples, 1.61%)</title><rect x="498.3" y="579.0" width="19.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="501.3" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (7 samples, 1.61%)</title><rect x="498.3" y="563.0" width="19.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="501.3" y="574.0"></text>
</g>
<g>
<title>autoremove_wake_function (1 samples, 0.23%)</title><rect x="498.3" y="547.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="501.3" y="558.0"></text>
</g>
<g>
<title>sk_wait_data (1 samples, 0.23%)</title><rect x="498.3" y="531.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="501.3" y="542.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.23%)</title><rect x="498.3" y="515.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="501.3" y="526.0"></text>
</g>
<g>
<title>schedule_timeout (1 samples, 0.23%)</title><rect x="498.3" y="499.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="501.3" y="510.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.23%)</title><rect x="498.3" y="483.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="501.3" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.23%)</title><rect x="501.0" y="547.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="504.0" y="558.0"></text>
</g>
<g>
<title>tcp_prequeue_process (5 samples, 1.15%)</title><rect x="503.7" y="547.0" width="13.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="506.7" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 1.15%)</title><rect x="503.7" y="531.0" width="13.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="506.7" y="542.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.23%)</title><rect x="503.7" y="515.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="506.7" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.92%)</title><rect x="506.4" y="515.0" width="10.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="509.4" y="526.0"></text>
</g>
<g>
<title>kfree_skb_partial (1 samples, 0.23%)</title><rect x="506.4" y="499.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="509.4" y="510.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.23%)</title><rect x="509.1" y="499.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="512.1" y="510.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (1 samples, 0.23%)</title><rect x="509.1" y="483.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="512.1" y="494.0"></text>
</g>
<g>
<title>copy_to_iter (1 samples, 0.23%)</title><rect x="509.1" y="467.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="512.1" y="478.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.23%)</title><rect x="511.8" y="499.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="514.8" y="510.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (1 samples, 0.23%)</title><rect x="514.6" y="499.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="517.6" y="510.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.23%)</title><rect x="514.6" y="483.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="517.6" y="494.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.23%)</title><rect x="514.6" y="467.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="517.6" y="478.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.23%)</title><rect x="514.6" y="451.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="517.6" y="462.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.23%)</title><rect x="517.3" y="675.0" width="2.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="520.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1 samples, 0.23%)</title><rect x="520.0" y="707.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.23%)</title><rect x="520.0" y="691.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="523.0" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.23%)</title><rect x="520.0" y="675.0" width="2.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="523.0" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (1 samples, 0.23%)</title><rect x="522.7" y="707.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.7" y="718.0"></text>
</g>
<g>
<title>__GI___setsockopt (1 samples, 0.23%)</title><rect x="522.7" y="691.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="525.7" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="522.7" y="675.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="525.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="522.7" y="659.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="525.7" y="670.0"></text>
</g>
<g>
<title>sys_setsockopt (1 samples, 0.23%)</title><rect x="522.7" y="643.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="525.7" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.23%)</title><rect x="522.7" y="627.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="525.7" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.23%)</title><rect x="522.7" y="611.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="525.7" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (6 samples, 1.38%)</title><rect x="525.4" y="707.0" width="16.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.4" y="718.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (1 samples, 0.23%)</title><rect x="525.4" y="691.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="528.4" y="702.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.23%)</title><rect x="525.4" y="675.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="528.4" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.23%)</title><rect x="528.1" y="691.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="531.1" y="702.0"></text>
</g>
<g>
<title>__send (4 samples, 0.92%)</title><rect x="530.8" y="691.0" width="10.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="533.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.69%)</title><rect x="533.5" y="675.0" width="8.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="536.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.69%)</title><rect x="533.5" y="659.0" width="8.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="536.5" y="670.0"></text>
</g>
<g>
<title>sys_setsockopt (3 samples, 0.69%)</title><rect x="533.5" y="643.0" width="8.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="536.5" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (3 samples, 0.69%)</title><rect x="533.5" y="627.0" width="8.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="536.5" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (3 samples, 0.69%)</title><rect x="533.5" y="611.0" width="8.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="536.5" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.69%)</title><rect x="533.5" y="595.0" width="8.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="536.5" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (3 samples, 0.69%)</title><rect x="533.5" y="579.0" width="8.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="536.5" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.23%)</title><rect x="533.5" y="563.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="536.5" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.23%)</title><rect x="533.5" y="547.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="536.5" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.23%)</title><rect x="533.5" y="531.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="536.5" y="542.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.23%)</title><rect x="533.5" y="515.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="536.5" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.23%)</title><rect x="533.5" y="499.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="536.5" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.23%)</title><rect x="533.5" y="483.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="536.5" y="494.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.23%)</title><rect x="533.5" y="467.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="536.5" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.23%)</title><rect x="533.5" y="451.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="536.5" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.23%)</title><rect x="533.5" y="435.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="536.5" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.23%)</title><rect x="533.5" y="419.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="536.5" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.23%)</title><rect x="533.5" y="403.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="536.5" y="414.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.23%)</title><rect x="533.5" y="387.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="536.5" y="398.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.23%)</title><rect x="533.5" y="371.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="536.5" y="382.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.23%)</title><rect x="533.5" y="355.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="536.5" y="366.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.23%)</title><rect x="533.5" y="339.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="536.5" y="350.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.23%)</title><rect x="533.5" y="323.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="536.5" y="334.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="533.5" y="307.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="536.5" y="318.0"></text>
</g>
<g>
<title>task_tick_fair (1 samples, 0.23%)</title><rect x="533.5" y="291.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="536.5" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="533.5" y="275.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="536.5" y="286.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="533.5" y="259.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="536.5" y="270.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="533.5" y="243.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="536.5" y="254.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.23%)</title><rect x="533.5" y="227.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="536.5" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="533.5" y="211.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="536.5" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="533.5" y="195.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="536.5" y="206.0"></text>
</g>
<g>
<title>update_sd_lb_stats (1 samples, 0.23%)</title><rect x="533.5" y="179.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="536.5" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="533.5" y="163.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="536.5" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="533.5" y="147.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="536.5" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="533.5" y="131.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="536.5" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="533.5" y="115.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="536.5" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.23%)</title><rect x="533.5" y="99.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="536.5" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.23%)</title><rect x="533.5" y="83.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="536.5" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="533.5" y="67.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="536.5" y="78.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.46%)</title><rect x="536.3" y="563.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="539.3" y="574.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.46%)</title><rect x="536.3" y="547.0" width="5.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="539.3" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.46%)</title><rect x="536.3" y="531.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="539.3" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.23%)</title><rect x="539.0" y="515.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="542.0" y="526.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.23%)</title><rect x="541.7" y="707.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="544.7" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.23%)</title><rect x="541.7" y="691.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="544.7" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (1 samples, 0.23%)</title><rect x="541.7" y="675.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.7" y="686.0"></text>
</g>
<g>
<title>[worker tid=24776] (21 samples, 4.83%)</title><rect x="544.4" y="883.0" width="57.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="547.4" y="894.0">[worke..</text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.46%)</title><rect x="544.4" y="867.0" width="5.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="547.4" y="878.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (2 samples, 0.46%)</title><rect x="544.4" y="851.0" width="5.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="547.4" y="862.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (2 samples, 0.46%)</title><rect x="544.4" y="835.0" width="5.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="547.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="544.4" y="819.0" width="5.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="547.4" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="544.4" y="803.0" width="5.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="547.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="544.4" y="787.0" width="5.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="547.4" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2 samples, 0.46%)</title><rect x="544.4" y="771.0" width="5.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="547.4" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.46%)</title><rect x="544.4" y="755.0" width="5.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="547.4" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.46%)</title><rect x="544.4" y="739.0" width="5.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="547.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.46%)</title><rect x="544.4" y="723.0" width="5.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="547.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="544.4" y="707.0" width="5.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="547.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.46%)</title><rect x="544.4" y="691.0" width="5.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="547.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.46%)</title><rect x="544.4" y="675.0" width="5.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="547.4" y="686.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.46%)</title><rect x="544.4" y="659.0" width="5.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="547.4" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (2 samples, 0.46%)</title><rect x="544.4" y="643.0" width="5.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="547.4" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (2 samples, 0.46%)</title><rect x="544.4" y="627.0" width="5.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="547.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.46%)</title><rect x="544.4" y="611.0" width="5.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="547.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.46%)</title><rect x="544.4" y="595.0" width="5.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="547.4" y="606.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.46%)</title><rect x="544.4" y="579.0" width="5.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="547.4" y="590.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.46%)</title><rect x="544.4" y="563.0" width="5.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="547.4" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.46%)</title><rect x="544.4" y="547.0" width="5.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="547.4" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.46%)</title><rect x="544.4" y="531.0" width="5.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="547.4" y="542.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.46%)</title><rect x="544.4" y="515.0" width="5.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="547.4" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (19 samples, 4.37%)</title><rect x="549.8" y="867.0" width="51.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.8" y="878.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (19 samples, 4.37%)</title><rect x="549.8" y="851.0" width="51.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.8" y="862.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (19 samples, 4.37%)</title><rect x="549.8" y="835.0" width="51.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.8" y="846.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.46%)</title><rect x="549.8" y="819.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.46%)</title><rect x="549.8" y="803.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.46%)</title><rect x="549.8" y="787.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.46%)</title><rect x="549.8" y="771.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.46%)</title><rect x="549.8" y="755.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.8" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.23%)</title><rect x="552.5" y="739.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="555.5" y="750.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.23%)</title><rect x="552.5" y="723.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="555.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (17 samples, 3.91%)</title><rect x="555.2" y="819.0" width="46.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="558.2" y="830.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (17 samples, 3.91%)</title><rect x="555.2" y="803.0" width="46.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.2" y="814.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.69%)</title><rect x="555.2" y="787.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.69%)</title><rect x="555.2" y="771.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.69%)</title><rect x="555.2" y="755.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.69%)</title><rect x="555.2" y="739.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.69%)</title><rect x="555.2" y="723.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.69%)</title><rect x="555.2" y="707.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.2" y="718.0"></text>
</g>
<g>
<title>__send (3 samples, 0.69%)</title><rect x="555.2" y="691.0" width="8.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="558.2" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.69%)</title><rect x="555.2" y="675.0" width="8.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="558.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.69%)</title><rect x="555.2" y="659.0" width="8.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="558.2" y="670.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.46%)</title><rect x="558.0" y="643.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="561.0" y="654.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.46%)</title><rect x="558.0" y="627.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="561.0" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.46%)</title><rect x="558.0" y="611.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="561.0" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.46%)</title><rect x="558.0" y="595.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="561.0" y="606.0"></text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.23%)</title><rect x="558.0" y="579.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="561.0" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.23%)</title><rect x="560.7" y="579.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="563.7" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.23%)</title><rect x="560.7" y="563.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="563.7" y="574.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.23%)</title><rect x="560.7" y="547.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="563.7" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.23%)</title><rect x="560.7" y="531.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="563.7" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.23%)</title><rect x="560.7" y="515.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="563.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (14 samples, 3.22%)</title><rect x="563.4" y="787.0" width="38.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="566.4" y="798.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (14 samples, 3.22%)</title><rect x="563.4" y="771.0" width="38.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="566.4" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (14 samples, 3.22%)</title><rect x="563.4" y="755.0" width="38.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="566.4" y="766.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (14 samples, 3.22%)</title><rect x="563.4" y="739.0" width="38.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="566.4" y="750.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (14 samples, 3.22%)</title><rect x="563.4" y="723.0" width="38.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="566.4" y="734.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (14 samples, 3.22%)</title><rect x="563.4" y="707.0" width="38.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="566.4" y="718.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (9 samples, 2.07%)</title><rect x="563.4" y="691.0" width="24.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="566.4" y="702.0">J..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (9 samples, 2.07%)</title><rect x="563.4" y="675.0" width="24.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="566.4" y="686.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 2.07%)</title><rect x="563.4" y="659.0" width="24.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="566.4" y="670.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 2.07%)</title><rect x="563.4" y="643.0" width="24.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="566.4" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 1.84%)</title><rect x="563.4" y="627.0" width="21.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="566.4" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (8 samples, 1.84%)</title><rect x="563.4" y="611.0" width="21.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="566.4" y="622.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (8 samples, 1.84%)</title><rect x="563.4" y="595.0" width="21.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="566.4" y="606.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (3 samples, 0.69%)</title><rect x="566.1" y="579.0" width="8.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="569.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.69%)</title><rect x="566.1" y="563.0" width="8.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="569.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.69%)</title><rect x="566.1" y="547.0" width="8.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="569.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.69%)</title><rect x="566.1" y="531.0" width="8.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="569.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (3 samples, 0.69%)</title><rect x="566.1" y="515.0" width="8.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="569.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize() (1 samples, 0.23%)</title><rect x="566.1" y="499.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="569.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.46%)</title><rect x="568.8" y="499.0" width="5.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="571.8" y="510.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (2 samples, 0.46%)</title><rect x="568.8" y="483.0" width="5.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="571.8" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.46%)</title><rect x="568.8" y="467.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="571.8" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.46%)</title><rect x="568.8" y="451.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="571.8" y="462.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.46%)</title><rect x="568.8" y="435.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="571.8" y="446.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.46%)</title><rect x="568.8" y="419.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="571.8" y="430.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.46%)</title><rect x="568.8" y="403.0" width="5.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="571.8" y="414.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.46%)</title><rect x="568.8" y="387.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="571.8" y="398.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (2 samples, 0.46%)</title><rect x="568.8" y="371.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="571.8" y="382.0"></text>
</g>
<g>
<title>__generic_file_write_iter (2 samples, 0.46%)</title><rect x="568.8" y="355.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="571.8" y="366.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.46%)</title><rect x="568.8" y="339.0" width="5.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="571.8" y="350.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.46%)</title><rect x="568.8" y="323.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="571.8" y="334.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.46%)</title><rect x="568.8" y="307.0" width="5.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="571.8" y="318.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.46%)</title><rect x="568.8" y="291.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="571.8" y="302.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.46%)</title><rect x="568.8" y="275.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="571.8" y="286.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (2 samples, 0.46%)</title><rect x="568.8" y="259.0" width="5.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="571.8" y="270.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (1 samples, 0.23%)</title><rect x="568.8" y="243.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="571.8" y="254.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="568.8" y="227.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="571.8" y="238.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write	[ext4] (1 samples, 0.23%)</title><rect x="568.8" y="211.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="571.8" y="222.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="568.8" y="195.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="571.8" y="206.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc	[ext4] (1 samples, 0.23%)</title><rect x="568.8" y="179.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="571.8" y="190.0"></text>
</g>
<g>
<title>__switch_to (1 samples, 0.23%)</title><rect x="568.8" y="163.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="571.8" y="174.0"></text>
</g>
<g>
<title>__switch_to_asm (1 samples, 0.23%)</title><rect x="568.8" y="147.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="571.8" y="158.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.23%)</title><rect x="568.8" y="131.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="571.8" y="142.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.23%)</title><rect x="568.8" y="115.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="571.8" y="126.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.23%)</title><rect x="568.8" y="99.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="571.8" y="110.0"></text>
</g>
<g>
<title>jbd2__journal_start	[jbd2] (1 samples, 0.23%)</title><rect x="571.5" y="243.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="574.5" y="254.0"></text>
</g>
<g>
<title>start_this_handle	[jbd2] (1 samples, 0.23%)</title><rect x="571.5" y="227.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="574.5" y="238.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (4 samples, 0.92%)</title><rect x="574.2" y="579.0" width="10.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="577.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.92%)</title><rect x="574.2" y="563.0" width="10.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="577.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.92%)</title><rect x="574.2" y="547.0" width="10.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="577.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.92%)</title><rect x="574.2" y="531.0" width="10.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="577.2" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.23%)</title><rect x="574.2" y="515.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="577.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (3 samples, 0.69%)</title><rect x="576.9" y="515.0" width="8.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="579.9" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.69%)</title><rect x="576.9" y="499.0" width="8.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="579.9" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (3 samples, 0.69%)</title><rect x="576.9" y="483.0" width="8.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="579.9" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (2 samples, 0.46%)</title><rect x="576.9" y="467.0" width="5.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="579.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.46%)</title><rect x="576.9" y="451.0" width="5.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="579.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.46%)</title><rect x="576.9" y="435.0" width="5.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="579.9" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="579.7" y="419.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="582.7" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.23%)</title><rect x="579.7" y="403.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="582.7" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="579.7" y="387.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="582.7" y="398.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.23%)</title><rect x="579.7" y="371.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="582.7" y="382.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::get_bool() (1 samples, 0.23%)</title><rect x="579.7" y="355.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="582.7" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="582.4" y="467.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="585.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="582.4" y="451.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="585.4" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="582.4" y="435.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="585.4" y="446.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.23%)</title><rect x="582.4" y="419.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="585.4" y="430.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.23%)</title><rect x="582.4" y="403.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="585.4" y="414.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.23%)</title><rect x="585.1" y="627.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="588.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="587.8" y="691.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="590.8" y="702.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.23%)</title><rect x="587.8" y="675.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="590.8" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 0.92%)</title><rect x="590.5" y="691.0" width="10.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.5" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 0.92%)</title><rect x="590.5" y="675.0" width="10.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="593.5" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (4 samples, 0.92%)</title><rect x="590.5" y="659.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="593.5" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 0.92%)</title><rect x="590.5" y="643.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="593.5" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 0.92%)</title><rect x="590.5" y="627.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="593.5" y="638.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (4 samples, 0.92%)</title><rect x="590.5" y="611.0" width="10.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="593.5" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.23%)</title><rect x="593.2" y="595.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="596.2" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.46%)</title><rect x="595.9" y="595.0" width="5.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="598.9" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.23%)</title><rect x="595.9" y="579.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="598.9" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.23%)</title><rect x="598.6" y="579.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="601.6" y="590.0"></text>
</g>
<g>
<title>[worker tid=24777] (45 samples, 10.34%)</title><rect x="601.4" y="883.0" width="122.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="604.4" y="894.0">[worker tid=247..</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.23%)</title><rect x="601.4" y="867.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="604.4" y="878.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.23%)</title><rect x="601.4" y="851.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="604.4" y="862.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.23%)</title><rect x="601.4" y="835.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="604.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="601.4" y="819.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="604.4" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="601.4" y="803.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="604.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="601.4" y="787.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="604.4" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.23%)</title><rect x="601.4" y="771.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="604.4" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.23%)</title><rect x="601.4" y="755.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="604.4" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.23%)</title><rect x="601.4" y="739.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="604.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.23%)</title><rect x="601.4" y="723.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="604.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="601.4" y="707.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="604.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.23%)</title><rect x="601.4" y="691.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="604.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.23%)</title><rect x="601.4" y="675.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="604.4" y="686.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.23%)</title><rect x="601.4" y="659.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="604.4" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (1 samples, 0.23%)</title><rect x="601.4" y="643.0" width="2.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="604.4" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (1 samples, 0.23%)</title><rect x="601.4" y="627.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="604.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="601.4" y="611.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="604.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="601.4" y="595.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="604.4" y="606.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="601.4" y="579.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="604.4" y="590.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.23%)</title><rect x="601.4" y="563.0" width="2.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="604.4" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="601.4" y="547.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="604.4" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="601.4" y="531.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="604.4" y="542.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="601.4" y="515.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="604.4" y="526.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.23%)</title><rect x="601.4" y="499.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="604.4" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (44 samples, 10.11%)</title><rect x="604.1" y="867.0" width="119.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.1" y="878.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (44 samples, 10.11%)</title><rect x="604.1" y="851.0" width="119.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.1" y="862.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (44 samples, 10.11%)</title><rect x="604.1" y="835.0" width="119.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.1" y="846.0">java/util/concu..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (44 samples, 10.11%)</title><rect x="604.1" y="819.0" width="119.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.1" y="830.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (44 samples, 10.11%)</title><rect x="604.1" y="803.0" width="119.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.1" y="814.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 1.61%)</title><rect x="604.1" y="787.0" width="19.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 1.61%)</title><rect x="604.1" y="771.0" width="19.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 1.61%)</title><rect x="604.1" y="755.0" width="19.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 1.61%)</title><rect x="604.1" y="739.0" width="19.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="607.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (7 samples, 1.61%)</title><rect x="604.1" y="723.0" width="19.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (7 samples, 1.61%)</title><rect x="604.1" y="707.0" width="19.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.1" y="718.0"></text>
</g>
<g>
<title>__send (6 samples, 1.38%)</title><rect x="606.8" y="691.0" width="16.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="609.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (6 samples, 1.38%)</title><rect x="606.8" y="675.0" width="16.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="609.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.38%)</title><rect x="606.8" y="659.0" width="16.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="609.8" y="670.0"></text>
</g>
<g>
<title>sys_setsockopt (2 samples, 0.46%)</title><rect x="606.8" y="643.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="609.8" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.46%)</title><rect x="606.8" y="627.0" width="5.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="609.8" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.46%)</title><rect x="606.8" y="611.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="609.8" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.46%)</title><rect x="606.8" y="595.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="609.8" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.46%)</title><rect x="606.8" y="579.0" width="5.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="609.8" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.46%)</title><rect x="606.8" y="563.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="609.8" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.46%)</title><rect x="606.8" y="547.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="609.8" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.46%)</title><rect x="606.8" y="531.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="609.8" y="542.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.23%)</title><rect x="606.8" y="515.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="609.8" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.23%)</title><rect x="606.8" y="499.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="609.8" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.23%)</title><rect x="606.8" y="483.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="609.8" y="494.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.23%)</title><rect x="606.8" y="467.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="609.8" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.23%)</title><rect x="606.8" y="451.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="609.8" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.23%)</title><rect x="606.8" y="435.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="609.8" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.23%)</title><rect x="606.8" y="419.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="609.8" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.23%)</title><rect x="606.8" y="403.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="609.8" y="414.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.23%)</title><rect x="606.8" y="387.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="609.8" y="398.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.23%)</title><rect x="606.8" y="371.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="609.8" y="382.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.23%)</title><rect x="606.8" y="355.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="609.8" y="366.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.23%)</title><rect x="609.5" y="515.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="612.5" y="526.0"></text>
</g>
<g>
<title>sys_write (4 samples, 0.92%)</title><rect x="612.2" y="643.0" width="10.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="615.2" y="654.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.92%)</title><rect x="612.2" y="627.0" width="10.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="615.2" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (4 samples, 0.92%)</title><rect x="612.2" y="611.0" width="10.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="615.2" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (4 samples, 0.92%)</title><rect x="612.2" y="595.0" width="10.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="615.2" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 0.92%)</title><rect x="612.2" y="579.0" width="10.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="615.2" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (4 samples, 0.92%)</title><rect x="612.2" y="563.0" width="10.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="615.2" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (4 samples, 0.92%)</title><rect x="612.2" y="547.0" width="10.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="615.2" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_stop	[ext4] (1 samples, 0.23%)</title><rect x="612.2" y="531.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="615.2" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.23%)</title><rect x="612.2" y="515.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="615.2" y="526.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.23%)</title><rect x="612.2" y="499.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="615.2" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.69%)</title><rect x="614.9" y="531.0" width="8.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="617.9" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.23%)</title><rect x="614.9" y="515.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="617.9" y="526.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.46%)</title><rect x="617.6" y="515.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="620.6" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.23%)</title><rect x="620.3" y="499.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="623.3" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.23%)</title><rect x="620.3" y="483.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="623.3" y="494.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.23%)</title><rect x="620.3" y="467.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="623.3" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.23%)</title><rect x="620.3" y="451.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="623.3" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.23%)</title><rect x="620.3" y="435.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="623.3" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.23%)</title><rect x="620.3" y="419.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="623.3" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.23%)</title><rect x="620.3" y="403.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="623.3" y="414.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.23%)</title><rect x="620.3" y="387.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="623.3" y="398.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.23%)</title><rect x="620.3" y="371.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="623.3" y="382.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.23%)</title><rect x="620.3" y="355.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="623.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (17 samples, 3.91%)</title><rect x="623.1" y="787.0" width="46.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="626.1" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (17 samples, 3.91%)</title><rect x="623.1" y="771.0" width="46.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="626.1" y="782.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (17 samples, 3.91%)</title><rect x="623.1" y="755.0" width="46.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.1" y="766.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (17 samples, 3.91%)</title><rect x="623.1" y="739.0" width="46.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.1" y="750.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (17 samples, 3.91%)</title><rect x="623.1" y="723.0" width="46.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="626.1" y="734.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (17 samples, 3.91%)</title><rect x="623.1" y="707.0" width="46.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="626.1" y="718.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (10 samples, 2.30%)</title><rect x="623.1" y="691.0" width="27.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="626.1" y="702.0">J..</text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.23%)</title><rect x="623.1" y="675.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="626.1" y="686.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (9 samples, 2.07%)</title><rect x="625.8" y="675.0" width="24.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="628.8" y="686.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 2.07%)</title><rect x="625.8" y="659.0" width="24.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="628.8" y="670.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 2.07%)</title><rect x="625.8" y="643.0" width="24.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="628.8" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 2.07%)</title><rect x="625.8" y="627.0" width="24.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="628.8" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (9 samples, 2.07%)</title><rect x="625.8" y="611.0" width="24.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="628.8" y="622.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (9 samples, 2.07%)</title><rect x="625.8" y="595.0" width="24.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="628.8" y="606.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (4 samples, 0.92%)</title><rect x="625.8" y="579.0" width="10.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="628.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (4 samples, 0.92%)</title><rect x="625.8" y="563.0" width="10.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="628.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (4 samples, 0.92%)</title><rect x="625.8" y="547.0" width="10.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="628.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (4 samples, 0.92%)</title><rect x="625.8" y="531.0" width="10.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="628.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (4 samples, 0.92%)</title><rect x="625.8" y="515.0" width="10.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="628.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (3 samples, 0.69%)</title><rect x="628.5" y="499.0" width="8.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="631.5" y="510.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (2 samples, 0.46%)</title><rect x="628.5" y="483.0" width="5.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="631.5" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.46%)</title><rect x="628.5" y="467.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="631.5" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.46%)</title><rect x="628.5" y="451.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="631.5" y="462.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.46%)</title><rect x="628.5" y="435.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="631.5" y="446.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.46%)</title><rect x="628.5" y="419.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="631.5" y="430.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.46%)</title><rect x="628.5" y="403.0" width="5.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="631.5" y="414.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.46%)</title><rect x="628.5" y="387.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="631.5" y="398.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (2 samples, 0.46%)</title><rect x="628.5" y="371.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="631.5" y="382.0"></text>
</g>
<g>
<title>__generic_file_write_iter (1 samples, 0.23%)</title><rect x="628.5" y="355.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="631.5" y="366.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.23%)</title><rect x="628.5" y="339.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="631.5" y="350.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.23%)</title><rect x="628.5" y="323.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="631.5" y="334.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.23%)</title><rect x="628.5" y="307.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="631.5" y="318.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.23%)</title><rect x="628.5" y="291.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="631.5" y="302.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.23%)</title><rect x="628.5" y="275.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="631.5" y="286.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="628.5" y="259.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="631.5" y="270.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (1 samples, 0.23%)</title><rect x="628.5" y="243.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="631.5" y="254.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="628.5" y="227.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="631.5" y="238.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access	[ext4] (1 samples, 0.23%)</title><rect x="628.5" y="211.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="631.5" y="222.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty	[ext4] (1 samples, 0.23%)</title><rect x="628.5" y="195.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="631.5" y="206.0"></text>
</g>
<g>
<title>ext4_inode_csum_set	[ext4] (1 samples, 0.23%)</title><rect x="628.5" y="179.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="631.5" y="190.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.61	[ext4] (1 samples, 0.23%)</title><rect x="628.5" y="163.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="631.5" y="174.0"></text>
</g>
<g>
<title>ctx_sched_in (1 samples, 0.23%)</title><rect x="628.5" y="147.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="631.5" y="158.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.23%)</title><rect x="628.5" y="131.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="631.5" y="142.0"></text>
</g>
<g>
<title>down_write (1 samples, 0.23%)</title><rect x="631.2" y="355.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="634.2" y="366.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.23%)</title><rect x="633.9" y="483.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="636.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (5 samples, 1.15%)</title><rect x="636.6" y="579.0" width="13.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="639.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (5 samples, 1.15%)</title><rect x="636.6" y="563.0" width="13.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="639.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 1.15%)</title><rect x="636.6" y="547.0" width="13.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="639.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (5 samples, 1.15%)</title><rect x="636.6" y="531.0" width="13.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="639.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (5 samples, 1.15%)</title><rect x="636.6" y="515.0" width="13.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="639.6" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 1.15%)</title><rect x="636.6" y="499.0" width="13.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="639.6" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (5 samples, 1.15%)</title><rect x="636.6" y="483.0" width="13.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="639.6" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (4 samples, 0.92%)</title><rect x="636.6" y="467.0" width="10.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="639.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.92%)</title><rect x="636.6" y="451.0" width="10.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="639.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.92%)</title><rect x="636.6" y="435.0" width="10.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="639.6" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.46%)</title><rect x="636.6" y="419.0" width="5.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="639.6" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.46%)</title><rect x="636.6" y="403.0" width="5.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="639.6" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.46%)</title><rect x="636.6" y="387.0" width="5.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="639.6" y="398.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::get_bool() (1 samples, 0.23%)</title><rect x="636.6" y="371.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="639.6" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="639.3" y="371.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="642.3" y="382.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="639.3" y="355.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="642.3" y="366.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.23%)</title><rect x="639.3" y="339.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="642.3" y="350.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="642.0" y="419.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="645.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.23%)</title><rect x="644.8" y="419.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="647.8" y="430.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.23%)</title><rect x="644.8" y="403.0" width="2.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="647.8" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="647.5" y="467.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="650.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="647.5" y="451.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="650.5" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="647.5" y="435.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="650.5" y="446.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.23%)</title><rect x="647.5" y="419.0" width="2.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="650.5" y="430.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.23%)</title><rect x="647.5" y="403.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="650.5" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="650.2" y="691.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="653.2" y="702.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.23%)</title><rect x="650.2" y="675.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="653.2" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.23%)</title><rect x="652.9" y="691.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="655.9" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (5 samples, 1.15%)</title><rect x="655.6" y="691.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.6" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (5 samples, 1.15%)</title><rect x="655.6" y="675.0" width="13.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.6" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (4 samples, 0.92%)</title><rect x="655.6" y="659.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.6" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (3 samples, 0.69%)</title><rect x="655.6" y="643.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.6" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1 samples, 0.23%)</title><rect x="663.7" y="643.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="666.7" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1 samples, 0.23%)</title><rect x="663.7" y="627.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="666.7" y="638.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (1 samples, 0.23%)</title><rect x="663.7" y="611.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="666.7" y="622.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="663.7" y="595.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="666.7" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.23%)</title><rect x="663.7" y="579.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="666.7" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (1 samples, 0.23%)</title><rect x="666.5" y="659.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.5" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.23%)</title><rect x="666.5" y="643.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="669.5" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.23%)</title><rect x="666.5" y="627.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.act (20 samples, 4.60%)</title><rect x="669.2" y="787.0" width="54.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="672.2" y="798.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.lambda$entity$1 (20 samples, 4.60%)</title><rect x="669.2" y="771.0" width="54.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.2" y="782.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.proxy (20 samples, 4.60%)</title><rect x="669.2" y="755.0" width="54.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="672.2" y="766.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (20 samples, 4.60%)</title><rect x="669.2" y="739.0" width="54.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="672.2" y="750.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (20 samples, 4.60%)</title><rect x="669.2" y="723.0" width="54.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.2" y="734.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (8 samples, 1.84%)</title><rect x="671.9" y="707.0" width="21.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="674.9" y="718.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (8 samples, 1.84%)</title><rect x="671.9" y="691.0" width="21.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="674.9" y="702.0">o..</text>
</g>
<g>
<title>__libc_recv (8 samples, 1.84%)</title><rect x="671.9" y="675.0" width="21.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="674.9" y="686.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (8 samples, 1.84%)</title><rect x="671.9" y="659.0" width="21.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="674.9" y="670.0">e..</text>
</g>
<g>
<title>do_syscall_64 (8 samples, 1.84%)</title><rect x="671.9" y="643.0" width="21.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="674.9" y="654.0">d..</text>
</g>
<g>
<title>sys_setsockopt (8 samples, 1.84%)</title><rect x="671.9" y="627.0" width="21.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="674.9" y="638.0">s..</text>
</g>
<g>
<title>sock_setsockopt (8 samples, 1.84%)</title><rect x="671.9" y="611.0" width="21.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="674.9" y="622.0">s..</text>
</g>
<g>
<title>SYSC_recvfrom (8 samples, 1.84%)</title><rect x="671.9" y="595.0" width="21.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="674.9" y="606.0">S..</text>
</g>
<g>
<title>inet_recvmsg (7 samples, 1.61%)</title><rect x="671.9" y="579.0" width="19.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="674.9" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (7 samples, 1.61%)</title><rect x="671.9" y="563.0" width="19.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="674.9" y="574.0"></text>
</g>
<g>
<title>autoremove_wake_function (3 samples, 0.69%)</title><rect x="671.9" y="547.0" width="8.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="674.9" y="558.0"></text>
</g>
<g>
<title>sk_wait_data (3 samples, 0.69%)</title><rect x="671.9" y="531.0" width="8.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="674.9" y="542.0"></text>
</g>
<g>
<title>process_timeout (3 samples, 0.69%)</title><rect x="671.9" y="515.0" width="8.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="674.9" y="526.0"></text>
</g>
<g>
<title>schedule_timeout (3 samples, 0.69%)</title><rect x="671.9" y="499.0" width="8.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="674.9" y="510.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.46%)</title><rect x="674.6" y="483.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="677.6" y="494.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.46%)</title><rect x="674.6" y="467.0" width="5.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="677.6" y="478.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.46%)</title><rect x="674.6" y="451.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="677.6" y="462.0"></text>
</g>
<g>
<title>tcp_prequeue_process (4 samples, 0.92%)</title><rect x="680.0" y="547.0" width="10.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="683.0" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.69%)</title><rect x="682.7" y="531.0" width="8.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="685.7" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.69%)</title><rect x="682.7" y="515.0" width="8.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="685.7" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.23%)</title><rect x="682.7" y="499.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="685.7" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.23%)</title><rect x="682.7" y="483.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="685.7" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="682.7" y="467.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="685.7" y="478.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.46%)</title><rect x="685.4" y="499.0" width="5.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="688.4" y="510.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (1 samples, 0.23%)</title><rect x="688.2" y="483.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="691.2" y="494.0"></text>
</g>
<g>
<title>copy_to_iter (1 samples, 0.23%)</title><rect x="688.2" y="467.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="691.2" y="478.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.23%)</title><rect x="688.2" y="451.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="691.2" y="462.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.23%)</title><rect x="688.2" y="435.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="691.2" y="446.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.23%)</title><rect x="690.9" y="579.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="693.9" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.23%)</title><rect x="690.9" y="563.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="693.9" y="574.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.23%)</title><rect x="690.9" y="547.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="693.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (1 samples, 0.23%)</title><rect x="693.6" y="707.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.6" y="718.0"></text>
</g>
<g>
<title>__GI___setsockopt (1 samples, 0.23%)</title><rect x="693.6" y="691.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="696.6" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="693.6" y="675.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="696.6" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="693.6" y="659.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="696.6" y="670.0"></text>
</g>
<g>
<title>sys_setsockopt (1 samples, 0.23%)</title><rect x="693.6" y="643.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="696.6" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (9 samples, 2.07%)</title><rect x="696.3" y="707.0" width="24.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.3" y="718.0">o..</text>
</g>
<g>
<title>__send (9 samples, 2.07%)</title><rect x="696.3" y="691.0" width="24.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="699.3" y="702.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (9 samples, 2.07%)</title><rect x="696.3" y="675.0" width="24.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="699.3" y="686.0">e..</text>
</g>
<g>
<title>do_syscall_64 (9 samples, 2.07%)</title><rect x="696.3" y="659.0" width="24.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="699.3" y="670.0">d..</text>
</g>
<g>
<title>sys_setsockopt (9 samples, 2.07%)</title><rect x="696.3" y="643.0" width="24.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="699.3" y="654.0">s..</text>
</g>
<g>
<title>sock_setsockopt (9 samples, 2.07%)</title><rect x="696.3" y="627.0" width="24.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="699.3" y="638.0">s..</text>
</g>
<g>
<title>SYSC_sendto (9 samples, 2.07%)</title><rect x="696.3" y="611.0" width="24.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="699.3" y="622.0">S..</text>
</g>
<g>
<title>sock_sendmsg (9 samples, 2.07%)</title><rect x="696.3" y="595.0" width="24.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="699.3" y="606.0">s..</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.23%)</title><rect x="696.3" y="579.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="699.3" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (8 samples, 1.84%)</title><rect x="699.0" y="579.0" width="21.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="702.0" y="590.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (6 samples, 1.38%)</title><rect x="699.0" y="563.0" width="16.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="702.0" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (6 samples, 1.38%)</title><rect x="699.0" y="547.0" width="16.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="702.0" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 1.38%)</title><rect x="699.0" y="531.0" width="16.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="702.0" y="542.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.23%)</title><rect x="699.0" y="515.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="702.0" y="526.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 1.15%)</title><rect x="701.7" y="515.0" width="13.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="704.7" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (5 samples, 1.15%)</title><rect x="701.7" y="499.0" width="13.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="704.7" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 1.15%)</title><rect x="701.7" y="483.0" width="13.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="704.7" y="494.0"></text>
</g>
<g>
<title>ip_output (5 samples, 1.15%)</title><rect x="701.7" y="467.0" width="13.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="704.7" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 1.15%)</title><rect x="701.7" y="451.0" width="13.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="704.7" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 1.15%)</title><rect x="701.7" y="435.0" width="13.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="704.7" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.18 (5 samples, 1.15%)</title><rect x="701.7" y="419.0" width="13.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="704.7" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 1.15%)</title><rect x="701.7" y="403.0" width="13.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="704.7" y="414.0"></text>
</g>
<g>
<title>__do_softirq (5 samples, 1.15%)</title><rect x="701.7" y="387.0" width="13.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="704.7" y="398.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 1.15%)</title><rect x="701.7" y="371.0" width="13.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="704.7" y="382.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 1.15%)</title><rect x="701.7" y="355.0" width="13.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="704.7" y="366.0"></text>
</g>
<g>
<title>sched_clock (4 samples, 0.92%)</title><rect x="701.7" y="339.0" width="10.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="704.7" y="350.0"></text>
</g>
<g>
<title>enqueue_task_fair (2 samples, 0.46%)</title><rect x="701.7" y="323.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="704.7" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.46%)</title><rect x="701.7" y="307.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="704.7" y="318.0"></text>
</g>
<g>
<title>enqueue_entity (2 samples, 0.46%)</title><rect x="701.7" y="291.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="704.7" y="302.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.46%)</title><rect x="701.7" y="275.0" width="5.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="704.7" y="286.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (2 samples, 0.46%)</title><rect x="701.7" y="259.0" width="5.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="704.7" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.46%)</title><rect x="701.7" y="243.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="704.7" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.46%)</title><rect x="701.7" y="227.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="704.7" y="238.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.23%)</title><rect x="701.7" y="211.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="704.7" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="701.7" y="195.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="704.7" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="701.7" y="179.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="704.7" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="701.7" y="163.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="704.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="701.7" y="147.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="704.7" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.23%)</title><rect x="701.7" y="131.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="704.7" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.23%)</title><rect x="701.7" y="115.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="704.7" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="701.7" y="99.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="704.7" y="110.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="704.4" y="211.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="707.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="704.4" y="195.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="707.4" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="704.4" y="179.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="707.4" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="704.4" y="163.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="707.4" y="174.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.23%)</title><rect x="704.4" y="147.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="707.4" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.23%)</title><rect x="704.4" y="131.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="707.4" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="704.4" y="115.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="707.4" y="126.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.23%)</title><rect x="707.1" y="323.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="710.1" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="707.1" y="307.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="710.1" y="318.0"></text>
</g>
<g>
<title>do_send_sig_info (1 samples, 0.23%)</title><rect x="707.1" y="291.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="710.1" y="302.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="707.1" y="275.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="710.1" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="707.1" y="259.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="710.1" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="707.1" y="243.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="710.1" y="254.0"></text>
</g>
<g>
<title>hw_breakpoint_exceptions_notify (1 samples, 0.23%)</title><rect x="707.1" y="227.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="710.1" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="707.1" y="211.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="710.1" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="707.1" y="195.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="710.1" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="707.1" y="179.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="710.1" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="707.1" y="163.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="710.1" y="174.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.23%)</title><rect x="707.1" y="147.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="710.1" y="158.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.23%)</title><rect x="707.1" y="131.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="710.1" y="142.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.23%)</title><rect x="709.9" y="323.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="712.9" y="334.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.23%)</title><rect x="709.9" y="307.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="712.9" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="709.9" y="291.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="712.9" y="302.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="709.9" y="275.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="712.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="709.9" y="259.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="712.9" y="270.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.23%)</title><rect x="709.9" y="243.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="712.9" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="709.9" y="227.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="712.9" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="709.9" y="211.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="712.9" y="222.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.23%)</title><rect x="712.6" y="339.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="715.6" y="350.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.23%)</title><rect x="712.6" y="323.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="715.6" y="334.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="712.6" y="307.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="715.6" y="318.0"></text>
</g>
<g>
<title>task_tick_fair (1 samples, 0.23%)</title><rect x="712.6" y="291.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="715.6" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="712.6" y="275.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="715.6" y="286.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="712.6" y="259.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="715.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="712.6" y="243.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="715.6" y="254.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.23%)</title><rect x="712.6" y="227.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="715.6" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="712.6" y="211.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="715.6" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="712.6" y="195.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="715.6" y="206.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.23%)</title><rect x="712.6" y="179.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="715.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="712.6" y="163.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="715.6" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="712.6" y="147.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="715.6" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="712.6" y="131.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="715.6" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="712.6" y="115.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="715.6" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.23%)</title><rect x="712.6" y="99.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="715.6" y="110.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.23%)</title><rect x="712.6" y="83.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="715.6" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.23%)</title><rect x="712.6" y="67.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="715.6" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.23%)</title><rect x="712.6" y="51.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="715.6" y="62.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.23%)</title><rect x="715.3" y="563.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="718.3" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.23%)</title><rect x="715.3" y="547.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="718.3" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.23%)</title><rect x="715.3" y="531.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="718.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.35 (1 samples, 0.23%)</title><rect x="715.3" y="515.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="718.3" y="526.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.23%)</title><rect x="715.3" y="499.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="718.3" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node_trace (1 samples, 0.23%)</title><rect x="715.3" y="483.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="718.3" y="494.0"></text>
</g>
<g>
<title>skb_put (1 samples, 0.23%)</title><rect x="718.0" y="563.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="721.0" y="574.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.23%)</title><rect x="720.7" y="707.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="723.7" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.23%)</title><rect x="720.7" y="691.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="723.7" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (1 samples, 0.23%)</title><rect x="720.7" y="675.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="723.7" y="686.0"></text>
</g>
<g>
<title>[worker tid=24778] (46 samples, 10.57%)</title><rect x="723.4" y="883.0" width="124.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="726.4" y="894.0">[worker tid=247..</text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.46%)</title><rect x="723.4" y="867.0" width="5.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="726.4" y="878.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (2 samples, 0.46%)</title><rect x="723.4" y="851.0" width="5.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="726.4" y="862.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (2 samples, 0.46%)</title><rect x="723.4" y="835.0" width="5.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="726.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="723.4" y="819.0" width="5.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="726.4" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="723.4" y="803.0" width="5.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="726.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="723.4" y="787.0" width="5.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="726.4" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2 samples, 0.46%)</title><rect x="723.4" y="771.0" width="5.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="726.4" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.46%)</title><rect x="723.4" y="755.0" width="5.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="726.4" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.46%)</title><rect x="723.4" y="739.0" width="5.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="726.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.46%)</title><rect x="723.4" y="723.0" width="5.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="726.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="723.4" y="707.0" width="5.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="726.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.46%)</title><rect x="723.4" y="691.0" width="5.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="726.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.46%)</title><rect x="723.4" y="675.0" width="5.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="726.4" y="686.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.46%)</title><rect x="723.4" y="659.0" width="5.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="726.4" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (2 samples, 0.46%)</title><rect x="723.4" y="643.0" width="5.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="726.4" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (2 samples, 0.46%)</title><rect x="723.4" y="627.0" width="5.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="726.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.46%)</title><rect x="723.4" y="611.0" width="5.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="726.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.46%)</title><rect x="723.4" y="595.0" width="5.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="726.4" y="606.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.46%)</title><rect x="723.4" y="579.0" width="5.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="726.4" y="590.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.46%)</title><rect x="723.4" y="563.0" width="5.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="726.4" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.46%)</title><rect x="723.4" y="547.0" width="5.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="726.4" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.46%)</title><rect x="723.4" y="531.0" width="5.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="726.4" y="542.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.46%)</title><rect x="723.4" y="515.0" width="5.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="726.4" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (44 samples, 10.11%)</title><rect x="728.9" y="867.0" width="119.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="731.9" y="878.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (44 samples, 10.11%)</title><rect x="728.9" y="851.0" width="119.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="731.9" y="862.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (44 samples, 10.11%)</title><rect x="728.9" y="835.0" width="119.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.9" y="846.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 1.15%)</title><rect x="728.9" y="819.0" width="13.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (5 samples, 1.15%)</title><rect x="728.9" y="803.0" width="13.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 1.15%)</title><rect x="728.9" y="787.0" width="13.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="731.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.92%)</title><rect x="731.6" y="771.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.92%)</title><rect x="731.6" y="755.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.6" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.92%)</title><rect x="731.6" y="739.0" width="10.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="734.6" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.23%)</title><rect x="734.3" y="723.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="737.3" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.23%)</title><rect x="734.3" y="707.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="737.3" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.46%)</title><rect x="737.0" y="723.0" width="5.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="740.0" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.46%)</title><rect x="737.0" y="707.0" width="5.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="740.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.46%)</title><rect x="737.0" y="691.0" width="5.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="740.0" y="702.0"></text>
</g>
<g>
<title>sys_setsockopt (1 samples, 0.23%)</title><rect x="739.7" y="675.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="742.7" y="686.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="739.7" y="659.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="742.7" y="670.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.23%)</title><rect x="739.7" y="643.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="742.7" y="654.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="739.7" y="627.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="742.7" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="739.7" y="611.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="742.7" y="622.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="739.7" y="595.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="742.7" y="606.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.23%)</title><rect x="739.7" y="579.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="742.7" y="590.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.23%)</title><rect x="739.7" y="563.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="742.7" y="574.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="739.7" y="547.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="742.7" y="558.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.23%)</title><rect x="739.7" y="531.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="742.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (39 samples, 8.97%)</title><rect x="742.4" y="819.0" width="105.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.4" y="830.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (39 samples, 8.97%)</title><rect x="742.4" y="803.0" width="105.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.4" y="814.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.92%)</title><rect x="742.4" y="787.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.92%)</title><rect x="742.4" y="771.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.92%)</title><rect x="742.4" y="755.0" width="10.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.92%)</title><rect x="742.4" y="739.0" width="10.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="745.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.92%)</title><rect x="742.4" y="723.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="745.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.92%)</title><rect x="742.4" y="707.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="745.4" y="718.0"></text>
</g>
<g>
<title>__send (4 samples, 0.92%)</title><rect x="742.4" y="691.0" width="10.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="745.4" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (4 samples, 0.92%)</title><rect x="742.4" y="675.0" width="10.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="745.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.92%)</title><rect x="742.4" y="659.0" width="10.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="745.4" y="670.0"></text>
</g>
<g>
<title>sys_setsockopt (3 samples, 0.69%)</title><rect x="742.4" y="643.0" width="8.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="745.4" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (3 samples, 0.69%)</title><rect x="742.4" y="627.0" width="8.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="745.4" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (3 samples, 0.69%)</title><rect x="742.4" y="611.0" width="8.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="745.4" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.69%)</title><rect x="742.4" y="595.0" width="8.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="745.4" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (3 samples, 0.69%)</title><rect x="742.4" y="579.0" width="8.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="745.4" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.46%)</title><rect x="745.1" y="563.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="748.1" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.46%)</title><rect x="745.1" y="547.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="748.1" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.46%)</title><rect x="745.1" y="531.0" width="5.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="748.1" y="542.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.46%)</title><rect x="745.1" y="515.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="748.1" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.46%)</title><rect x="745.1" y="499.0" width="5.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="748.1" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.46%)</title><rect x="745.1" y="483.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="748.1" y="494.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.46%)</title><rect x="745.1" y="467.0" width="5.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="748.1" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.46%)</title><rect x="745.1" y="451.0" width="5.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="748.1" y="462.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="750.6" y="643.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="753.6" y="654.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.23%)</title><rect x="750.6" y="627.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="753.6" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="750.6" y="611.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="753.6" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="750.6" y="595.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="753.6" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.23%)</title><rect x="750.6" y="579.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="753.6" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.23%)</title><rect x="750.6" y="563.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="753.6" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.23%)</title><rect x="750.6" y="547.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="753.6" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.23%)</title><rect x="750.6" y="531.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="753.6" y="542.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.23%)</title><rect x="750.6" y="515.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="753.6" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.23%)</title><rect x="750.6" y="499.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="753.6" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.23%)</title><rect x="750.6" y="483.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="753.6" y="494.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.23%)</title><rect x="750.6" y="467.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="753.6" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.23%)</title><rect x="750.6" y="451.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="753.6" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.23%)</title><rect x="750.6" y="435.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="753.6" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.23%)</title><rect x="750.6" y="419.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="753.6" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.23%)</title><rect x="750.6" y="403.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="753.6" y="414.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.23%)</title><rect x="750.6" y="387.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="753.6" y="398.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.23%)</title><rect x="750.6" y="371.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="753.6" y="382.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.23%)</title><rect x="750.6" y="355.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="753.6" y="366.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="750.6" y="339.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="753.6" y="350.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.23%)</title><rect x="750.6" y="323.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="753.6" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="750.6" y="307.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="753.6" y="318.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="750.6" y="291.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="753.6" y="302.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="750.6" y="275.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="753.6" y="286.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.23%)</title><rect x="750.6" y="259.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="753.6" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="750.6" y="243.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="753.6" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="750.6" y="227.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="753.6" y="238.0"></text>
</g>
<g>
<title>hw_breakpoint_exceptions_notify (1 samples, 0.23%)</title><rect x="750.6" y="211.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="753.6" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="750.6" y="195.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="753.6" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.23%)</title><rect x="750.6" y="179.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="753.6" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.23%)</title><rect x="750.6" y="163.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="753.6" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.23%)</title><rect x="750.6" y="147.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="753.6" y="158.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.23%)</title><rect x="750.6" y="131.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="753.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (16 samples, 3.68%)</title><rect x="753.3" y="787.0" width="43.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.3" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (16 samples, 3.68%)</title><rect x="753.3" y="771.0" width="43.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.3" y="782.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (16 samples, 3.68%)</title><rect x="753.3" y="755.0" width="43.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.3" y="766.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (16 samples, 3.68%)</title><rect x="753.3" y="739.0" width="43.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.3" y="750.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (16 samples, 3.68%)</title><rect x="753.3" y="723.0" width="43.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.3" y="734.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (16 samples, 3.68%)</title><rect x="753.3" y="707.0" width="43.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.3" y="718.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (13 samples, 2.99%)</title><rect x="753.3" y="691.0" width="35.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="756.3" y="702.0">Jav..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (13 samples, 2.99%)</title><rect x="753.3" y="675.0" width="35.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="756.3" y="686.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 2.99%)</title><rect x="753.3" y="659.0" width="35.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="756.3" y="670.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 2.99%)</title><rect x="753.3" y="643.0" width="35.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="756.3" y="654.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 2.99%)</title><rect x="753.3" y="627.0" width="35.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="756.3" y="638.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (12 samples, 2.76%)</title><rect x="753.3" y="611.0" width="32.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="756.3" y="622.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (12 samples, 2.76%)</title><rect x="753.3" y="595.0" width="32.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="756.3" y="606.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (3 samples, 0.69%)</title><rect x="753.3" y="579.0" width="8.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="756.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.69%)</title><rect x="753.3" y="563.0" width="8.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="756.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.69%)</title><rect x="753.3" y="547.0" width="8.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="756.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.69%)</title><rect x="753.3" y="531.0" width="8.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="756.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (3 samples, 0.69%)</title><rect x="753.3" y="515.0" width="8.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="756.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (3 samples, 0.69%)</title><rect x="753.3" y="499.0" width="8.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="756.3" y="510.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (3 samples, 0.69%)</title><rect x="753.3" y="483.0" width="8.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="756.3" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.69%)</title><rect x="753.3" y="467.0" width="8.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="756.3" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.69%)</title><rect x="753.3" y="451.0" width="8.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="756.3" y="462.0"></text>
</g>
<g>
<title>sys_write (3 samples, 0.69%)</title><rect x="753.3" y="435.0" width="8.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="756.3" y="446.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.69%)</title><rect x="753.3" y="419.0" width="8.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="756.3" y="430.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.69%)</title><rect x="753.3" y="403.0" width="8.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="756.3" y="414.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.69%)</title><rect x="753.3" y="387.0" width="8.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="756.3" y="398.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (3 samples, 0.69%)</title><rect x="753.3" y="371.0" width="8.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="756.3" y="382.0"></text>
</g>
<g>
<title>__generic_file_write_iter (2 samples, 0.46%)</title><rect x="753.3" y="355.0" width="5.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="756.3" y="366.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.23%)</title><rect x="753.3" y="339.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="756.3" y="350.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.23%)</title><rect x="753.3" y="323.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="756.3" y="334.0"></text>
</g>
<g>
<title>ext4_da_write_begin	[ext4] (1 samples, 0.23%)</title><rect x="753.3" y="307.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="756.3" y="318.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.23%)</title><rect x="753.3" y="291.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="756.3" y="302.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.23%)</title><rect x="753.3" y="275.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="756.3" y="286.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.23%)</title><rect x="756.0" y="339.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="759.0" y="350.0"></text>
</g>
<g>
<title>ext4_da_write_end	[ext4] (1 samples, 0.23%)</title><rect x="756.0" y="323.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="759.0" y="334.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.23%)</title><rect x="756.0" y="307.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="759.0" y="318.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.23%)</title><rect x="756.0" y="291.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="759.0" y="302.0"></text>
</g>
<g>
<title>up_write (1 samples, 0.23%)</title><rect x="758.7" y="355.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="761.7" y="366.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.23%)</title><rect x="761.4" y="579.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="764.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (8 samples, 1.84%)</title><rect x="764.1" y="579.0" width="21.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="767.1" y="590.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="764.1" y="563.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="767.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (7 samples, 1.61%)</title><rect x="766.8" y="563.0" width="19.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="769.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 1.61%)</title><rect x="766.8" y="547.0" width="19.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="769.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (7 samples, 1.61%)</title><rect x="766.8" y="531.0" width="19.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="769.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (7 samples, 1.61%)</title><rect x="766.8" y="515.0" width="19.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="769.8" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (7 samples, 1.61%)</title><rect x="766.8" y="499.0" width="19.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="769.8" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (6 samples, 1.38%)</title><rect x="766.8" y="483.0" width="16.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="769.8" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (5 samples, 1.15%)</title><rect x="766.8" y="467.0" width="13.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="769.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 1.15%)</title><rect x="766.8" y="451.0" width="13.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="769.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 1.15%)</title><rect x="766.8" y="435.0" width="13.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="769.8" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="766.8" y="419.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="769.8" y="430.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.23%)</title><rect x="766.8" y="403.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="769.8" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="766.8" y="387.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="769.8" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="766.8" y="371.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="769.8" y="382.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="766.8" y="355.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="769.8" y="366.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.23%)</title><rect x="766.8" y="339.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="769.8" y="350.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (4 samples, 0.92%)</title><rect x="769.5" y="419.0" width="10.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="772.5" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (4 samples, 0.92%)</title><rect x="769.5" y="403.0" width="10.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="772.5" y="414.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="769.5" y="387.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="772.5" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.46%)</title><rect x="772.3" y="387.0" width="5.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="775.3" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="777.7" y="387.0" width="2.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="780.7" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="777.7" y="371.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="780.7" y="382.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="777.7" y="355.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="780.7" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="780.4" y="467.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="783.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="780.4" y="451.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="783.4" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="780.4" y="435.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="783.4" y="446.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.23%)</title><rect x="780.4" y="419.0" width="2.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="783.4" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="780.4" y="403.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="783.4" y="414.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="780.4" y="387.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="783.4" y="398.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.23%)</title><rect x="780.4" y="371.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="783.4" y="382.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.23%)</title><rect x="783.1" y="483.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="786.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="783.1" y="467.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="786.1" y="478.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="783.1" y="451.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="786.1" y="462.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.23%)</title><rect x="783.1" y="435.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="786.1" y="446.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.23%)</title><rect x="783.1" y="419.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="786.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.23%)</title><rect x="785.8" y="611.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="788.8" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (3 samples, 0.69%)</title><rect x="788.5" y="691.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="791.5" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (3 samples, 0.69%)</title><rect x="788.5" y="675.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="791.5" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (3 samples, 0.69%)</title><rect x="788.5" y="659.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.5" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (3 samples, 0.69%)</title><rect x="788.5" y="643.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.5" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (3 samples, 0.69%)</title><rect x="788.5" y="627.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="791.5" y="638.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (2 samples, 0.46%)</title><rect x="788.5" y="611.0" width="5.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="791.5" y="622.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.46%)</title><rect x="788.5" y="595.0" width="5.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="791.5" y="606.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.23%)</title><rect x="791.2" y="579.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="794.2" y="590.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.23%)</title><rect x="794.0" y="611.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="797.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.act (19 samples, 4.37%)</title><rect x="796.7" y="787.0" width="51.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.7" y="798.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.lambda$entity$1 (19 samples, 4.37%)</title><rect x="796.7" y="771.0" width="51.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.7" y="782.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.proxy (19 samples, 4.37%)</title><rect x="796.7" y="755.0" width="51.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.7" y="766.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (19 samples, 4.37%)</title><rect x="796.7" y="739.0" width="51.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="799.7" y="750.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (19 samples, 4.37%)</title><rect x="796.7" y="723.0" width="51.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.7" y="734.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (12 samples, 2.76%)</title><rect x="796.7" y="707.0" width="32.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.7" y="718.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (12 samples, 2.76%)</title><rect x="796.7" y="691.0" width="32.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.7" y="702.0">on..</text>
</g>
<g>
<title>__libc_recv (12 samples, 2.76%)</title><rect x="796.7" y="675.0" width="32.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="799.7" y="686.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (11 samples, 2.53%)</title><rect x="799.4" y="659.0" width="29.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="802.4" y="670.0">en..</text>
</g>
<g>
<title>do_syscall_64 (11 samples, 2.53%)</title><rect x="799.4" y="643.0" width="29.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="802.4" y="654.0">do..</text>
</g>
<g>
<title>sys_setsockopt (11 samples, 2.53%)</title><rect x="799.4" y="627.0" width="29.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="802.4" y="638.0">sy..</text>
</g>
<g>
<title>sock_setsockopt (11 samples, 2.53%)</title><rect x="799.4" y="611.0" width="29.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="802.4" y="622.0">so..</text>
</g>
<g>
<title>SYSC_recvfrom (11 samples, 2.53%)</title><rect x="799.4" y="595.0" width="29.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="802.4" y="606.0">SY..</text>
</g>
<g>
<title>inet_recvmsg (11 samples, 2.53%)</title><rect x="799.4" y="579.0" width="29.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="802.4" y="590.0">in..</text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 2.53%)</title><rect x="799.4" y="563.0" width="29.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="802.4" y="574.0">tc..</text>
</g>
<g>
<title>autoremove_wake_function (5 samples, 1.15%)</title><rect x="799.4" y="547.0" width="13.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="802.4" y="558.0"></text>
</g>
<g>
<title>sk_wait_data (5 samples, 1.15%)</title><rect x="799.4" y="531.0" width="13.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="802.4" y="542.0"></text>
</g>
<g>
<title>process_timeout (4 samples, 0.92%)</title><rect x="799.4" y="515.0" width="10.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="802.4" y="526.0"></text>
</g>
<g>
<title>schedule_timeout (4 samples, 0.92%)</title><rect x="799.4" y="499.0" width="10.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="802.4" y="510.0"></text>
</g>
<g>
<title>del_timer_sync (1 samples, 0.23%)</title><rect x="802.1" y="483.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="805.1" y="494.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (1 samples, 0.23%)</title><rect x="802.1" y="467.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="805.1" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="802.1" y="451.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="805.1" y="462.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.46%)</title><rect x="804.8" y="483.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="807.8" y="494.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.46%)</title><rect x="804.8" y="467.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="807.8" y="478.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.46%)</title><rect x="804.8" y="451.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="807.8" y="462.0"></text>
</g>
<g>
<title>schedule_timeout (1 samples, 0.23%)</title><rect x="810.2" y="515.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="813.2" y="526.0"></text>
</g>
<g>
<title>tcp_prequeue_process (6 samples, 1.38%)</title><rect x="812.9" y="547.0" width="16.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="815.9" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (6 samples, 1.38%)</title><rect x="812.9" y="531.0" width="16.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="815.9" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_established (6 samples, 1.38%)</title><rect x="812.9" y="515.0" width="16.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="815.9" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.23%)</title><rect x="812.9" y="499.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="815.9" y="510.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.46%)</title><rect x="815.7" y="499.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="818.7" y="510.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.23%)</title><rect x="815.7" y="483.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="818.7" y="494.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.23%)</title><rect x="818.4" y="483.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="821.4" y="494.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.23%)</title><rect x="821.1" y="499.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="824.1" y="510.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (2 samples, 0.46%)</title><rect x="823.8" y="499.0" width="5.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="826.8" y="510.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.46%)</title><rect x="823.8" y="483.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="826.8" y="494.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.46%)</title><rect x="823.8" y="467.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="826.8" y="478.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.23%)</title><rect x="823.8" y="451.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="826.8" y="462.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.23%)</title><rect x="826.5" y="451.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="829.5" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (6 samples, 1.38%)</title><rect x="829.2" y="707.0" width="16.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="832.2" y="718.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (1 samples, 0.23%)</title><rect x="829.2" y="691.0" width="2.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="832.2" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.23%)</title><rect x="829.2" y="675.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="832.2" y="686.0"></text>
</g>
<g>
<title>__send (5 samples, 1.15%)</title><rect x="831.9" y="691.0" width="13.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="834.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (5 samples, 1.15%)</title><rect x="831.9" y="675.0" width="13.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="834.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.15%)</title><rect x="831.9" y="659.0" width="13.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="834.9" y="670.0"></text>
</g>
<g>
<title>sys_setsockopt (5 samples, 1.15%)</title><rect x="831.9" y="643.0" width="13.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="834.9" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (5 samples, 1.15%)</title><rect x="831.9" y="627.0" width="13.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="834.9" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (5 samples, 1.15%)</title><rect x="831.9" y="611.0" width="13.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="834.9" y="622.0"></text>
</g>
<g>
<title>fput (1 samples, 0.23%)</title><rect x="831.9" y="595.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="834.9" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (4 samples, 0.92%)</title><rect x="834.6" y="595.0" width="10.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="837.6" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 0.92%)</title><rect x="834.6" y="579.0" width="10.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="837.6" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.46%)</title><rect x="834.6" y="563.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="837.6" y="574.0"></text>
</g>
<g>
<title>copy_from_iter (1 samples, 0.23%)</title><rect x="834.6" y="547.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="837.6" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.23%)</title><rect x="834.6" y="531.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="837.6" y="542.0"></text>
</g>
<g>
<title>tcp_tso_segs (1 samples, 0.23%)</title><rect x="834.6" y="515.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="837.6" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.23%)</title><rect x="837.4" y="547.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="840.4" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.23%)</title><rect x="837.4" y="531.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="840.4" y="542.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.23%)</title><rect x="837.4" y="515.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="840.4" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.23%)</title><rect x="837.4" y="499.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="840.4" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.23%)</title><rect x="837.4" y="483.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="840.4" y="494.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.23%)</title><rect x="837.4" y="467.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="840.4" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.23%)</title><rect x="837.4" y="451.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="840.4" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.23%)</title><rect x="837.4" y="435.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="840.4" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.23%)</title><rect x="837.4" y="419.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="840.4" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.23%)</title><rect x="837.4" y="403.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="840.4" y="414.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.23%)</title><rect x="837.4" y="387.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="840.4" y="398.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.23%)</title><rect x="837.4" y="371.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="840.4" y="382.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.23%)</title><rect x="837.4" y="355.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="840.4" y="366.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.23%)</title><rect x="837.4" y="339.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="840.4" y="350.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.23%)</title><rect x="837.4" y="323.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="840.4" y="334.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="837.4" y="307.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="840.4" y="318.0"></text>
</g>
<g>
<title>task_tick_fair (1 samples, 0.23%)</title><rect x="837.4" y="291.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="840.4" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="837.4" y="275.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="840.4" y="286.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.23%)</title><rect x="837.4" y="259.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="840.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="837.4" y="243.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="840.4" y="254.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.23%)</title><rect x="837.4" y="227.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="840.4" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="837.4" y="211.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="840.4" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="837.4" y="195.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="840.4" y="206.0"></text>
</g>
<g>
<title>update_sd_lb_stats (1 samples, 0.23%)</title><rect x="837.4" y="179.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="840.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="837.4" y="163.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="840.4" y="174.0"></text>
</g>
<g>
<title>copy_from_iter (2 samples, 0.46%)</title><rect x="840.1" y="563.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="843.1" y="574.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.23%)</title><rect x="840.1" y="547.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="843.1" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.23%)</title><rect x="842.8" y="547.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="845.8" y="558.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.23%)</title><rect x="845.5" y="707.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="848.5" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.23%)</title><rect x="845.5" y="691.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="848.5" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (1 samples, 0.23%)</title><rect x="845.5" y="675.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.5" y="686.0"></text>
</g>
<g>
<title>[worker tid=24779] (21 samples, 4.83%)</title><rect x="848.2" y="883.0" width="57.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="851.2" y="894.0">[worke..</text>
</g>
<g>
<title>java/lang/Thread.run (21 samples, 4.83%)</title><rect x="848.2" y="867.0" width="57.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.2" y="878.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (21 samples, 4.83%)</title><rect x="848.2" y="851.0" width="57.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="851.2" y="862.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (21 samples, 4.83%)</title><rect x="848.2" y="835.0" width="57.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="851.2" y="846.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.46%)</title><rect x="848.2" y="819.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.46%)</title><rect x="848.2" y="803.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.46%)</title><rect x="848.2" y="787.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="851.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.46%)</title><rect x="848.2" y="771.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="851.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.46%)</title><rect x="848.2" y="755.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="851.2" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.46%)</title><rect x="848.2" y="739.0" width="5.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="851.2" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.23%)</title><rect x="850.9" y="723.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="853.9" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="850.9" y="707.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="853.9" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="850.9" y="691.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="853.9" y="702.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="850.9" y="675.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="853.9" y="686.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="850.9" y="659.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="853.9" y="670.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="850.9" y="643.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="853.9" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="850.9" y="627.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="853.9" y="638.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="850.9" y="611.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="853.9" y="622.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.23%)</title><rect x="850.9" y="595.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="853.9" y="606.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.23%)</title><rect x="850.9" y="579.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="853.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (19 samples, 4.37%)</title><rect x="853.6" y="819.0" width="51.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="856.6" y="830.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (19 samples, 4.37%)</title><rect x="853.6" y="803.0" width="51.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="856.6" y="814.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.46%)</title><rect x="853.6" y="787.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="856.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.46%)</title><rect x="853.6" y="771.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.46%)</title><rect x="853.6" y="755.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.46%)</title><rect x="853.6" y="739.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="856.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.46%)</title><rect x="853.6" y="723.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="856.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.46%)</title><rect x="853.6" y="707.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="856.6" y="718.0"></text>
</g>
<g>
<title>__send (2 samples, 0.46%)</title><rect x="853.6" y="691.0" width="5.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="856.6" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.46%)</title><rect x="853.6" y="675.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="856.6" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.46%)</title><rect x="853.6" y="659.0" width="5.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="856.6" y="670.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.46%)</title><rect x="853.6" y="643.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="856.6" y="654.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.46%)</title><rect x="853.6" y="627.0" width="5.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="856.6" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.46%)</title><rect x="853.6" y="611.0" width="5.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="856.6" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.46%)</title><rect x="853.6" y="595.0" width="5.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="856.6" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.46%)</title><rect x="853.6" y="579.0" width="5.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="856.6" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.46%)</title><rect x="853.6" y="563.0" width="5.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="856.6" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.46%)</title><rect x="853.6" y="547.0" width="5.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="856.6" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.23%)</title><rect x="853.6" y="531.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="856.6" y="542.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.23%)</title><rect x="853.6" y="515.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="856.6" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.23%)</title><rect x="853.6" y="499.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="856.6" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.23%)</title><rect x="853.6" y="483.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="856.6" y="494.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.23%)</title><rect x="853.6" y="467.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="856.6" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.23%)</title><rect x="853.6" y="451.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="856.6" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.23%)</title><rect x="853.6" y="435.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="856.6" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.23%)</title><rect x="853.6" y="419.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="856.6" y="430.0"></text>
</g>
<g>
<title>tcp_init_tso_segs (1 samples, 0.23%)</title><rect x="856.3" y="531.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="859.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (17 samples, 3.91%)</title><rect x="859.1" y="787.0" width="46.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="862.1" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (17 samples, 3.91%)</title><rect x="859.1" y="771.0" width="46.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="862.1" y="782.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (17 samples, 3.91%)</title><rect x="859.1" y="755.0" width="46.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="862.1" y="766.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (17 samples, 3.91%)</title><rect x="859.1" y="739.0" width="46.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="862.1" y="750.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (17 samples, 3.91%)</title><rect x="859.1" y="723.0" width="46.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="862.1" y="734.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (17 samples, 3.91%)</title><rect x="859.1" y="707.0" width="46.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="862.1" y="718.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (11 samples, 2.53%)</title><rect x="859.1" y="691.0" width="29.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="862.1" y="702.0">Ja..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (11 samples, 2.53%)</title><rect x="859.1" y="675.0" width="29.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="862.1" y="686.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (11 samples, 2.53%)</title><rect x="859.1" y="659.0" width="29.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="862.1" y="670.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (11 samples, 2.53%)</title><rect x="859.1" y="643.0" width="29.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="862.1" y="654.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (11 samples, 2.53%)</title><rect x="859.1" y="627.0" width="29.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="862.1" y="638.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (11 samples, 2.53%)</title><rect x="859.1" y="611.0" width="29.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="862.1" y="622.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (11 samples, 2.53%)</title><rect x="859.1" y="595.0" width="29.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="862.1" y="606.0">ro..</text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (1 samples, 0.23%)</title><rect x="861.8" y="579.0" width="2.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="864.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.23%)</title><rect x="864.5" y="579.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="867.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (2 samples, 0.46%)</title><rect x="867.2" y="579.0" width="5.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="870.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (2 samples, 0.46%)</title><rect x="867.2" y="563.0" width="5.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="870.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="867.2" y="547.0" width="5.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="870.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.46%)</title><rect x="867.2" y="531.0" width="5.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="870.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.46%)</title><rect x="867.2" y="515.0" width="5.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="870.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.46%)</title><rect x="867.2" y="499.0" width="5.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="870.2" y="510.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (2 samples, 0.46%)</title><rect x="867.2" y="483.0" width="5.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="870.2" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.46%)</title><rect x="867.2" y="467.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="870.2" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.46%)</title><rect x="867.2" y="451.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="870.2" y="462.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.46%)</title><rect x="867.2" y="435.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="870.2" y="446.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.46%)</title><rect x="867.2" y="419.0" width="5.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="870.2" y="430.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.46%)</title><rect x="867.2" y="403.0" width="5.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="870.2" y="414.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.46%)</title><rect x="867.2" y="387.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="870.2" y="398.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (2 samples, 0.46%)</title><rect x="867.2" y="371.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="870.2" y="382.0"></text>
</g>
<g>
<title>__generic_file_write_iter (2 samples, 0.46%)</title><rect x="867.2" y="355.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="870.2" y="366.0"></text>
</g>
<g>
<title>generic_perform_write (2 samples, 0.46%)</title><rect x="867.2" y="339.0" width="5.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="870.2" y="350.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (1 samples, 0.23%)</title><rect x="867.2" y="323.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="870.2" y="334.0"></text>
</g>
<g>
<title>ext4_da_write_end	[ext4] (1 samples, 0.23%)</title><rect x="869.9" y="323.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="872.9" y="334.0"></text>
</g>
<g>
<title>__ext4_journal_stop	[ext4] (1 samples, 0.23%)</title><rect x="869.9" y="307.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="872.9" y="318.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.23%)</title><rect x="869.9" y="291.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="872.9" y="302.0"></text>
</g>
<g>
<title>__ext4_journal_stop	[ext4] (1 samples, 0.23%)</title><rect x="869.9" y="275.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="872.9" y="286.0"></text>
</g>
<g>
<title>jbd2_journal_stop	[jbd2] (1 samples, 0.23%)</title><rect x="869.9" y="259.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="872.9" y="270.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (6 samples, 1.38%)</title><rect x="872.6" y="579.0" width="16.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="875.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 1.38%)</title><rect x="872.6" y="563.0" width="16.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="875.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 1.38%)</title><rect x="872.6" y="547.0" width="16.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="875.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 1.38%)</title><rect x="872.6" y="531.0" width="16.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="875.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (6 samples, 1.38%)</title><rect x="872.6" y="515.0" width="16.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="875.6" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.69%)</title><rect x="872.6" y="499.0" width="8.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="875.6" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (2 samples, 0.46%)</title><rect x="872.6" y="483.0" width="5.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="875.6" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (2 samples, 0.46%)</title><rect x="872.6" y="467.0" width="5.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="875.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.46%)</title><rect x="872.6" y="451.0" width="5.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="875.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.46%)</title><rect x="872.6" y="435.0" width="5.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="875.6" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="872.6" y="419.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="875.6" y="430.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.23%)</title><rect x="872.6" y="403.0" width="2.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="875.6" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="872.6" y="387.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="875.6" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="872.6" y="371.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="875.6" y="382.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="872.6" y="355.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="875.6" y="366.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="875.3" y="419.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="878.3" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.23%)</title><rect x="875.3" y="403.0" width="2.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="878.3" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="875.3" y="387.0" width="2.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="878.3" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.23%)</title><rect x="878.0" y="483.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="881.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="878.0" y="467.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="881.0" y="478.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="878.0" y="451.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="881.0" y="462.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.23%)</title><rect x="878.0" y="435.0" width="2.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="881.0" y="446.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="878.0" y="419.0" width="2.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="881.0" y="430.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="878.0" y="403.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="881.0" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.46%)</title><rect x="880.8" y="499.0" width="5.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="883.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (2 samples, 0.46%)</title><rect x="880.8" y="483.0" width="5.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="883.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.23%)</title><rect x="886.2" y="499.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="889.2" y="510.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.23%)</title><rect x="888.9" y="691.0" width="2.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="891.9" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.23%)</title><rect x="891.6" y="691.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.6" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 0.92%)</title><rect x="894.3" y="691.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="897.3" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 0.92%)</title><rect x="894.3" y="675.0" width="10.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="897.3" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (2 samples, 0.46%)</title><rect x="894.3" y="659.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.3" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.46%)</title><rect x="894.3" y="643.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="897.3" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1 samples, 0.23%)</title><rect x="897.0" y="627.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.0" y="638.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (1 samples, 0.23%)</title><rect x="897.0" y="611.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="900.0" y="622.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.23%)</title><rect x="897.0" y="595.0" width="2.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="900.0" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.23%)</title><rect x="897.0" y="579.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="900.0" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (2 samples, 0.46%)</title><rect x="899.7" y="659.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.46%)</title><rect x="899.7" y="643.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.7" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.46%)</title><rect x="899.7" y="627.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.7" y="638.0"></text>
</g>
<g>
<title>[worker tid=24780] (21 samples, 4.83%)</title><rect x="905.2" y="883.0" width="56.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="908.2" y="894.0">[worke..</text>
</g>
<g>
<title>java/lang/Thread.run (21 samples, 4.83%)</title><rect x="905.2" y="867.0" width="56.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="908.2" y="878.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (21 samples, 4.83%)</title><rect x="905.2" y="851.0" width="56.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="908.2" y="862.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (21 samples, 4.83%)</title><rect x="905.2" y="835.0" width="56.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.2" y="846.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.23%)</title><rect x="905.2" y="819.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="908.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.23%)</title><rect x="905.2" y="803.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="908.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.23%)</title><rect x="905.2" y="787.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.23%)</title><rect x="905.2" y="771.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.23%)</title><rect x="905.2" y="755.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.2" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.23%)</title><rect x="905.2" y="739.0" width="2.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="908.2" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.23%)</title><rect x="905.2" y="723.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="908.2" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="905.2" y="707.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="908.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="905.2" y="691.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="908.2" y="702.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="905.2" y="675.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="908.2" y="686.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="905.2" y="659.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="908.2" y="670.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="905.2" y="643.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="908.2" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="905.2" y="627.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="908.2" y="638.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="905.2" y="611.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="908.2" y="622.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.23%)</title><rect x="905.2" y="595.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="908.2" y="606.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.23%)</title><rect x="905.2" y="579.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="908.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (20 samples, 4.60%)</title><rect x="907.9" y="819.0" width="54.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="910.9" y="830.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (20 samples, 4.60%)</title><rect x="907.9" y="803.0" width="54.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="910.9" y="814.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.46%)</title><rect x="907.9" y="787.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="910.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.46%)</title><rect x="907.9" y="771.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="910.9" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.46%)</title><rect x="907.9" y="755.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="910.9" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.46%)</title><rect x="907.9" y="739.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="910.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.46%)</title><rect x="907.9" y="723.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="910.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.46%)</title><rect x="907.9" y="707.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="910.9" y="718.0"></text>
</g>
<g>
<title>__send (2 samples, 0.46%)</title><rect x="907.9" y="691.0" width="5.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="910.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.46%)</title><rect x="907.9" y="675.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="910.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.46%)</title><rect x="907.9" y="659.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="910.9" y="670.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.46%)</title><rect x="907.9" y="643.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="910.9" y="654.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.46%)</title><rect x="907.9" y="627.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="910.9" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.46%)</title><rect x="907.9" y="611.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="910.9" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.46%)</title><rect x="907.9" y="595.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="910.9" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.46%)</title><rect x="907.9" y="579.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="910.9" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.46%)</title><rect x="907.9" y="563.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="910.9" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.46%)</title><rect x="907.9" y="547.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="910.9" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_stop	[ext4] (1 samples, 0.23%)</title><rect x="907.9" y="531.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="910.9" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.23%)</title><rect x="907.9" y="515.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="910.9" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.23%)</title><rect x="910.6" y="531.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="913.6" y="542.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.23%)</title><rect x="910.6" y="515.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="913.6" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.23%)</title><rect x="910.6" y="499.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="913.6" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.23%)</title><rect x="910.6" y="483.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="913.6" y="494.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.23%)</title><rect x="910.6" y="467.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="913.6" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.23%)</title><rect x="910.6" y="451.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="913.6" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.23%)</title><rect x="910.6" y="435.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="913.6" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.23%)</title><rect x="910.6" y="419.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="913.6" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.23%)</title><rect x="910.6" y="403.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="913.6" y="414.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.23%)</title><rect x="910.6" y="387.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="913.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (18 samples, 4.14%)</title><rect x="913.3" y="787.0" width="48.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="916.3" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (18 samples, 4.14%)</title><rect x="913.3" y="771.0" width="48.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="916.3" y="782.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (18 samples, 4.14%)</title><rect x="913.3" y="755.0" width="48.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="916.3" y="766.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (18 samples, 4.14%)</title><rect x="913.3" y="739.0" width="48.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="916.3" y="750.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (18 samples, 4.14%)</title><rect x="913.3" y="723.0" width="48.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="916.3" y="734.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (18 samples, 4.14%)</title><rect x="913.3" y="707.0" width="48.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.3" y="718.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (12 samples, 2.76%)</title><rect x="913.3" y="691.0" width="32.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="916.3" y="702.0">Ja..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (12 samples, 2.76%)</title><rect x="913.3" y="675.0" width="32.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="916.3" y="686.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 2.76%)</title><rect x="913.3" y="659.0" width="32.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="916.3" y="670.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 2.76%)</title><rect x="913.3" y="643.0" width="32.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="916.3" y="654.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 2.76%)</title><rect x="913.3" y="627.0" width="32.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="916.3" y="638.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (12 samples, 2.76%)</title><rect x="913.3" y="611.0" width="32.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="916.3" y="622.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (12 samples, 2.76%)</title><rect x="913.3" y="595.0" width="32.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="916.3" y="606.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (5 samples, 1.15%)</title><rect x="916.0" y="579.0" width="13.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="919.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (5 samples, 1.15%)</title><rect x="916.0" y="563.0" width="13.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="919.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (5 samples, 1.15%)</title><rect x="916.0" y="547.0" width="13.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="919.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (5 samples, 1.15%)</title><rect x="916.0" y="531.0" width="13.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="919.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (5 samples, 1.15%)</title><rect x="916.0" y="515.0" width="13.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="919.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (4 samples, 0.92%)</title><rect x="918.7" y="499.0" width="10.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="921.7" y="510.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (4 samples, 0.92%)</title><rect x="918.7" y="483.0" width="10.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="921.7" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (4 samples, 0.92%)</title><rect x="918.7" y="467.0" width="10.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="921.7" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.92%)</title><rect x="918.7" y="451.0" width="10.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="921.7" y="462.0"></text>
</g>
<g>
<title>sys_write (4 samples, 0.92%)</title><rect x="918.7" y="435.0" width="10.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="921.7" y="446.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.92%)</title><rect x="918.7" y="419.0" width="10.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="921.7" y="430.0"></text>
</g>
<g>
<title>new_sync_write (4 samples, 0.92%)</title><rect x="918.7" y="403.0" width="10.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="921.7" y="414.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.69%)</title><rect x="921.4" y="387.0" width="8.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="924.4" y="398.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (3 samples, 0.69%)</title><rect x="921.4" y="371.0" width="8.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="924.4" y="382.0"></text>
</g>
<g>
<title>__generic_file_write_iter (3 samples, 0.69%)</title><rect x="921.4" y="355.0" width="8.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="924.4" y="366.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.23%)</title><rect x="921.4" y="339.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="924.4" y="350.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.23%)</title><rect x="921.4" y="323.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="924.4" y="334.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.23%)</title><rect x="924.2" y="339.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="927.2" y="350.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.23%)</title><rect x="924.2" y="323.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="927.2" y="334.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.23%)</title><rect x="924.2" y="307.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="927.2" y="318.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.23%)</title><rect x="924.2" y="291.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="927.2" y="302.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.23%)</title><rect x="924.2" y="275.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="927.2" y="286.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="924.2" y="259.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="927.2" y="270.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (1 samples, 0.23%)</title><rect x="924.2" y="243.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="927.2" y="254.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="924.2" y="227.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="927.2" y="238.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access	[ext4] (1 samples, 0.23%)</title><rect x="924.2" y="211.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="927.2" y="222.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty	[ext4] (1 samples, 0.23%)</title><rect x="924.2" y="195.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="927.2" y="206.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata	[ext4] (1 samples, 0.23%)</title><rect x="924.2" y="179.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="927.2" y="190.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.23%)</title><rect x="926.9" y="339.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="929.9" y="350.0"></text>
</g>
<g>
<title>ext4_da_write_end	[ext4] (1 samples, 0.23%)</title><rect x="926.9" y="323.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="929.9" y="334.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.23%)</title><rect x="926.9" y="307.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="929.9" y="318.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.23%)</title><rect x="926.9" y="291.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="929.9" y="302.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="926.9" y="275.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="929.9" y="286.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (1 samples, 0.23%)</title><rect x="926.9" y="259.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="929.9" y="270.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="926.9" y="243.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="929.9" y="254.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write	[ext4] (1 samples, 0.23%)</title><rect x="926.9" y="227.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="929.9" y="238.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="926.9" y="211.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="929.9" y="222.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc	[ext4] (1 samples, 0.23%)</title><rect x="926.9" y="195.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="929.9" y="206.0"></text>
</g>
<g>
<title>__switch_to_asm (1 samples, 0.23%)</title><rect x="926.9" y="179.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="929.9" y="190.0"></text>
</g>
<g>
<title>group_sched_in (1 samples, 0.23%)</title><rect x="926.9" y="163.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="929.9" y="174.0"></text>
</g>
<g>
<title>perf_pmu_nop_int (1 samples, 0.23%)</title><rect x="926.9" y="147.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="929.9" y="158.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.23%)</title><rect x="926.9" y="131.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="929.9" y="142.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.23%)</title><rect x="926.9" y="115.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="929.9" y="126.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.23%)</title><rect x="926.9" y="99.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="929.9" y="110.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (6 samples, 1.38%)</title><rect x="929.6" y="579.0" width="16.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="932.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 1.38%)</title><rect x="929.6" y="563.0" width="16.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="932.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 1.38%)</title><rect x="929.6" y="547.0" width="16.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="932.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.23%)</title><rect x="929.6" y="531.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="932.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (5 samples, 1.15%)</title><rect x="932.3" y="531.0" width="13.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="935.3" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.23%)</title><rect x="935.0" y="515.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="938.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (3 samples, 0.69%)</title><rect x="937.7" y="515.0" width="8.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="940.7" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.69%)</title><rect x="937.7" y="499.0" width="8.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="940.7" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (3 samples, 0.69%)</title><rect x="937.7" y="483.0" width="8.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="940.7" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (1 samples, 0.23%)</title><rect x="940.4" y="467.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="943.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="940.4" y="451.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="943.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="940.4" y="435.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="943.4" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="940.4" y="419.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="943.4" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.23%)</title><rect x="940.4" y="403.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="943.4" y="414.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.23%)</title><rect x="940.4" y="387.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="943.4" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="943.1" y="467.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="946.1" y="478.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.23%)</title><rect x="943.1" y="451.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="946.1" y="462.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.23%)</title><rect x="945.9" y="691.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="948.9" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (5 samples, 1.15%)</title><rect x="948.6" y="691.0" width="13.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="951.6" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (5 samples, 1.15%)</title><rect x="948.6" y="675.0" width="13.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="951.6" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (4 samples, 0.92%)</title><rect x="948.6" y="659.0" width="10.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="951.6" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 0.92%)</title><rect x="948.6" y="643.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.6" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 0.92%)</title><rect x="948.6" y="627.0" width="10.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="951.6" y="638.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (4 samples, 0.92%)</title><rect x="948.6" y="611.0" width="10.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="951.6" y="622.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.92%)</title><rect x="948.6" y="595.0" width="10.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="951.6" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.23%)</title><rect x="948.6" y="579.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="951.6" y="590.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.69%)</title><rect x="951.3" y="579.0" width="8.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="954.3" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.46%)</title><rect x="954.0" y="563.0" width="5.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="957.0" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.46%)</title><rect x="954.0" y="547.0" width="5.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="957.0" y="558.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.23%)</title><rect x="956.7" y="531.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="959.7" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.23%)</title><rect x="956.7" y="515.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="959.7" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (1 samples, 0.23%)</title><rect x="959.4" y="659.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="962.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.23%)</title><rect x="959.4" y="643.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="962.4" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.23%)</title><rect x="959.4" y="627.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="962.4" y="638.0"></text>
</g>
<g>
<title>[worker tid=24781] (21 samples, 4.83%)</title><rect x="962.1" y="883.0" width="57.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="965.1" y="894.0">[worke..</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.23%)</title><rect x="962.1" y="867.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="965.1" y="878.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.23%)</title><rect x="962.1" y="851.0" width="2.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="965.1" y="862.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.23%)</title><rect x="962.1" y="835.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="965.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="962.1" y="819.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="965.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="962.1" y="803.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="965.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="962.1" y="787.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="965.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.23%)</title><rect x="962.1" y="771.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="965.1" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.23%)</title><rect x="962.1" y="755.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="965.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.23%)</title><rect x="962.1" y="739.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="965.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.23%)</title><rect x="962.1" y="723.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="965.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="962.1" y="707.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="965.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.23%)</title><rect x="962.1" y="691.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="965.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.23%)</title><rect x="962.1" y="675.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="965.1" y="686.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.23%)</title><rect x="962.1" y="659.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="965.1" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (1 samples, 0.23%)</title><rect x="962.1" y="643.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="965.1" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (1 samples, 0.23%)</title><rect x="962.1" y="627.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="965.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="962.1" y="611.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="965.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="962.1" y="595.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="965.1" y="606.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="962.1" y="579.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="965.1" y="590.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.23%)</title><rect x="962.1" y="563.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="965.1" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="962.1" y="547.0" width="2.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="965.1" y="558.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.23%)</title><rect x="962.1" y="531.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="965.1" y="542.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.23%)</title><rect x="964.9" y="867.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="967.9" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.run (19 samples, 4.37%)</title><rect x="967.6" y="867.0" width="51.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="970.6" y="878.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (19 samples, 4.37%)</title><rect x="967.6" y="851.0" width="51.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="970.6" y="862.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (19 samples, 4.37%)</title><rect x="967.6" y="835.0" width="51.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.6" y="846.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.92%)</title><rect x="967.6" y="819.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="970.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (4 samples, 0.92%)</title><rect x="967.6" y="803.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="970.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 0.92%)</title><rect x="967.6" y="787.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="970.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.92%)</title><rect x="967.6" y="771.0" width="10.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="970.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.92%)</title><rect x="967.6" y="755.0" width="10.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="970.6" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.92%)</title><rect x="967.6" y="739.0" width="10.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="970.6" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.23%)</title><rect x="970.3" y="723.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="973.3" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.23%)</title><rect x="970.3" y="707.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="973.3" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.46%)</title><rect x="973.0" y="723.0" width="5.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="976.0" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.46%)</title><rect x="973.0" y="707.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="976.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.46%)</title><rect x="973.0" y="691.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="976.0" y="702.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.46%)</title><rect x="973.0" y="675.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="976.0" y="686.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.46%)</title><rect x="973.0" y="659.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="976.0" y="670.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.46%)</title><rect x="973.0" y="643.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="976.0" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.46%)</title><rect x="973.0" y="627.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="976.0" y="638.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.46%)</title><rect x="973.0" y="611.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="976.0" y="622.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.46%)</title><rect x="973.0" y="595.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="976.0" y="606.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.46%)</title><rect x="973.0" y="579.0" width="5.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="976.0" y="590.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.46%)</title><rect x="973.0" y="563.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="976.0" y="574.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.46%)</title><rect x="973.0" y="547.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="976.0" y="558.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.46%)</title><rect x="973.0" y="531.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="976.0" y="542.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.46%)</title><rect x="973.0" y="515.0" width="5.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="976.0" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.46%)</title><rect x="973.0" y="499.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="976.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (15 samples, 3.45%)</title><rect x="978.4" y="819.0" width="40.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="981.4" y="830.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (15 samples, 3.45%)</title><rect x="978.4" y="803.0" width="40.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="981.4" y="814.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.46%)</title><rect x="978.4" y="787.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="981.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.23%)</title><rect x="978.4" y="771.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="981.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.23%)</title><rect x="978.4" y="755.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="981.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.23%)</title><rect x="978.4" y="739.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="981.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.23%)</title><rect x="978.4" y="723.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.23%)</title><rect x="978.4" y="707.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="981.4" y="718.0"></text>
</g>
<g>
<title>__send (1 samples, 0.23%)</title><rect x="978.4" y="691.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="981.4" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="978.4" y="675.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="981.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="978.4" y="659.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="981.4" y="670.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="978.4" y="643.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="981.4" y="654.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.23%)</title><rect x="978.4" y="627.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="981.4" y="638.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.23%)</title><rect x="978.4" y="611.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="981.4" y="622.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="978.4" y="595.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="981.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.23%)</title><rect x="981.1" y="771.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="984.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.23%)</title><rect x="981.1" y="755.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="984.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.23%)</title><rect x="981.1" y="739.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="984.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="981.1" y="723.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="984.1" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.23%)</title><rect x="981.1" y="707.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="984.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (13 samples, 2.99%)</title><rect x="983.8" y="787.0" width="35.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="986.8" y="798.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (13 samples, 2.99%)</title><rect x="983.8" y="771.0" width="35.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="986.8" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (13 samples, 2.99%)</title><rect x="983.8" y="755.0" width="35.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="986.8" y="766.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (13 samples, 2.99%)</title><rect x="983.8" y="739.0" width="35.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="986.8" y="750.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (13 samples, 2.99%)</title><rect x="983.8" y="723.0" width="35.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="986.8" y="734.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (13 samples, 2.99%)</title><rect x="983.8" y="707.0" width="35.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="986.8" y="718.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (7 samples, 1.61%)</title><rect x="983.8" y="691.0" width="19.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="986.8" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (7 samples, 1.61%)</title><rect x="983.8" y="675.0" width="19.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="986.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 1.61%)</title><rect x="983.8" y="659.0" width="19.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="986.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 1.61%)</title><rect x="983.8" y="643.0" width="19.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="986.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 1.61%)</title><rect x="983.8" y="627.0" width="19.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="986.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (7 samples, 1.61%)</title><rect x="983.8" y="611.0" width="19.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="986.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (7 samples, 1.61%)</title><rect x="983.8" y="595.0" width="19.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="986.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (6 samples, 1.38%)</title><rect x="983.8" y="579.0" width="16.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="986.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 1.38%)</title><rect x="983.8" y="563.0" width="16.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="986.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 1.38%)</title><rect x="983.8" y="547.0" width="16.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="986.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 1.38%)</title><rect x="983.8" y="531.0" width="16.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="986.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (5 samples, 1.15%)</title><rect x="983.8" y="515.0" width="13.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="986.8" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (1 samples, 0.23%)</title><rect x="983.8" y="499.0" width="2.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="986.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.23%)</title><rect x="983.8" y="483.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="986.8" y="494.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.92%)</title><rect x="986.6" y="499.0" width="10.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="989.6" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (3 samples, 0.69%)</title><rect x="986.6" y="483.0" width="8.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="989.6" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (2 samples, 0.46%)</title><rect x="989.3" y="467.0" width="5.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="992.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.46%)</title><rect x="989.3" y="451.0" width="5.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="992.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.46%)</title><rect x="989.3" y="435.0" width="5.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="992.3" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="989.3" y="419.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="992.3" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.23%)</title><rect x="989.3" y="403.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="992.3" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="989.3" y="387.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="992.3" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="989.3" y="371.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="992.3" y="382.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="989.3" y="355.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="992.3" y="366.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.23%)</title><rect x="989.3" y="339.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="992.3" y="350.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.23%)</title><rect x="992.0" y="419.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="995.0" y="430.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.23%)</title><rect x="992.0" y="403.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="995.0" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.23%)</title><rect x="994.7" y="483.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="997.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="994.7" y="467.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="997.7" y="478.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="994.7" y="451.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="997.7" y="462.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.23%)</title><rect x="994.7" y="435.0" width="2.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="997.7" y="446.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="994.7" y="419.0" width="2.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="997.7" y="430.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.23%)</title><rect x="994.7" y="403.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="997.7" y="414.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::get_long() (1 samples, 0.23%)</title><rect x="994.7" y="387.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="997.7" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (1 samples, 0.23%)</title><rect x="997.4" y="515.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1000.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.23%)</title><rect x="1000.1" y="579.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1003.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.23%)</title><rect x="1000.1" y="563.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1003.1" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (2 samples, 0.46%)</title><rect x="1002.8" y="691.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1005.8" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 0.92%)</title><rect x="1008.3" y="691.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1011.3" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 0.92%)</title><rect x="1008.3" y="675.0" width="10.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1011.3" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (3 samples, 0.69%)</title><rect x="1008.3" y="659.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1011.3" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (3 samples, 0.69%)</title><rect x="1008.3" y="643.0" width="8.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1011.3" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (3 samples, 0.69%)</title><rect x="1008.3" y="627.0" width="8.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1011.3" y="638.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (3 samples, 0.69%)</title><rect x="1008.3" y="611.0" width="8.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1011.3" y="622.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="1008.3" y="595.0" width="2.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1011.3" y="606.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.23%)</title><rect x="1011.0" y="595.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1014.0" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.23%)</title><rect x="1011.0" y="579.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1014.0" y="590.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.23%)</title><rect x="1013.7" y="595.0" width="2.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1016.7" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.23%)</title><rect x="1013.7" y="579.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1016.7" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (1 samples, 0.23%)</title><rect x="1016.4" y="659.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1019.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.23%)</title><rect x="1016.4" y="643.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1019.4" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.23%)</title><rect x="1016.4" y="627.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1019.4" y="638.0"></text>
</g>
<g>
<title>[worker tid=24782] (21 samples, 4.83%)</title><rect x="1019.1" y="883.0" width="57.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1022.1" y="894.0">[worke..</text>
</g>
<g>
<title>java/lang/Thread.run (21 samples, 4.83%)</title><rect x="1019.1" y="867.0" width="57.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1022.1" y="878.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (21 samples, 4.83%)</title><rect x="1019.1" y="851.0" width="57.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1022.1" y="862.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (21 samples, 4.83%)</title><rect x="1019.1" y="835.0" width="57.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1022.1" y="846.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.23%)</title><rect x="1019.1" y="819.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1022.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.23%)</title><rect x="1019.1" y="803.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1022.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.23%)</title><rect x="1019.1" y="787.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1022.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.23%)</title><rect x="1019.1" y="771.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1022.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (20 samples, 4.60%)</title><rect x="1021.8" y="819.0" width="54.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1024.8" y="830.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (20 samples, 4.60%)</title><rect x="1021.8" y="803.0" width="54.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1024.8" y="814.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.69%)</title><rect x="1021.8" y="787.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1024.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.69%)</title><rect x="1021.8" y="771.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1024.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.23%)</title><rect x="1021.8" y="755.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1024.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.46%)</title><rect x="1024.5" y="755.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1027.5" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.46%)</title><rect x="1024.5" y="739.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1027.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.46%)</title><rect x="1024.5" y="723.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1027.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.46%)</title><rect x="1024.5" y="707.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1027.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="1024.5" y="691.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1027.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="1024.5" y="675.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1027.5" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.23%)</title><rect x="1024.5" y="659.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1027.5" y="670.0"></text>
</g>
<g>
<title>__send (1 samples, 0.23%)</title><rect x="1027.2" y="691.0" width="2.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1030.2" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="1027.2" y="675.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1030.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="1027.2" y="659.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1030.2" y="670.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="1027.2" y="643.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1030.2" y="654.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.23%)</title><rect x="1027.2" y="627.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1030.2" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="1027.2" y="611.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1030.2" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="1027.2" y="595.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1030.2" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.23%)</title><rect x="1027.2" y="579.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1030.2" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.23%)</title><rect x="1027.2" y="563.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1030.2" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.23%)</title><rect x="1027.2" y="547.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1030.2" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.23%)</title><rect x="1027.2" y="531.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1030.2" y="542.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.23%)</title><rect x="1027.2" y="515.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1030.2" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.23%)</title><rect x="1027.2" y="499.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1030.2" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.23%)</title><rect x="1027.2" y="483.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1030.2" y="494.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.23%)</title><rect x="1027.2" y="467.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1030.2" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.23%)</title><rect x="1027.2" y="451.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1030.2" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.23%)</title><rect x="1027.2" y="435.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1030.2" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.23%)</title><rect x="1027.2" y="419.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1030.2" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.23%)</title><rect x="1027.2" y="403.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1030.2" y="414.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.23%)</title><rect x="1027.2" y="387.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1030.2" y="398.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.23%)</title><rect x="1027.2" y="371.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1030.2" y="382.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.23%)</title><rect x="1027.2" y="355.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1030.2" y="366.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.23%)</title><rect x="1027.2" y="339.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1030.2" y="350.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.23%)</title><rect x="1027.2" y="323.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1030.2" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.23%)</title><rect x="1027.2" y="307.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1030.2" y="318.0"></text>
</g>
<g>
<title>do_send_sig_info (1 samples, 0.23%)</title><rect x="1027.2" y="291.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1030.2" y="302.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.23%)</title><rect x="1027.2" y="275.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1030.2" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.23%)</title><rect x="1027.2" y="259.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1030.2" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.23%)</title><rect x="1027.2" y="243.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1030.2" y="254.0"></text>
</g>
<g>
<title>hw_breakpoint_exceptions_notify (1 samples, 0.23%)</title><rect x="1027.2" y="227.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1030.2" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="1027.2" y="211.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1030.2" y="222.0"></text>
</g>
<g>
<title>tcp_prequeue (1 samples, 0.23%)</title><rect x="1027.2" y="195.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1030.2" y="206.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="1027.2" y="179.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1030.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (17 samples, 3.91%)</title><rect x="1030.0" y="787.0" width="46.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1033.0" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (17 samples, 3.91%)</title><rect x="1030.0" y="771.0" width="46.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1033.0" y="782.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (17 samples, 3.91%)</title><rect x="1030.0" y="755.0" width="46.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.0" y="766.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (17 samples, 3.91%)</title><rect x="1030.0" y="739.0" width="46.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1033.0" y="750.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (16 samples, 3.68%)</title><rect x="1030.0" y="723.0" width="43.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.0" y="734.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (16 samples, 3.68%)</title><rect x="1030.0" y="707.0" width="43.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1033.0" y="718.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (13 samples, 2.99%)</title><rect x="1030.0" y="691.0" width="35.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1033.0" y="702.0">Jav..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (13 samples, 2.99%)</title><rect x="1030.0" y="675.0" width="35.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1033.0" y="686.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 2.99%)</title><rect x="1030.0" y="659.0" width="35.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1033.0" y="670.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 2.99%)</title><rect x="1030.0" y="643.0" width="35.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1033.0" y="654.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 2.99%)</title><rect x="1030.0" y="627.0" width="35.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1033.0" y="638.0">roc..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.23%)</title><rect x="1030.0" y="611.0" width="2.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1033.0" y="622.0"></text>
</g>
<g>
<title>_init (1 samples, 0.23%)</title><rect x="1032.7" y="611.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1035.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (11 samples, 2.53%)</title><rect x="1035.4" y="611.0" width="29.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1038.4" y="622.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (10 samples, 2.30%)</title><rect x="1035.4" y="595.0" width="27.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1038.4" y="606.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.23%)</title><rect x="1035.4" y="579.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1038.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (3 samples, 0.69%)</title><rect x="1038.1" y="579.0" width="8.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1041.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.69%)</title><rect x="1038.1" y="563.0" width="8.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1041.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.69%)</title><rect x="1038.1" y="547.0" width="8.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1041.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.69%)</title><rect x="1038.1" y="531.0" width="8.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1041.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (3 samples, 0.69%)</title><rect x="1038.1" y="515.0" width="8.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1041.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (3 samples, 0.69%)</title><rect x="1038.1" y="499.0" width="8.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1041.1" y="510.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (3 samples, 0.69%)</title><rect x="1038.1" y="483.0" width="8.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1041.1" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.69%)</title><rect x="1038.1" y="467.0" width="8.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1041.1" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.69%)</title><rect x="1038.1" y="451.0" width="8.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1041.1" y="462.0"></text>
</g>
<g>
<title>sys_write (3 samples, 0.69%)</title><rect x="1038.1" y="435.0" width="8.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1041.1" y="446.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.69%)</title><rect x="1038.1" y="419.0" width="8.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1041.1" y="430.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.69%)</title><rect x="1038.1" y="403.0" width="8.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1041.1" y="414.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.69%)</title><rect x="1038.1" y="387.0" width="8.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1041.1" y="398.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (3 samples, 0.69%)</title><rect x="1038.1" y="371.0" width="8.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1041.1" y="382.0"></text>
</g>
<g>
<title>__generic_file_write_iter (3 samples, 0.69%)</title><rect x="1038.1" y="355.0" width="8.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1041.1" y="366.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.23%)</title><rect x="1038.1" y="339.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1041.1" y="350.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.46%)</title><rect x="1040.8" y="339.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1043.8" y="350.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.46%)</title><rect x="1040.8" y="323.0" width="5.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1043.8" y="334.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.23%)</title><rect x="1043.5" y="307.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1046.5" y="318.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.23%)</title><rect x="1043.5" y="291.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1046.5" y="302.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.23%)</title><rect x="1043.5" y="275.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1046.5" y="286.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="1043.5" y="259.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1046.5" y="270.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (6 samples, 1.38%)</title><rect x="1046.2" y="579.0" width="16.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1049.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 1.38%)</title><rect x="1046.2" y="563.0" width="16.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1049.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 1.38%)</title><rect x="1046.2" y="547.0" width="16.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1049.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 1.38%)</title><rect x="1046.2" y="531.0" width="16.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1049.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (6 samples, 1.38%)</title><rect x="1046.2" y="515.0" width="16.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1049.2" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (6 samples, 1.38%)</title><rect x="1046.2" y="499.0" width="16.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1049.2" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (6 samples, 1.38%)</title><rect x="1046.2" y="483.0" width="16.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1049.2" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (6 samples, 1.38%)</title><rect x="1046.2" y="467.0" width="16.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1049.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 1.38%)</title><rect x="1046.2" y="451.0" width="16.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1049.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 1.15%)</title><rect x="1046.2" y="435.0" width="13.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1049.2" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (4 samples, 0.92%)</title><rect x="1046.2" y="419.0" width="10.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1049.2" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (4 samples, 0.92%)</title><rect x="1046.2" y="403.0" width="10.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1049.2" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (4 samples, 0.92%)</title><rect x="1046.2" y="387.0" width="10.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1049.2" y="398.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.23%)</title><rect x="1048.9" y="371.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1051.9" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="1051.7" y="371.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1054.7" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="1054.4" y="371.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1057.4" y="382.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="1054.4" y="355.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1057.4" y="366.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.23%)</title><rect x="1057.1" y="419.0" width="2.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1060.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.23%)</title><rect x="1059.8" y="435.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1062.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.23%)</title><rect x="1062.5" y="595.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1065.5" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.23%)</title><rect x="1065.2" y="691.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1068.2" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (2 samples, 0.46%)</title><rect x="1067.9" y="691.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1070.9" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (2 samples, 0.46%)</title><rect x="1067.9" y="675.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1070.9" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (2 samples, 0.46%)</title><rect x="1067.9" y="659.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1070.9" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.46%)</title><rect x="1067.9" y="643.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1070.9" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.46%)</title><rect x="1067.9" y="627.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1070.9" y="638.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (2 samples, 0.46%)</title><rect x="1067.9" y="611.0" width="5.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1070.9" y="622.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="1067.9" y="595.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1070.9" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.23%)</title><rect x="1067.9" y="579.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1070.9" y="590.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.23%)</title><rect x="1070.6" y="595.0" width="2.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1073.6" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.23%)</title><rect x="1070.6" y="579.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1073.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (1 samples, 0.23%)</title><rect x="1073.4" y="723.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1076.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.23%)</title><rect x="1073.4" y="707.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.4" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.23%)</title><rect x="1073.4" y="691.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1076.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.23%)</title><rect x="1073.4" y="675.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1076.4" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.23%)</title><rect x="1073.4" y="659.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1076.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.23%)</title><rect x="1073.4" y="643.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1076.4" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.23%)</title><rect x="1073.4" y="627.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1076.4" y="638.0"></text>
</g>
<g>
<title>[worker tid=24783] (21 samples, 4.83%)</title><rect x="1076.1" y="883.0" width="56.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1079.1" y="894.0">[worke..</text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.46%)</title><rect x="1076.1" y="867.0" width="5.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1079.1" y="878.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (2 samples, 0.46%)</title><rect x="1076.1" y="851.0" width="5.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1079.1" y="862.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (2 samples, 0.46%)</title><rect x="1076.1" y="835.0" width="5.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1079.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="1076.1" y="819.0" width="5.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1079.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="1076.1" y="803.0" width="5.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1079.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="1076.1" y="787.0" width="5.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1079.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2 samples, 0.46%)</title><rect x="1076.1" y="771.0" width="5.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1079.1" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.46%)</title><rect x="1076.1" y="755.0" width="5.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1079.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.46%)</title><rect x="1076.1" y="739.0" width="5.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1079.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.46%)</title><rect x="1076.1" y="723.0" width="5.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1079.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="1076.1" y="707.0" width="5.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1079.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.46%)</title><rect x="1076.1" y="691.0" width="5.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1079.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.46%)</title><rect x="1076.1" y="675.0" width="5.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1079.1" y="686.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.46%)</title><rect x="1076.1" y="659.0" width="5.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1079.1" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (2 samples, 0.46%)</title><rect x="1076.1" y="643.0" width="5.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1079.1" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (2 samples, 0.46%)</title><rect x="1076.1" y="627.0" width="5.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1079.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.46%)</title><rect x="1076.1" y="611.0" width="5.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1079.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.46%)</title><rect x="1076.1" y="595.0" width="5.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1079.1" y="606.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.46%)</title><rect x="1076.1" y="579.0" width="5.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1079.1" y="590.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.46%)</title><rect x="1076.1" y="563.0" width="5.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1079.1" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.46%)</title><rect x="1076.1" y="547.0" width="5.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1079.1" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.46%)</title><rect x="1076.1" y="531.0" width="5.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1079.1" y="542.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.46%)</title><rect x="1076.1" y="515.0" width="5.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1079.1" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (19 samples, 4.37%)</title><rect x="1081.5" y="867.0" width="51.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1084.5" y="878.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (19 samples, 4.37%)</title><rect x="1081.5" y="851.0" width="51.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1084.5" y="862.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (19 samples, 4.37%)</title><rect x="1081.5" y="835.0" width="51.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1084.5" y="846.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.46%)</title><rect x="1081.5" y="819.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1084.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.46%)</title><rect x="1081.5" y="803.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1084.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.getAndDecrement (1 samples, 0.23%)</title><rect x="1081.5" y="787.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1084.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.23%)</title><rect x="1084.2" y="787.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1087.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.23%)</title><rect x="1084.2" y="771.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.23%)</title><rect x="1084.2" y="755.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1087.2" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.23%)</title><rect x="1084.2" y="739.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1087.2" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.23%)</title><rect x="1084.2" y="723.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1087.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (17 samples, 3.91%)</title><rect x="1086.9" y="819.0" width="46.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1089.9" y="830.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (17 samples, 3.91%)</title><rect x="1086.9" y="803.0" width="46.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1089.9" y="814.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.23%)</title><rect x="1086.9" y="787.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.23%)</title><rect x="1086.9" y="771.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1089.9" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.23%)</title><rect x="1086.9" y="755.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1089.9" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.23%)</title><rect x="1086.9" y="739.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1089.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.23%)</title><rect x="1086.9" y="723.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1089.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.23%)</title><rect x="1086.9" y="707.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1089.9" y="718.0"></text>
</g>
<g>
<title>__send (1 samples, 0.23%)</title><rect x="1086.9" y="691.0" width="2.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1089.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="1086.9" y="675.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1089.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="1086.9" y="659.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1089.9" y="670.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="1086.9" y="643.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1089.9" y="654.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.23%)</title><rect x="1086.9" y="627.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1089.9" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="1086.9" y="611.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1089.9" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="1086.9" y="595.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1089.9" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.23%)</title><rect x="1086.9" y="579.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1089.9" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.23%)</title><rect x="1086.9" y="563.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1089.9" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.23%)</title><rect x="1086.9" y="547.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1089.9" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.23%)</title><rect x="1086.9" y="531.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1089.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (16 samples, 3.68%)</title><rect x="1089.6" y="787.0" width="43.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1092.6" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (16 samples, 3.68%)</title><rect x="1089.6" y="771.0" width="43.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.6" y="782.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (16 samples, 3.68%)</title><rect x="1089.6" y="755.0" width="43.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1092.6" y="766.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (16 samples, 3.68%)</title><rect x="1089.6" y="739.0" width="43.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1092.6" y="750.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (16 samples, 3.68%)</title><rect x="1089.6" y="723.0" width="43.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1092.6" y="734.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (16 samples, 3.68%)</title><rect x="1089.6" y="707.0" width="43.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1092.6" y="718.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (10 samples, 2.30%)</title><rect x="1089.6" y="691.0" width="27.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1092.6" y="702.0">J..</text>
</g>
<g>
<title>_init (1 samples, 0.23%)</title><rect x="1089.6" y="675.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1092.6" y="686.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (9 samples, 2.07%)</title><rect x="1092.3" y="675.0" width="24.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1095.3" y="686.0">r..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="1092.3" y="659.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1095.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 1.84%)</title><rect x="1095.1" y="659.0" width="21.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1098.1" y="670.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 1.84%)</title><rect x="1095.1" y="643.0" width="21.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1098.1" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 1.61%)</title><rect x="1097.8" y="627.0" width="19.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1100.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (7 samples, 1.61%)</title><rect x="1097.8" y="611.0" width="19.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1100.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (7 samples, 1.61%)</title><rect x="1097.8" y="595.0" width="19.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1100.8" y="606.0"></text>
</g>
<g>
<title>_init (1 samples, 0.23%)</title><rect x="1100.5" y="579.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1103.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (4 samples, 0.92%)</title><rect x="1103.2" y="579.0" width="10.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1106.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (4 samples, 0.92%)</title><rect x="1103.2" y="563.0" width="10.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1106.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (4 samples, 0.92%)</title><rect x="1103.2" y="547.0" width="10.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1106.2" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (1 samples, 0.23%)</title><rect x="1103.2" y="531.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1106.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.69%)</title><rect x="1105.9" y="531.0" width="8.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1108.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (3 samples, 0.69%)</title><rect x="1105.9" y="515.0" width="8.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1108.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (3 samples, 0.69%)</title><rect x="1105.9" y="499.0" width="8.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1108.9" y="510.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (2 samples, 0.46%)</title><rect x="1105.9" y="483.0" width="5.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1108.9" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.46%)</title><rect x="1105.9" y="467.0" width="5.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1108.9" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.46%)</title><rect x="1105.9" y="451.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1108.9" y="462.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.46%)</title><rect x="1105.9" y="435.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1108.9" y="446.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.46%)</title><rect x="1105.9" y="419.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1108.9" y="430.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.46%)</title><rect x="1105.9" y="403.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1108.9" y="414.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.46%)</title><rect x="1105.9" y="387.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1108.9" y="398.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (2 samples, 0.46%)</title><rect x="1105.9" y="371.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1108.9" y="382.0"></text>
</g>
<g>
<title>__generic_file_write_iter (2 samples, 0.46%)</title><rect x="1105.9" y="355.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1108.9" y="366.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.23%)</title><rect x="1105.9" y="339.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1108.9" y="350.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.23%)</title><rect x="1105.9" y="323.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1108.9" y="334.0"></text>
</g>
<g>
<title>ext4_da_write_begin	[ext4] (1 samples, 0.23%)</title><rect x="1105.9" y="307.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1108.9" y="318.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.23%)</title><rect x="1105.9" y="291.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1108.9" y="302.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.23%)</title><rect x="1105.9" y="275.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1108.9" y="286.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.23%)</title><rect x="1105.9" y="259.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1108.9" y="270.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.23%)</title><rect x="1108.6" y="339.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1111.6" y="350.0"></text>
</g>
<g>
<title>ext4_da_write_end	[ext4] (1 samples, 0.23%)</title><rect x="1108.6" y="323.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1111.6" y="334.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.23%)</title><rect x="1108.6" y="307.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1111.6" y="318.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.23%)</title><rect x="1108.6" y="291.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1111.6" y="302.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="1108.6" y="275.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1111.6" y="286.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (1 samples, 0.23%)</title><rect x="1108.6" y="259.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1111.6" y="270.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="1108.6" y="243.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1111.6" y="254.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access	[ext4] (1 samples, 0.23%)</title><rect x="1108.6" y="227.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1111.6" y="238.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty	[ext4] (1 samples, 0.23%)</title><rect x="1108.6" y="211.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1111.6" y="222.0"></text>
</g>
<g>
<title>ext4_inode_csum_set	[ext4] (1 samples, 0.23%)</title><rect x="1108.6" y="195.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1111.6" y="206.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.61	[ext4] (1 samples, 0.23%)</title><rect x="1108.6" y="179.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1111.6" y="190.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.23%)</title><rect x="1108.6" y="163.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1111.6" y="174.0"></text>
</g>
<g>
<title>__GI___write (1 samples, 0.23%)</title><rect x="1111.3" y="483.0" width="2.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1114.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.23%)</title><rect x="1114.0" y="579.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1117.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.23%)</title><rect x="1114.0" y="563.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1117.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="1114.0" y="547.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1117.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.23%)</title><rect x="1114.0" y="531.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1117.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.23%)</title><rect x="1114.0" y="515.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1117.0" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.23%)</title><rect x="1114.0" y="499.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1117.0" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (1 samples, 0.23%)</title><rect x="1114.0" y="483.0" width="2.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1117.0" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (1 samples, 0.23%)</title><rect x="1114.0" y="467.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1117.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="1114.0" y="451.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1117.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="1114.0" y="435.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1117.0" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="1114.0" y="419.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1117.0" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.23%)</title><rect x="1114.0" y="403.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1117.0" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="1114.0" y="387.0" width="2.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1117.0" y="398.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.23%)</title><rect x="1116.8" y="691.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1119.8" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (5 samples, 1.15%)</title><rect x="1119.5" y="691.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1122.5" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (5 samples, 1.15%)</title><rect x="1119.5" y="675.0" width="13.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.5" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (5 samples, 1.15%)</title><rect x="1119.5" y="659.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1122.5" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (5 samples, 1.15%)</title><rect x="1119.5" y="643.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1122.5" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (5 samples, 1.15%)</title><rect x="1119.5" y="627.0" width="13.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1122.5" y="638.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (4 samples, 0.92%)</title><rect x="1122.2" y="611.0" width="10.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1125.2" y="622.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.23%)</title><rect x="1124.9" y="595.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1127.9" y="606.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.23%)</title><rect x="1127.6" y="595.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1130.6" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.23%)</title><rect x="1130.3" y="595.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1133.3" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.23%)</title><rect x="1130.3" y="579.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1133.3" y="590.0"></text>
</g>
<g>
<title>[worker tid=24784] (21 samples, 4.83%)</title><rect x="1133.0" y="883.0" width="57.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1136.0" y="894.0">[worke..</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.23%)</title><rect x="1133.0" y="867.0" width="2.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1136.0" y="878.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.23%)</title><rect x="1133.0" y="851.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1136.0" y="862.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.23%)</title><rect x="1133.0" y="835.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1136.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="1133.0" y="819.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="1133.0" y="803.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="1133.0" y="787.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.23%)</title><rect x="1133.0" y="771.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1136.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.23%)</title><rect x="1133.0" y="755.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1136.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.23%)</title><rect x="1133.0" y="739.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1136.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.23%)</title><rect x="1133.0" y="723.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1136.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="1133.0" y="707.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1136.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.23%)</title><rect x="1133.0" y="691.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1136.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.23%)</title><rect x="1133.0" y="675.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1136.0" y="686.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.23%)</title><rect x="1133.0" y="659.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1136.0" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (1 samples, 0.23%)</title><rect x="1133.0" y="643.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1136.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="1133.0" y="627.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1136.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="1133.0" y="611.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1136.0" y="622.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.23%)</title><rect x="1133.0" y="595.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1136.0" y="606.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.23%)</title><rect x="1133.0" y="579.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1136.0" y="590.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.23%)</title><rect x="1133.0" y="563.0" width="2.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1136.0" y="574.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="1133.0" y="547.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1136.0" y="558.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.23%)</title><rect x="1133.0" y="531.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1136.0" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (20 samples, 4.60%)</title><rect x="1135.7" y="867.0" width="54.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1138.7" y="878.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (20 samples, 4.60%)</title><rect x="1135.7" y="851.0" width="54.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1138.7" y="862.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (20 samples, 4.60%)</title><rect x="1135.7" y="835.0" width="54.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1138.7" y="846.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.46%)</title><rect x="1135.7" y="819.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1138.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.46%)</title><rect x="1135.7" y="803.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1138.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.46%)</title><rect x="1135.7" y="787.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1138.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.46%)</title><rect x="1135.7" y="771.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1138.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.46%)</title><rect x="1135.7" y="755.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1138.7" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.46%)</title><rect x="1135.7" y="739.0" width="5.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1138.7" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.23%)</title><rect x="1135.7" y="723.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1138.7" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.23%)</title><rect x="1138.5" y="723.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1141.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.23%)</title><rect x="1138.5" y="707.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1141.5" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="1138.5" y="691.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1141.5" y="702.0"></text>
</g>
<g>
<title>sys_write (1 samples, 0.23%)</title><rect x="1138.5" y="675.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1141.5" y="686.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.23%)</title><rect x="1138.5" y="659.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1141.5" y="670.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.23%)</title><rect x="1138.5" y="643.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1141.5" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.23%)</title><rect x="1138.5" y="627.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1141.5" y="638.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="1138.5" y="611.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1141.5" y="622.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.23%)</title><rect x="1138.5" y="595.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1141.5" y="606.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.23%)</title><rect x="1138.5" y="579.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1141.5" y="590.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="1138.5" y="563.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1141.5" y="574.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.23%)</title><rect x="1138.5" y="547.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1141.5" y="558.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.23%)</title><rect x="1138.5" y="531.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1141.5" y="542.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.23%)</title><rect x="1138.5" y="515.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1141.5" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.23%)</title><rect x="1138.5" y="499.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1141.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (18 samples, 4.14%)</title><rect x="1141.2" y="819.0" width="48.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.2" y="830.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (18 samples, 4.14%)</title><rect x="1141.2" y="803.0" width="48.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.2" y="814.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 1.15%)</title><rect x="1141.2" y="787.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1144.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 1.15%)</title><rect x="1141.2" y="771.0" width="13.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1144.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.23%)</title><rect x="1141.2" y="755.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1144.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.23%)</title><rect x="1141.2" y="739.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1144.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.23%)</title><rect x="1141.2" y="723.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.23%)</title><rect x="1141.2" y="707.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1144.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.92%)</title><rect x="1143.9" y="755.0" width="10.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1146.9" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.92%)</title><rect x="1143.9" y="739.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1146.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 0.92%)</title><rect x="1143.9" y="723.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1146.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.92%)</title><rect x="1143.9" y="707.0" width="10.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1146.9" y="718.0"></text>
</g>
<g>
<title>__send (4 samples, 0.92%)</title><rect x="1143.9" y="691.0" width="10.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1146.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (4 samples, 0.92%)</title><rect x="1143.9" y="675.0" width="10.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1146.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.92%)</title><rect x="1143.9" y="659.0" width="10.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1146.9" y="670.0"></text>
</g>
<g>
<title>sys_write (4 samples, 0.92%)</title><rect x="1143.9" y="643.0" width="10.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1146.9" y="654.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.92%)</title><rect x="1143.9" y="627.0" width="10.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1146.9" y="638.0"></text>
</g>
<g>
<title>SYSC_sendto (4 samples, 0.92%)</title><rect x="1143.9" y="611.0" width="10.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1146.9" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (4 samples, 0.92%)</title><rect x="1143.9" y="595.0" width="10.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1146.9" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 0.92%)</title><rect x="1143.9" y="579.0" width="10.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1146.9" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.46%)</title><rect x="1143.9" y="563.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1146.9" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.46%)</title><rect x="1143.9" y="547.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1146.9" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.46%)</title><rect x="1143.9" y="531.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1146.9" y="542.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.46%)</title><rect x="1143.9" y="515.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1146.9" y="526.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.46%)</title><rect x="1143.9" y="499.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1146.9" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.46%)</title><rect x="1143.9" y="483.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1146.9" y="494.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.46%)</title><rect x="1143.9" y="467.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1146.9" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.46%)</title><rect x="1143.9" y="451.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1146.9" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.46%)</title><rect x="1143.9" y="435.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1146.9" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.18 (2 samples, 0.46%)</title><rect x="1143.9" y="419.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1146.9" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.46%)</title><rect x="1143.9" y="403.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1146.9" y="414.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.46%)</title><rect x="1143.9" y="387.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1146.9" y="398.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.46%)</title><rect x="1143.9" y="371.0" width="5.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1146.9" y="382.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.46%)</title><rect x="1143.9" y="355.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1146.9" y="366.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.46%)</title><rect x="1143.9" y="339.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1146.9" y="350.0"></text>
</g>
<g>
<title>enqueue_task_fair (2 samples, 0.46%)</title><rect x="1143.9" y="323.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1146.9" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.46%)</title><rect x="1143.9" y="307.0" width="5.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1146.9" y="318.0"></text>
</g>
<g>
<title>enqueue_entity (2 samples, 0.46%)</title><rect x="1143.9" y="291.0" width="5.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1146.9" y="302.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.46%)</title><rect x="1143.9" y="275.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1146.9" y="286.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (2 samples, 0.46%)</title><rect x="1143.9" y="259.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1146.9" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.46%)</title><rect x="1143.9" y="243.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1146.9" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.46%)</title><rect x="1143.9" y="227.0" width="5.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1146.9" y="238.0"></text>
</g>
<g>
<title>hw_breakpoint_exceptions_notify (1 samples, 0.23%)</title><rect x="1143.9" y="211.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1146.9" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="1143.9" y="195.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1146.9" y="206.0"></text>
</g>
<g>
<title>tcp_prequeue (1 samples, 0.23%)</title><rect x="1143.9" y="179.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1146.9" y="190.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="1143.9" y="163.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1146.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.23%)</title><rect x="1146.6" y="211.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1149.6" y="222.0"></text>
</g>
<g>
<title>tcp_prequeue (1 samples, 0.23%)</title><rect x="1146.6" y="195.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1149.6" y="206.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.23%)</title><rect x="1146.6" y="179.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1149.6" y="190.0"></text>
</g>
<g>
<title>copy_from_iter (2 samples, 0.46%)</title><rect x="1149.3" y="563.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1152.3" y="574.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.23%)</title><rect x="1149.3" y="547.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1152.3" y="558.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.23%)</title><rect x="1149.3" y="531.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1152.3" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.23%)</title><rect x="1152.0" y="547.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1155.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (13 samples, 2.99%)</title><rect x="1154.7" y="787.0" width="35.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1157.7" y="798.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (13 samples, 2.99%)</title><rect x="1154.7" y="771.0" width="35.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1157.7" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (13 samples, 2.99%)</title><rect x="1154.7" y="755.0" width="35.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1157.7" y="766.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (13 samples, 2.99%)</title><rect x="1154.7" y="739.0" width="35.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1157.7" y="750.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (13 samples, 2.99%)</title><rect x="1154.7" y="723.0" width="35.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.7" y="734.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (13 samples, 2.99%)</title><rect x="1154.7" y="707.0" width="35.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.7" y="718.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (9 samples, 2.07%)</title><rect x="1154.7" y="691.0" width="24.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1157.7" y="702.0">J..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (9 samples, 2.07%)</title><rect x="1154.7" y="675.0" width="24.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1157.7" y="686.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 1.84%)</title><rect x="1154.7" y="659.0" width="21.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1157.7" y="670.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 1.84%)</title><rect x="1154.7" y="643.0" width="21.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1157.7" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 1.84%)</title><rect x="1154.7" y="627.0" width="21.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.7" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (8 samples, 1.84%)</title><rect x="1154.7" y="611.0" width="21.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1157.7" y="622.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (8 samples, 1.84%)</title><rect x="1154.7" y="595.0" width="21.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.7" y="606.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (4 samples, 0.92%)</title><rect x="1154.7" y="579.0" width="10.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (4 samples, 0.92%)</title><rect x="1154.7" y="563.0" width="10.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (4 samples, 0.92%)</title><rect x="1154.7" y="547.0" width="10.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (4 samples, 0.92%)</title><rect x="1154.7" y="531.0" width="10.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1157.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (4 samples, 0.92%)</title><rect x="1154.7" y="515.0" width="10.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1157.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (4 samples, 0.92%)</title><rect x="1154.7" y="499.0" width="10.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.7" y="510.0"></text>
</g>
<g>
<title>/lib/x86_64-linux-gnu/libpthread-2.24.so (3 samples, 0.69%)</title><rect x="1157.4" y="483.0" width="8.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1160.4" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.46%)</title><rect x="1160.2" y="467.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1163.2" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.46%)</title><rect x="1160.2" y="451.0" width="5.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1163.2" y="462.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.46%)</title><rect x="1160.2" y="435.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1163.2" y="446.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.46%)</title><rect x="1160.2" y="419.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1163.2" y="430.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.46%)</title><rect x="1160.2" y="403.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1163.2" y="414.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.46%)</title><rect x="1160.2" y="387.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1163.2" y="398.0"></text>
</g>
<g>
<title>ext4_file_write_iter	[ext4] (2 samples, 0.46%)</title><rect x="1160.2" y="371.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1163.2" y="382.0"></text>
</g>
<g>
<title>__generic_file_write_iter (2 samples, 0.46%)</title><rect x="1160.2" y="355.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1163.2" y="366.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.23%)</title><rect x="1160.2" y="339.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1163.2" y="350.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.23%)</title><rect x="1160.2" y="323.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1163.2" y="334.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.23%)</title><rect x="1160.2" y="307.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1163.2" y="318.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.23%)</title><rect x="1160.2" y="291.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1163.2" y="302.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.23%)</title><rect x="1160.2" y="275.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1163.2" y="286.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="1160.2" y="259.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1163.2" y="270.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (1 samples, 0.23%)</title><rect x="1160.2" y="243.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1163.2" y="254.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="1160.2" y="227.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1163.2" y="238.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write	[ext4] (1 samples, 0.23%)</title><rect x="1160.2" y="211.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1163.2" y="222.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="1160.2" y="195.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1163.2" y="206.0"></text>
</g>
<g>
<title>start_this_handle	[jbd2] (1 samples, 0.23%)</title><rect x="1160.2" y="179.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1163.2" y="190.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc	[ext4] (1 samples, 0.23%)</title><rect x="1160.2" y="163.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1163.2" y="174.0"></text>
</g>
<g>
<title>ext4_get_group_desc	[ext4] (1 samples, 0.23%)</title><rect x="1160.2" y="147.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1163.2" y="158.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.23%)</title><rect x="1162.9" y="339.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1165.9" y="350.0"></text>
</g>
<g>
<title>ext4_da_write_end	[ext4] (1 samples, 0.23%)</title><rect x="1162.9" y="323.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1165.9" y="334.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.23%)</title><rect x="1162.9" y="307.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1165.9" y="318.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.23%)</title><rect x="1162.9" y="291.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1165.9" y="302.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="1162.9" y="275.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1165.9" y="286.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty	[ext4] (1 samples, 0.23%)</title><rect x="1162.9" y="259.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1165.9" y="270.0"></text>
</g>
<g>
<title>ext4_dirty_inode	[ext4] (1 samples, 0.23%)</title><rect x="1162.9" y="243.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1165.9" y="254.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access	[ext4] (1 samples, 0.23%)</title><rect x="1162.9" y="227.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1165.9" y="238.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty	[ext4] (1 samples, 0.23%)</title><rect x="1162.9" y="211.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1165.9" y="222.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (4 samples, 0.92%)</title><rect x="1165.6" y="579.0" width="10.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.92%)</title><rect x="1165.6" y="563.0" width="10.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.92%)</title><rect x="1165.6" y="547.0" width="10.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1168.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.92%)</title><rect x="1165.6" y="531.0" width="10.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1168.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (4 samples, 0.92%)</title><rect x="1165.6" y="515.0" width="10.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.6" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.92%)</title><rect x="1165.6" y="499.0" width="10.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.6" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (4 samples, 0.92%)</title><rect x="1165.6" y="483.0" width="10.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1168.6" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (4 samples, 0.92%)</title><rect x="1165.6" y="467.0" width="10.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1168.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.92%)</title><rect x="1165.6" y="451.0" width="10.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1168.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.92%)</title><rect x="1165.6" y="435.0" width="10.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1168.6" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.46%)</title><rect x="1165.6" y="419.0" width="5.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.6" y="430.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.46%)</title><rect x="1165.6" y="403.0" width="5.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1168.6" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.46%)</title><rect x="1165.6" y="387.0" width="5.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1168.6" y="398.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::get_object() (1 samples, 0.23%)</title><rect x="1165.6" y="371.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.6" y="382.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.23%)</title><rect x="1168.3" y="371.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.3" y="382.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.46%)</title><rect x="1171.0" y="419.0" width="5.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.0" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.46%)</title><rect x="1171.0" y="403.0" width="5.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1174.0" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.46%)</title><rect x="1171.0" y="387.0" width="5.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1174.0" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.23%)</title><rect x="1173.7" y="371.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1176.7" y="382.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.23%)</title><rect x="1173.7" y="355.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.7" y="366.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="1176.4" y="659.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.4" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 0.92%)</title><rect x="1179.1" y="691.0" width="10.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1182.1" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 0.92%)</title><rect x="1179.1" y="675.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.1" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (4 samples, 0.92%)</title><rect x="1179.1" y="659.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1182.1" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 0.92%)</title><rect x="1179.1" y="643.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1182.1" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 0.92%)</title><rect x="1179.1" y="627.0" width="10.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1182.1" y="638.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (4 samples, 0.92%)</title><rect x="1179.1" y="611.0" width="10.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1182.1" y="622.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.92%)</title><rect x="1179.1" y="595.0" width="10.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1182.1" y="606.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.23%)</title><rect x="1179.1" y="579.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.1" y="590.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.69%)</title><rect x="1181.9" y="579.0" width="8.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.9" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.69%)</title><rect x="1181.9" y="563.0" width="8.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.9" y="574.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.23%)</title><rect x="1181.9" y="547.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.9" y="558.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.23%)</title><rect x="1184.6" y="547.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.6" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.23%)</title><rect x="1187.3" y="547.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1190.3" y="558.0"></text>
</g>
</g>
</svg>
