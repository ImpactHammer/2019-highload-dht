<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="373"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="373"> </text>
<g id="frames">
<g>
<title>all (1,837 samples, 100.00%)</title><rect x="10.0" y="339.0" width="1180.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="13.0" y="350.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=24698] (1 samples, 0.05%)</title><rect x="10.0" y="323.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1 samples, 0.05%)</title><rect x="10.0" y="307.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.createSession (1 samples, 0.05%)</title><rect x="10.0" y="291.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.createSession (1 samples, 0.05%)</title><rect x="10.0" y="275.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.StorageSession (1 samples, 0.05%)</title><rect x="10.0" y="259.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=24695] (1 samples, 0.05%)</title><rect x="10.6" y="323.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.6" y="334.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1 samples, 0.05%)</title><rect x="10.6" y="307.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.6" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1 samples, 0.05%)</title><rect x="10.6" y="291.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1 samples, 0.05%)</title><rect x="10.6" y="275.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.6" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.05%)</title><rect x="10.6" y="259.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.6" y="270.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.05%)</title><rect x="10.6" y="243.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.6" y="254.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.05%)</title><rect x="10.6" y="227.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="13.6" y="238.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=24723] (93 samples, 5.06%)</title><rect x="11.3" y="323.0" width="59.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="14.3" y="334.0">[NIO S..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (93 samples, 5.06%)</title><rect x="11.3" y="307.0" width="59.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.3" y="318.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.27%)</title><rect x="11.3" y="291.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.3" y="302.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (5 samples, 0.27%)</title><rect x="11.3" y="275.0" width="3.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="14.3" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (88 samples, 4.79%)</title><rect x="14.5" y="291.0" width="56.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.5" y="302.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (88 samples, 4.79%)</title><rect x="14.5" y="275.0" width="56.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.5" y="286.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (88 samples, 4.79%)</title><rect x="14.5" y="259.0" width="56.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.5" y="270.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (30 samples, 1.63%)</title><rect x="14.5" y="243.0" width="19.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (30 samples, 1.63%)</title><rect x="14.5" y="227.0" width="19.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.5" y="238.0"></text>
</g>
<g>
<title>RequestHandler3_entity.handleRequest (23 samples, 1.25%)</title><rect x="14.5" y="211.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.44%)</title><rect x="14.5" y="195.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.5" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.44%)</title><rect x="14.5" y="179.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.5" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.44%)</title><rect x="14.5" y="163.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.5" y="174.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.11%)</title><rect x="14.5" y="147.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="17.5" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.33%)</title><rect x="15.8" y="147.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.8" y="158.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.33%)</title><rect x="15.8" y="131.0" width="3.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="18.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.entity (15 samples, 0.82%)</title><rect x="19.6" y="195.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (15 samples, 0.82%)</title><rect x="19.6" y="179.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.6" y="190.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.05%)</title><rect x="19.6" y="163.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.6" y="174.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.05%)</title><rect x="19.6" y="147.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.6" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.05%)</title><rect x="19.6" y="131.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.6" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="19.6" y="115.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.6" y="126.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="19.6" y="99.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="22.6" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.11%)</title><rect x="20.3" y="163.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.11%)</title><rect x="20.3" y="147.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.get$Lambda (2 samples, 0.11%)</title><rect x="20.3" y="131.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.3" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.AsyncHttpServer$$Lambda$64 (2 samples, 0.11%)</title><rect x="20.3" y="115.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="23.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.33%)</title><rect x="21.6" y="163.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="24.6" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.33%)</title><rect x="21.6" y="147.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.6" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.33%)</title><rect x="21.6" y="131.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="24.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (6 samples, 0.33%)</title><rect x="25.4" y="163.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.16%)</title><rect x="25.4" y="147.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.4" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.16%)</title><rect x="25.4" y="131.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.get$Lambda (3 samples, 0.16%)</title><rect x="25.4" y="115.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="28.4" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.AsyncHttpServer$$Lambda$62 (3 samples, 0.16%)</title><rect x="25.4" y="99.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="28.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.16%)</title><rect x="27.3" y="147.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="30.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.16%)</title><rect x="27.3" y="131.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.3" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (3 samples, 0.16%)</title><rect x="27.3" y="115.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="30.3" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.38%)</title><rect x="29.3" y="211.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.38%)</title><rect x="29.3" y="195.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.3" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.38%)</title><rect x="29.3" y="179.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.3" y="190.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.33%)</title><rect x="29.3" y="163.0" width="3.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="32.3" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.05%)</title><rect x="33.1" y="163.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.1" y="174.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="33.1" y="147.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="36.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (25 samples, 1.36%)</title><rect x="33.8" y="243.0" width="16.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="36.8" y="254.0"></text>
</g>
<g>
<title>one.nio.http.Request (6 samples, 0.33%)</title><rect x="33.8" y="227.0" width="3.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="36.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7 samples, 0.38%)</title><rect x="37.6" y="227.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.6" y="238.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.38%)</title><rect x="37.6" y="211.0" width="4.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="40.6" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.65%)</title><rect x="42.1" y="227.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.1" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.65%)</title><rect x="42.1" y="211.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.1" y="222.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.44%)</title><rect x="42.1" y="195.0" width="5.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="45.1" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.22%)</title><rect x="47.3" y="195.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.3" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.22%)</title><rect x="47.3" y="179.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="50.3" y="190.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.22%)</title><rect x="47.3" y="163.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="50.3" y="174.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.22%)</title><rect x="47.3" y="147.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="50.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.16%)</title><rect x="49.8" y="243.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.8" y="254.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.16%)</title><rect x="49.8" y="227.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="52.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.22%)</title><rect x="51.8" y="243.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.8" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.22%)</title><rect x="51.8" y="227.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.8" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.22%)</title><rect x="51.8" y="211.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.8" y="222.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.16%)</title><rect x="51.8" y="195.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="54.8" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.05%)</title><rect x="53.7" y="195.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.7" y="206.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="53.7" y="179.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="56.7" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 1.42%)</title><rect x="54.3" y="243.0" width="16.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.3" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 1.42%)</title><rect x="54.3" y="227.0" width="16.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.3" y="238.0"></text>
</g>
<g>
<title>char[] (15 samples, 0.82%)</title><rect x="54.3" y="211.0" width="9.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="57.3" y="222.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.16%)</title><rect x="64.0" y="211.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="67.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.44%)</title><rect x="65.9" y="211.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.44%)</title><rect x="65.9" y="195.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.44%)</title><rect x="65.9" y="179.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.9" y="190.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.44%)</title><rect x="65.9" y="163.0" width="5.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="68.9" y="174.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=24747] (88 samples, 4.79%)</title><rect x="71.0" y="323.0" width="56.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="74.0" y="334.0">[NIO S..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (88 samples, 4.79%)</title><rect x="71.0" y="307.0" width="56.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.0" y="318.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.22%)</title><rect x="71.0" y="291.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.0" y="302.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (4 samples, 0.22%)</title><rect x="71.0" y="275.0" width="2.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="74.0" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (84 samples, 4.57%)</title><rect x="73.6" y="291.0" width="54.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.6" y="302.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (84 samples, 4.57%)</title><rect x="73.6" y="275.0" width="54.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.6" y="286.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (84 samples, 4.57%)</title><rect x="73.6" y="259.0" width="54.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.6" y="270.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (28 samples, 1.52%)</title><rect x="73.6" y="243.0" width="18.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (28 samples, 1.52%)</title><rect x="73.6" y="227.0" width="18.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.6" y="238.0"></text>
</g>
<g>
<title>RequestHandler3_entity.handleRequest (24 samples, 1.31%)</title><rect x="73.6" y="211.0" width="15.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.22%)</title><rect x="73.6" y="195.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.22%)</title><rect x="73.6" y="179.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.22%)</title><rect x="73.6" y="163.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.22%)</title><rect x="73.6" y="147.0" width="2.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="76.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.entity (20 samples, 1.09%)</title><rect x="76.2" y="195.0" width="12.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.2" y="206.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.22%)</title><rect x="76.2" y="179.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.22%)</title><rect x="76.2" y="163.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="79.2" y="174.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.22%)</title><rect x="76.2" y="147.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.2" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.22%)</title><rect x="76.2" y="131.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.2" y="142.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.22%)</title><rect x="76.2" y="115.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="79.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (16 samples, 0.87%)</title><rect x="78.7" y="179.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.7" y="190.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.16%)</title><rect x="78.7" y="163.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.7" y="174.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.16%)</title><rect x="78.7" y="147.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="81.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.16%)</title><rect x="78.7" y="131.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.7" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.16%)</title><rect x="78.7" y="115.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.7" y="126.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.16%)</title><rect x="78.7" y="99.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="81.7" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="80.7" y="163.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="83.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="80.7" y="147.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.get$Lambda (1 samples, 0.05%)</title><rect x="80.7" y="131.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.7" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.AsyncHttpServer$$Lambda$64 (1 samples, 0.05%)</title><rect x="80.7" y="115.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="83.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.33%)</title><rect x="81.3" y="163.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.33%)</title><rect x="81.3" y="147.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.33%)</title><rect x="81.3" y="131.0" width="3.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="84.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (6 samples, 0.33%)</title><rect x="85.2" y="163.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.27%)</title><rect x="85.2" y="147.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.2" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.27%)</title><rect x="85.2" y="131.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.get$Lambda (5 samples, 0.27%)</title><rect x="85.2" y="115.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="88.2" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.AsyncHttpServer$$Lambda$62 (5 samples, 0.27%)</title><rect x="85.2" y="99.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="88.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="88.4" y="147.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="88.4" y="131.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.4" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1 samples, 0.05%)</title><rect x="88.4" y="115.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="91.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.22%)</title><rect x="89.0" y="211.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="92.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.22%)</title><rect x="89.0" y="195.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="92.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.22%)</title><rect x="89.0" y="179.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="92.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.22%)</title><rect x="89.0" y="163.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.0" y="174.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.22%)</title><rect x="89.0" y="147.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="92.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (22 samples, 1.20%)</title><rect x="91.6" y="243.0" width="14.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.6" y="254.0"></text>
</g>
<g>
<title>one.nio.http.Request (3 samples, 0.16%)</title><rect x="91.6" y="227.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="94.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (9 samples, 0.49%)</title><rect x="93.5" y="227.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.5" y="238.0"></text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.49%)</title><rect x="93.5" y="211.0" width="5.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="96.5" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.54%)</title><rect x="99.3" y="227.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.3" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.54%)</title><rect x="99.3" y="211.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.3" y="222.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.27%)</title><rect x="99.3" y="195.0" width="3.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="102.3" y="206.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.22%)</title><rect x="102.5" y="195.0" width="2.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="105.5" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="105.1" y="195.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.1" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="105.1" y="179.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.1" y="190.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.05%)</title><rect x="105.1" y="163.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.1" y="174.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="105.1" y="147.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="108.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.27%)</title><rect x="105.7" y="243.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.7" y="254.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.27%)</title><rect x="105.7" y="227.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="108.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.11%)</title><rect x="108.9" y="243.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.9" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.11%)</title><rect x="108.9" y="227.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.9" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.11%)</title><rect x="108.9" y="211.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.9" y="222.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.05%)</title><rect x="108.9" y="195.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="111.9" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.05%)</title><rect x="109.6" y="195.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="112.6" y="206.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="109.6" y="179.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="112.6" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 1.47%)</title><rect x="110.2" y="243.0" width="17.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.2" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 1.47%)</title><rect x="110.2" y="227.0" width="17.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.2" y="238.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.44%)</title><rect x="110.2" y="211.0" width="5.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="113.2" y="222.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.27%)</title><rect x="115.3" y="211.0" width="3.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="118.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.76%)</title><rect x="118.6" y="211.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.76%)</title><rect x="118.6" y="195.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14 samples, 0.76%)</title><rect x="118.6" y="179.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.6" y="190.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.76%)</title><rect x="118.6" y="163.0" width="9.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="121.6" y="174.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=24697] (86 samples, 4.68%)</title><rect x="127.6" y="323.0" width="55.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="130.6" y="334.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (86 samples, 4.68%)</title><rect x="127.6" y="307.0" width="55.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.6" y="318.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.process (86 samples, 4.68%)</title><rect x="127.6" y="291.0" width="55.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.6" y="302.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (86 samples, 4.68%)</title><rect x="127.6" y="275.0" width="55.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.6" y="286.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (86 samples, 4.68%)</title><rect x="127.6" y="259.0" width="55.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.6" y="270.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (19 samples, 1.03%)</title><rect x="127.6" y="243.0" width="12.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (19 samples, 1.03%)</title><rect x="127.6" y="227.0" width="12.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.6" y="238.0"></text>
</g>
<g>
<title>RequestHandler3_entity.handleRequest (14 samples, 0.76%)</title><rect x="127.6" y="211.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.22%)</title><rect x="127.6" y="195.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.22%)</title><rect x="127.6" y="179.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.22%)</title><rect x="127.6" y="163.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.11%)</title><rect x="127.6" y="147.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="130.6" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.11%)</title><rect x="128.8" y="147.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.8" y="158.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.11%)</title><rect x="128.8" y="131.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="131.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.entity (10 samples, 0.54%)</title><rect x="130.1" y="195.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.1" y="206.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.11%)</title><rect x="130.1" y="179.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="133.1" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.11%)</title><rect x="130.1" y="163.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.1" y="174.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.11%)</title><rect x="130.1" y="147.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.1" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.11%)</title><rect x="130.1" y="131.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.1" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.11%)</title><rect x="130.1" y="115.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="133.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (7 samples, 0.38%)</title><rect x="131.4" y="179.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.4" y="190.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.11%)</title><rect x="131.4" y="163.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.4" y="174.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.11%)</title><rect x="131.4" y="147.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.11%)</title><rect x="131.4" y="131.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.4" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.11%)</title><rect x="131.4" y="115.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.4" y="126.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.11%)</title><rect x="131.4" y="99.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="134.4" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="132.7" y="163.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="135.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="132.7" y="147.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="135.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.get$Lambda (1 samples, 0.05%)</title><rect x="132.7" y="131.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.7" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.AsyncHttpServer$$Lambda$64 (1 samples, 0.05%)</title><rect x="132.7" y="115.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="135.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="133.3" y="163.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="133.3" y="147.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.05%)</title><rect x="133.3" y="131.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="136.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (3 samples, 0.16%)</title><rect x="134.0" y="163.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="137.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.16%)</title><rect x="134.0" y="147.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.16%)</title><rect x="134.0" y="131.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.0" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (3 samples, 0.16%)</title><rect x="134.0" y="115.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="137.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (1 samples, 0.05%)</title><rect x="135.9" y="179.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="135.9" y="163.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="135.9" y="147.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.9" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1 samples, 0.05%)</title><rect x="135.9" y="131.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="138.9" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.27%)</title><rect x="136.5" y="211.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.5" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.27%)</title><rect x="136.5" y="195.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.27%)</title><rect x="136.5" y="179.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.5" y="190.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.16%)</title><rect x="136.5" y="163.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="139.5" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.11%)</title><rect x="138.5" y="163.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.5" y="174.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.11%)</title><rect x="138.5" y="147.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="141.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (30 samples, 1.63%)</title><rect x="139.8" y="243.0" width="19.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.8" y="254.0"></text>
</g>
<g>
<title>one.nio.http.Request (2 samples, 0.11%)</title><rect x="139.8" y="227.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="142.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7 samples, 0.38%)</title><rect x="141.0" y="227.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="144.0" y="238.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.38%)</title><rect x="141.0" y="211.0" width="4.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="144.0" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 1.14%)</title><rect x="145.5" y="227.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.5" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 1.14%)</title><rect x="145.5" y="211.0" width="13.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.5" y="222.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.60%)</title><rect x="145.5" y="195.0" width="7.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="148.5" y="206.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.05%)</title><rect x="152.6" y="195.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="155.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.49%)</title><rect x="153.2" y="195.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="156.2" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.49%)</title><rect x="153.2" y="179.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.49%)</title><rect x="153.2" y="163.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.2" y="174.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.49%)</title><rect x="153.2" y="147.0" width="5.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="156.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.22%)</title><rect x="159.0" y="243.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.0" y="254.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.22%)</title><rect x="159.0" y="227.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="162.0" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.33%)</title><rect x="161.6" y="243.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="164.6" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.33%)</title><rect x="161.6" y="227.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.33%)</title><rect x="161.6" y="211.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="164.6" y="222.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.33%)</title><rect x="161.6" y="195.0" width="3.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="164.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 1.47%)</title><rect x="165.4" y="243.0" width="17.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.4" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 1.47%)</title><rect x="165.4" y="227.0" width="17.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.4" y="238.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.49%)</title><rect x="165.4" y="211.0" width="5.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="168.4" y="222.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.49%)</title><rect x="171.2" y="211.0" width="5.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="174.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.49%)</title><rect x="177.0" y="211.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.49%)</title><rect x="177.0" y="195.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="180.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.49%)</title><rect x="177.0" y="179.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.0" y="190.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.49%)</title><rect x="177.0" y="163.0" width="5.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="180.0" y="174.0"></text>
</g>
<g>
<title>[worker tid=24773] (172 samples, 9.36%)</title><rect x="182.8" y="323.0" width="110.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="185.8" y="334.0">[worker tid=2..</text>
</g>
<g>
<title>java/lang/Thread.run (172 samples, 9.36%)</title><rect x="182.8" y="307.0" width="110.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="185.8" y="318.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (172 samples, 9.36%)</title><rect x="182.8" y="291.0" width="110.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="185.8" y="302.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (172 samples, 9.36%)</title><rect x="182.8" y="275.0" width="110.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.8" y="286.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.05%)</title><rect x="182.8" y="259.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.05%)</title><rect x="182.8" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.05%)</title><rect x="182.8" y="227.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="185.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.05%)</title><rect x="182.8" y="211.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="185.8" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.05%)</title><rect x="182.8" y="195.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="185.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (171 samples, 9.31%)</title><rect x="183.4" y="259.0" width="109.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.4" y="270.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (171 samples, 9.31%)</title><rect x="183.4" y="243.0" width="109.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.4" y="254.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.11%)</title><rect x="183.4" y="227.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.4" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.11%)</title><rect x="183.4" y="211.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="186.4" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.11%)</title><rect x="183.4" y="195.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.4" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.11%)</title><rect x="183.4" y="179.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.4" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.11%)</title><rect x="183.4" y="163.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="186.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (14 samples, 0.76%)</title><rect x="184.7" y="227.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="187.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (14 samples, 0.76%)</title><rect x="184.7" y="211.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (14 samples, 0.76%)</title><rect x="184.7" y="195.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.7" y="206.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.05%)</title><rect x="184.7" y="179.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="187.7" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.05%)</title><rect x="185.4" y="179.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="188.4" y="190.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="185.4" y="163.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="188.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (12 samples, 0.65%)</title><rect x="186.0" y="179.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="189.0" y="190.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (10 samples, 0.54%)</title><rect x="186.0" y="163.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.0" y="174.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (10 samples, 0.54%)</title><rect x="186.0" y="147.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="189.0" y="158.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (10 samples, 0.54%)</title><rect x="186.0" y="131.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="189.0" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (10 samples, 0.54%)</title><rect x="186.0" y="115.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.0" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (10 samples, 0.54%)</title><rect x="186.0" y="99.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.0" y="110.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (10 samples, 0.54%)</title><rect x="186.0" y="83.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="189.0" y="94.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (10 samples, 0.54%)</title><rect x="186.0" y="67.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="189.0" y="78.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.54%)</title><rect x="186.0" y="51.0" width="6.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="189.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (2 samples, 0.11%)</title><rect x="192.4" y="163.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="195.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.05%)</title><rect x="192.4" y="147.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="195.4" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.05%)</title><rect x="192.4" y="131.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="195.4" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="193.1" y="147.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="196.1" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.05%)</title><rect x="193.1" y="131.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="196.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.act (155 samples, 8.44%)</title><rect x="193.7" y="227.0" width="99.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.7" y="238.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.lambda$entity$1 (155 samples, 8.44%)</title><rect x="193.7" y="211.0" width="99.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.7" y="222.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.proxy (155 samples, 8.44%)</title><rect x="193.7" y="195.0" width="99.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.7" y="206.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (155 samples, 8.44%)</title><rect x="193.7" y="179.0" width="99.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.7" y="190.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (155 samples, 8.44%)</title><rect x="193.7" y="163.0" width="99.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="196.7" y="174.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (142 samples, 7.73%)</title><rect x="193.7" y="147.0" width="91.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.7" y="158.0">one/nio/htt..</text>
</g>
<g>
<title>byte[] (63 samples, 3.43%)</title><rect x="193.7" y="131.0" width="40.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="196.7" y="142.0">byt..</text>
</g>
<g>
<title>byte[] (79 samples, 4.30%)</title><rect x="234.2" y="131.0" width="50.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="237.2" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (8 samples, 0.44%)</title><rect x="284.9" y="147.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="287.9" y="158.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.05%)</title><rect x="284.9" y="131.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="287.9" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (4 samples, 0.22%)</title><rect x="285.6" y="131.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.6" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.22%)</title><rect x="285.6" y="115.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="288.6" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.22%)</title><rect x="285.6" y="99.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="288.6" y="110.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.16%)</title><rect x="285.6" y="83.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="288.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.05%)</title><rect x="287.5" y="83.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="290.5" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.05%)</title><rect x="288.1" y="131.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="291.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.05%)</title><rect x="288.1" y="115.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="291.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.11%)</title><rect x="288.8" y="131.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.11%)</title><rect x="288.8" y="115.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="291.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.11%)</title><rect x="288.8" y="99.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.8" y="110.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.05%)</title><rect x="288.8" y="83.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="291.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.05%)</title><rect x="289.4" y="83.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="292.4" y="94.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="289.4" y="67.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="292.4" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (5 samples, 0.27%)</title><rect x="290.1" y="147.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.1" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.27%)</title><rect x="290.1" y="131.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="293.1" y="142.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.27%)</title><rect x="290.1" y="115.0" width="3.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="293.1" y="126.0"></text>
</g>
<g>
<title>[worker tid=24774] (114 samples, 6.21%)</title><rect x="293.3" y="323.0" width="73.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="296.3" y="334.0">[worker ..</text>
</g>
<g>
<title>java/lang/Thread.run (114 samples, 6.21%)</title><rect x="293.3" y="307.0" width="73.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.3" y="318.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (114 samples, 6.21%)</title><rect x="293.3" y="291.0" width="73.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.3" y="302.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (114 samples, 6.21%)</title><rect x="293.3" y="275.0" width="73.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.3" y="286.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (114 samples, 6.21%)</title><rect x="293.3" y="259.0" width="73.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="296.3" y="270.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (114 samples, 6.21%)</title><rect x="293.3" y="243.0" width="73.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="296.3" y="254.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.33%)</title><rect x="293.3" y="227.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="296.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.33%)</title><rect x="293.3" y="211.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="296.3" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.16%)</title><rect x="293.3" y="195.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="296.3" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.16%)</title><rect x="293.3" y="179.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.3" y="190.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.16%)</title><rect x="293.3" y="163.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="296.3" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.16%)</title><rect x="295.2" y="195.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.2" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.16%)</title><rect x="295.2" y="179.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="298.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (108 samples, 5.88%)</title><rect x="297.1" y="227.0" width="69.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="300.1" y="238.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (108 samples, 5.88%)</title><rect x="297.1" y="211.0" width="69.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="300.1" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (108 samples, 5.88%)</title><rect x="297.1" y="195.0" width="69.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="300.1" y="206.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.05%)</title><rect x="297.1" y="179.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="300.1" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.05%)</title><rect x="297.8" y="179.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="300.8" y="190.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="297.8" y="163.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="300.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (106 samples, 5.77%)</title><rect x="298.4" y="179.0" width="68.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="301.4" y="190.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (88 samples, 4.79%)</title><rect x="298.4" y="163.0" width="56.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.4" y="174.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (88 samples, 4.79%)</title><rect x="298.4" y="147.0" width="56.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="301.4" y="158.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (88 samples, 4.79%)</title><rect x="298.4" y="131.0" width="56.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="301.4" y="142.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (88 samples, 4.79%)</title><rect x="298.4" y="115.0" width="56.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="301.4" y="126.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (88 samples, 4.79%)</title><rect x="298.4" y="99.0" width="56.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="301.4" y="110.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (88 samples, 4.79%)</title><rect x="298.4" y="83.0" width="56.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="301.4" y="94.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (88 samples, 4.79%)</title><rect x="298.4" y="67.0" width="56.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="301.4" y="78.0">org/ro..</text>
</g>
<g>
<title>byte[] (88 samples, 4.79%)</title><rect x="298.4" y="51.0" width="56.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="301.4" y="62.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (18 samples, 0.98%)</title><rect x="354.9" y="163.0" width="11.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="357.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.60%)</title><rect x="354.9" y="147.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="357.9" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.27%)</title><rect x="354.9" y="131.0" width="3.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="357.9" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.33%)</title><rect x="358.2" y="131.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="361.2" y="142.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.33%)</title><rect x="358.2" y="115.0" width="3.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="361.2" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.38%)</title><rect x="362.0" y="147.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="365.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.38%)</title><rect x="362.0" y="131.0" width="4.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="365.0" y="142.0"></text>
</g>
<g>
<title>[worker tid=24775] (159 samples, 8.66%)</title><rect x="366.5" y="323.0" width="102.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="369.5" y="334.0">[worker tid=..</text>
</g>
<g>
<title>java/lang/Thread.run (159 samples, 8.66%)</title><rect x="366.5" y="307.0" width="102.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="369.5" y="318.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (159 samples, 8.66%)</title><rect x="366.5" y="291.0" width="102.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="369.5" y="302.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (159 samples, 8.66%)</title><rect x="366.5" y="275.0" width="102.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.5" y="286.0">java/util/co..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (159 samples, 8.66%)</title><rect x="366.5" y="259.0" width="102.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="369.5" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (159 samples, 8.66%)</title><rect x="366.5" y="243.0" width="102.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="369.5" y="254.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.16%)</title><rect x="366.5" y="227.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.16%)</title><rect x="366.5" y="211.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="369.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.11%)</title><rect x="366.5" y="195.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.5" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.11%)</title><rect x="366.5" y="179.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="369.5" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.11%)</title><rect x="366.5" y="163.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="369.5" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.05%)</title><rect x="367.8" y="195.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="370.8" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.05%)</title><rect x="367.8" y="179.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="370.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (22 samples, 1.20%)</title><rect x="368.4" y="227.0" width="14.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="371.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (22 samples, 1.20%)</title><rect x="368.4" y="211.0" width="14.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (22 samples, 1.20%)</title><rect x="368.4" y="195.0" width="14.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="371.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (22 samples, 1.20%)</title><rect x="368.4" y="179.0" width="14.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.4" y="190.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (19 samples, 1.03%)</title><rect x="368.4" y="163.0" width="12.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.4" y="174.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (19 samples, 1.03%)</title><rect x="368.4" y="147.0" width="12.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="371.4" y="158.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (19 samples, 1.03%)</title><rect x="368.4" y="131.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="371.4" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (19 samples, 1.03%)</title><rect x="368.4" y="115.0" width="12.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="371.4" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (19 samples, 1.03%)</title><rect x="368.4" y="99.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="371.4" y="110.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (19 samples, 1.03%)</title><rect x="368.4" y="83.0" width="12.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="371.4" y="94.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (19 samples, 1.03%)</title><rect x="368.4" y="67.0" width="12.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.4" y="78.0"></text>
</g>
<g>
<title>byte[] (19 samples, 1.03%)</title><rect x="368.4" y="51.0" width="12.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="371.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (3 samples, 0.16%)</title><rect x="380.6" y="163.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="383.6" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.16%)</title><rect x="380.6" y="147.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.6" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.11%)</title><rect x="380.6" y="131.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="383.6" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="381.9" y="131.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.9" y="142.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="381.9" y="115.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="384.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.act (134 samples, 7.29%)</title><rect x="382.6" y="227.0" width="86.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="385.6" y="238.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.lambda$entity$1 (134 samples, 7.29%)</title><rect x="382.6" y="211.0" width="86.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.6" y="222.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.proxy (134 samples, 7.29%)</title><rect x="382.6" y="195.0" width="86.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="385.6" y="206.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (134 samples, 7.29%)</title><rect x="382.6" y="179.0" width="86.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="385.6" y="190.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (134 samples, 7.29%)</title><rect x="382.6" y="163.0" width="86.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="385.6" y="174.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (124 samples, 6.75%)</title><rect x="382.6" y="147.0" width="79.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.6" y="158.0">one/nio/h..</text>
</g>
<g>
<title>byte[] (57 samples, 3.10%)</title><rect x="382.6" y="131.0" width="36.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="385.6" y="142.0">byt..</text>
</g>
<g>
<title>byte[] (67 samples, 3.65%)</title><rect x="419.2" y="131.0" width="43.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="422.2" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (5 samples, 0.27%)</title><rect x="462.2" y="147.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="465.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (5 samples, 0.27%)</title><rect x="462.2" y="131.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.2" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.27%)</title><rect x="462.2" y="115.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.2" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.27%)</title><rect x="462.2" y="99.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.2" y="110.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.22%)</title><rect x="462.2" y="83.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="465.2" y="94.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.05%)</title><rect x="464.8" y="83.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="467.8" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (3 samples, 0.16%)</title><rect x="465.4" y="147.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.4" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.16%)</title><rect x="465.4" y="131.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.4" y="142.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.16%)</title><rect x="465.4" y="115.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="468.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.05%)</title><rect x="467.4" y="147.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="467.4" y="131.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="470.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="467.4" y="115.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.4" y="126.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.05%)</title><rect x="467.4" y="99.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="470.4" y="110.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (1 samples, 0.05%)</title><rect x="468.0" y="147.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="471.0" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (1 samples, 0.05%)</title><rect x="468.0" y="131.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="471.0" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (1 samples, 0.05%)</title><rect x="468.0" y="115.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="471.0" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.05%)</title><rect x="468.0" y="99.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="471.0" y="110.0"></text>
</g>
<g>
<title>[worker tid=24776] (113 samples, 6.15%)</title><rect x="468.6" y="323.0" width="72.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="471.6" y="334.0">[worker ..</text>
</g>
<g>
<title>java/lang/Thread.run (113 samples, 6.15%)</title><rect x="468.6" y="307.0" width="72.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.6" y="318.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (113 samples, 6.15%)</title><rect x="468.6" y="291.0" width="72.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.6" y="302.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (113 samples, 6.15%)</title><rect x="468.6" y="275.0" width="72.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="471.6" y="286.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.16%)</title><rect x="468.6" y="259.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="471.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3 samples, 0.16%)</title><rect x="468.6" y="243.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="471.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.16%)</title><rect x="468.6" y="227.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.16%)</title><rect x="468.6" y="211.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.6" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.16%)</title><rect x="468.6" y="195.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="471.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (110 samples, 5.99%)</title><rect x="470.6" y="259.0" width="70.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.6" y="270.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (110 samples, 5.99%)</title><rect x="470.6" y="243.0" width="70.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="473.6" y="254.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.22%)</title><rect x="470.6" y="227.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="473.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.22%)</title><rect x="470.6" y="211.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.05%)</title><rect x="470.6" y="195.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.05%)</title><rect x="470.6" y="179.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="473.6" y="190.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="470.6" y="163.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="473.6" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.16%)</title><rect x="471.2" y="195.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.2" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.16%)</title><rect x="471.2" y="179.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="474.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (106 samples, 5.77%)</title><rect x="473.1" y="227.0" width="68.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.1" y="238.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (106 samples, 5.77%)</title><rect x="473.1" y="211.0" width="68.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.1" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (106 samples, 5.77%)</title><rect x="473.1" y="195.0" width="68.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.1" y="206.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.11%)</title><rect x="473.1" y="179.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="476.1" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.38%)</title><rect x="474.4" y="179.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.4" y="190.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.27%)</title><rect x="474.4" y="163.0" width="3.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="477.4" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.05%)</title><rect x="477.6" y="163.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="480.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.05%)</title><rect x="478.3" y="163.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="481.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (97 samples, 5.28%)</title><rect x="478.9" y="179.0" width="62.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="481.9" y="190.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (87 samples, 4.74%)</title><rect x="478.9" y="163.0" width="55.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.9" y="174.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (87 samples, 4.74%)</title><rect x="478.9" y="147.0" width="55.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="481.9" y="158.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (87 samples, 4.74%)</title><rect x="478.9" y="131.0" width="55.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="481.9" y="142.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (87 samples, 4.74%)</title><rect x="478.9" y="115.0" width="55.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.9" y="126.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (87 samples, 4.74%)</title><rect x="478.9" y="99.0" width="55.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.9" y="110.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (87 samples, 4.74%)</title><rect x="478.9" y="83.0" width="55.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.9" y="94.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (87 samples, 4.74%)</title><rect x="478.9" y="67.0" width="55.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="481.9" y="78.0">org/r..</text>
</g>
<g>
<title>byte[] (87 samples, 4.74%)</title><rect x="478.9" y="51.0" width="55.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="481.9" y="62.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (10 samples, 0.54%)</title><rect x="534.8" y="163.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.22%)</title><rect x="534.8" y="147.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="537.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.11%)</title><rect x="534.8" y="131.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="537.8" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.11%)</title><rect x="536.1" y="131.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="539.1" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.11%)</title><rect x="536.1" y="115.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="539.1" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.33%)</title><rect x="537.4" y="147.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="540.4" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.33%)</title><rect x="537.4" y="131.0" width="3.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="540.4" y="142.0"></text>
</g>
<g>
<title>[worker tid=24777] (150 samples, 8.17%)</title><rect x="541.2" y="323.0" width="96.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="544.2" y="334.0">[worker tid..</text>
</g>
<g>
<title>java/lang/Thread.run (150 samples, 8.17%)</title><rect x="541.2" y="307.0" width="96.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="544.2" y="318.0">java/lang/T..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (150 samples, 8.17%)</title><rect x="541.2" y="291.0" width="96.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="544.2" y="302.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (150 samples, 8.17%)</title><rect x="541.2" y="275.0" width="96.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.2" y="286.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.11%)</title><rect x="541.2" y="259.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.11%)</title><rect x="541.2" y="243.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.11%)</title><rect x="541.2" y="227.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.11%)</title><rect x="541.2" y="211.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.2" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.11%)</title><rect x="541.2" y="195.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="544.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (148 samples, 8.06%)</title><rect x="542.5" y="259.0" width="95.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="545.5" y="270.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (148 samples, 8.06%)</title><rect x="542.5" y="243.0" width="95.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.5" y="254.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.11%)</title><rect x="542.5" y="227.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="545.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.11%)</title><rect x="542.5" y="211.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="545.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.11%)</title><rect x="542.5" y="195.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="545.5" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.11%)</title><rect x="542.5" y="179.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.5" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.11%)</title><rect x="542.5" y="163.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="545.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (36 samples, 1.96%)</title><rect x="543.8" y="227.0" width="23.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.8" y="238.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (36 samples, 1.96%)</title><rect x="543.8" y="211.0" width="23.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="546.8" y="222.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (36 samples, 1.96%)</title><rect x="543.8" y="195.0" width="23.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="546.8" y="206.0">r..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.16%)</title><rect x="543.8" y="179.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.8" y="190.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="543.8" y="163.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="546.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.11%)</title><rect x="544.4" y="163.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="547.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (33 samples, 1.80%)</title><rect x="545.7" y="179.0" width="21.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="548.7" y="190.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (30 samples, 1.63%)</title><rect x="545.7" y="163.0" width="19.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.7" y="174.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (30 samples, 1.63%)</title><rect x="545.7" y="147.0" width="19.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.7" y="158.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (30 samples, 1.63%)</title><rect x="545.7" y="131.0" width="19.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.7" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (30 samples, 1.63%)</title><rect x="545.7" y="115.0" width="19.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.7" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (30 samples, 1.63%)</title><rect x="545.7" y="99.0" width="19.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.7" y="110.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (30 samples, 1.63%)</title><rect x="545.7" y="83.0" width="19.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.7" y="94.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (30 samples, 1.63%)</title><rect x="545.7" y="67.0" width="19.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.7" y="78.0"></text>
</g>
<g>
<title>byte[] (30 samples, 1.63%)</title><rect x="545.7" y="51.0" width="19.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="548.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (3 samples, 0.16%)</title><rect x="565.0" y="163.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.0" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.11%)</title><rect x="565.0" y="147.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.05%)</title><rect x="565.0" y="131.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="568.0" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="565.6" y="131.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="568.6" y="142.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="565.6" y="115.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="568.6" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="566.3" y="147.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="569.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.05%)</title><rect x="566.3" y="131.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="569.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.act (110 samples, 5.99%)</title><rect x="566.9" y="227.0" width="70.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="569.9" y="238.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.lambda$entity$1 (110 samples, 5.99%)</title><rect x="566.9" y="211.0" width="70.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.9" y="222.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.proxy (110 samples, 5.99%)</title><rect x="566.9" y="195.0" width="70.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="569.9" y="206.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (110 samples, 5.99%)</title><rect x="566.9" y="179.0" width="70.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.9" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (110 samples, 5.99%)</title><rect x="566.9" y="163.0" width="70.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="569.9" y="174.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (96 samples, 5.23%)</title><rect x="566.9" y="147.0" width="61.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="569.9" y="158.0">one/ni..</text>
</g>
<g>
<title>byte[] (37 samples, 2.01%)</title><rect x="566.9" y="131.0" width="23.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="569.9" y="142.0">b..</text>
</g>
<g>
<title>byte[] (59 samples, 3.21%)</title><rect x="590.7" y="131.0" width="37.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="593.7" y="142.0">byt..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (8 samples, 0.44%)</title><rect x="628.6" y="147.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="631.6" y="158.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="628.6" y="131.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="631.6" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (6 samples, 0.33%)</title><rect x="629.2" y="131.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.2" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.33%)</title><rect x="629.2" y="115.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="632.2" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.33%)</title><rect x="629.2" y="99.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.2" y="110.0"></text>
</g>
<g>
<title>char[] (5 samples, 0.27%)</title><rect x="629.2" y="83.0" width="3.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="632.2" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="632.4" y="83.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.4" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="632.4" y="67.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.4" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.05%)</title><rect x="632.4" y="51.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="635.4" y="62.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="632.4" y="35.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="635.4" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.05%)</title><rect x="633.1" y="131.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="633.1" y="115.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="633.1" y="99.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.05%)</title><rect x="633.1" y="83.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="636.1" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (5 samples, 0.27%)</title><rect x="633.7" y="147.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="636.7" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.27%)</title><rect x="633.7" y="131.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.7" y="142.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.27%)</title><rect x="633.7" y="115.0" width="3.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="636.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.05%)</title><rect x="636.9" y="147.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="636.9" y="131.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="636.9" y="115.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.9" y="126.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.05%)</title><rect x="636.9" y="99.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="639.9" y="110.0"></text>
</g>
<g>
<title>[worker tid=24778] (179 samples, 9.74%)</title><rect x="637.6" y="323.0" width="115.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="640.6" y="334.0">[worker tid=24..</text>
</g>
<g>
<title>java/lang/Thread.run (179 samples, 9.74%)</title><rect x="637.6" y="307.0" width="115.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.6" y="318.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (179 samples, 9.74%)</title><rect x="637.6" y="291.0" width="115.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.6" y="302.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (179 samples, 9.74%)</title><rect x="637.6" y="275.0" width="115.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="640.6" y="286.0">java/util/conc..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (179 samples, 9.74%)</title><rect x="637.6" y="259.0" width="115.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.6" y="270.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (179 samples, 9.74%)</title><rect x="637.6" y="243.0" width="115.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.6" y="254.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 0.38%)</title><rect x="637.6" y="227.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 0.38%)</title><rect x="637.6" y="211.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.33%)</title><rect x="637.6" y="195.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6 samples, 0.33%)</title><rect x="637.6" y="179.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.6" y="190.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.33%)</title><rect x="637.6" y="163.0" width="3.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="640.6" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.05%)</title><rect x="641.4" y="195.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="644.4" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.05%)</title><rect x="641.4" y="179.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="644.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (26 samples, 1.42%)</title><rect x="642.1" y="227.0" width="16.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (26 samples, 1.42%)</title><rect x="642.1" y="211.0" width="16.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (26 samples, 1.42%)</title><rect x="642.1" y="195.0" width="16.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (26 samples, 1.42%)</title><rect x="642.1" y="179.0" width="16.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.1" y="190.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (23 samples, 1.25%)</title><rect x="642.1" y="163.0" width="14.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.1" y="174.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (23 samples, 1.25%)</title><rect x="642.1" y="147.0" width="14.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.1" y="158.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (23 samples, 1.25%)</title><rect x="642.1" y="131.0" width="14.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.1" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (23 samples, 1.25%)</title><rect x="642.1" y="115.0" width="14.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.1" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (23 samples, 1.25%)</title><rect x="642.1" y="99.0" width="14.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="645.1" y="110.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (23 samples, 1.25%)</title><rect x="642.1" y="83.0" width="14.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.1" y="94.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (23 samples, 1.25%)</title><rect x="642.1" y="67.0" width="14.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.1" y="78.0"></text>
</g>
<g>
<title>byte[] (23 samples, 1.25%)</title><rect x="642.1" y="51.0" width="14.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="645.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (3 samples, 0.16%)</title><rect x="656.8" y="163.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.11%)</title><rect x="656.8" y="147.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.11%)</title><rect x="656.8" y="131.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="659.8" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.05%)</title><rect x="658.1" y="147.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.1" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.05%)</title><rect x="658.1" y="131.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="661.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.act (146 samples, 7.95%)</title><rect x="658.8" y="227.0" width="93.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="661.8" y="238.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.lambda$entity$1 (146 samples, 7.95%)</title><rect x="658.8" y="211.0" width="93.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.8" y="222.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.proxy (146 samples, 7.95%)</title><rect x="658.8" y="195.0" width="93.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.8" y="206.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (146 samples, 7.95%)</title><rect x="658.8" y="179.0" width="93.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.8" y="190.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (146 samples, 7.95%)</title><rect x="658.8" y="163.0" width="93.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.8" y="174.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (139 samples, 7.57%)</title><rect x="658.8" y="147.0" width="89.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="661.8" y="158.0">one/nio/ht..</text>
</g>
<g>
<title>byte[] (52 samples, 2.83%)</title><rect x="658.8" y="131.0" width="33.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="661.8" y="142.0">by..</text>
</g>
<g>
<title>byte[] (87 samples, 4.74%)</title><rect x="692.2" y="131.0" width="55.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="695.2" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (6 samples, 0.33%)</title><rect x="748.1" y="147.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="751.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.11%)</title><rect x="748.1" y="131.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.11%)</title><rect x="748.1" y="115.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.1" y="126.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.05%)</title><rect x="748.1" y="99.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="751.1" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.05%)</title><rect x="748.7" y="99.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.7" y="110.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="748.7" y="83.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="751.7" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (4 samples, 0.22%)</title><rect x="749.3" y="131.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="752.3" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.22%)</title><rect x="749.3" y="115.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.3" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.22%)</title><rect x="749.3" y="99.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="752.3" y="110.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.11%)</title><rect x="749.3" y="83.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="752.3" y="94.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.11%)</title><rect x="750.6" y="83.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="753.6" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.05%)</title><rect x="751.9" y="147.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="754.9" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.05%)</title><rect x="751.9" y="131.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.9" y="142.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="751.9" y="115.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="754.9" y="126.0"></text>
</g>
<g>
<title>[worker tid=24779] (115 samples, 6.26%)</title><rect x="752.6" y="323.0" width="73.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="755.6" y="334.0">[worker ..</text>
</g>
<g>
<title>java/lang/Thread.run (115 samples, 6.26%)</title><rect x="752.6" y="307.0" width="73.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="755.6" y="318.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (115 samples, 6.26%)</title><rect x="752.6" y="291.0" width="73.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.6" y="302.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (115 samples, 6.26%)</title><rect x="752.6" y="275.0" width="73.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="755.6" y="286.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.05%)</title><rect x="752.6" y="259.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="755.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.05%)</title><rect x="752.6" y="243.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="755.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.05%)</title><rect x="752.6" y="227.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="755.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.05%)</title><rect x="752.6" y="211.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.6" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.05%)</title><rect x="752.6" y="195.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="755.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (114 samples, 6.21%)</title><rect x="753.2" y="259.0" width="73.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="756.2" y="270.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (114 samples, 6.21%)</title><rect x="753.2" y="243.0" width="73.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.2" y="254.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 0.38%)</title><rect x="753.2" y="227.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="756.2" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 0.38%)</title><rect x="753.2" y="211.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.2" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.22%)</title><rect x="753.2" y="195.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.2" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.22%)</title><rect x="753.2" y="179.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.2" y="190.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.22%)</title><rect x="753.2" y="163.0" width="2.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="756.2" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.16%)</title><rect x="755.8" y="195.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="758.8" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.16%)</title><rect x="755.8" y="179.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="758.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (107 samples, 5.82%)</title><rect x="757.7" y="227.0" width="68.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="760.7" y="238.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (107 samples, 5.82%)</title><rect x="757.7" y="211.0" width="68.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.7" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (107 samples, 5.82%)</title><rect x="757.7" y="195.0" width="68.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.7" y="206.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.05%)</title><rect x="757.7" y="179.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="760.7" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.16%)</title><rect x="758.3" y="179.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="761.3" y="190.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="758.3" y="163.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="761.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.05%)</title><rect x="759.0" y="163.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="762.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.05%)</title><rect x="759.6" y="163.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="762.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (103 samples, 5.61%)</title><rect x="760.3" y="179.0" width="66.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="763.3" y="190.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (89 samples, 4.84%)</title><rect x="760.3" y="163.0" width="57.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="763.3" y="174.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (89 samples, 4.84%)</title><rect x="760.3" y="147.0" width="57.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="763.3" y="158.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (89 samples, 4.84%)</title><rect x="760.3" y="131.0" width="57.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.3" y="142.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (89 samples, 4.84%)</title><rect x="760.3" y="115.0" width="57.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="763.3" y="126.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (89 samples, 4.84%)</title><rect x="760.3" y="99.0" width="57.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.3" y="110.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (89 samples, 4.84%)</title><rect x="760.3" y="83.0" width="57.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="763.3" y="94.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (89 samples, 4.84%)</title><rect x="760.3" y="67.0" width="57.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.3" y="78.0">org/ro..</text>
</g>
<g>
<title>byte[] (89 samples, 4.84%)</title><rect x="760.3" y="51.0" width="57.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="763.3" y="62.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (14 samples, 0.76%)</title><rect x="817.4" y="163.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="820.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.44%)</title><rect x="817.4" y="147.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="820.4" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.22%)</title><rect x="817.4" y="131.0" width="2.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="820.4" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.22%)</title><rect x="820.0" y="131.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.0" y="142.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.22%)</title><rect x="820.0" y="115.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="823.0" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.33%)</title><rect x="822.6" y="147.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.6" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.33%)</title><rect x="822.6" y="131.0" width="3.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="825.6" y="142.0"></text>
</g>
<g>
<title>[worker tid=24780] (111 samples, 6.04%)</title><rect x="826.4" y="323.0" width="71.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="829.4" y="334.0">[worker ..</text>
</g>
<g>
<title>java/lang/Thread.run (111 samples, 6.04%)</title><rect x="826.4" y="307.0" width="71.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="829.4" y="318.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (111 samples, 6.04%)</title><rect x="826.4" y="291.0" width="71.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="829.4" y="302.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (111 samples, 6.04%)</title><rect x="826.4" y="275.0" width="71.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="829.4" y="286.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.05%)</title><rect x="826.4" y="259.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="829.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.05%)</title><rect x="826.4" y="243.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.05%)</title><rect x="826.4" y="227.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="829.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.05%)</title><rect x="826.4" y="211.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="829.4" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.05%)</title><rect x="826.4" y="195.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="829.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (110 samples, 5.99%)</title><rect x="827.1" y="259.0" width="70.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="830.1" y="270.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (110 samples, 5.99%)</title><rect x="827.1" y="243.0" width="70.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="830.1" y="254.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 0.49%)</title><rect x="827.1" y="227.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 0.49%)</title><rect x="827.1" y="211.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.33%)</title><rect x="827.1" y="195.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.1" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6 samples, 0.33%)</title><rect x="827.1" y="179.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="830.1" y="190.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.33%)</title><rect x="827.1" y="163.0" width="3.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="830.1" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.16%)</title><rect x="830.9" y="195.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="833.9" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.16%)</title><rect x="830.9" y="179.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="833.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (101 samples, 5.50%)</title><rect x="832.9" y="227.0" width="64.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="835.9" y="238.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (101 samples, 5.50%)</title><rect x="832.9" y="211.0" width="64.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.9" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (101 samples, 5.50%)</title><rect x="832.9" y="195.0" width="64.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.9" y="206.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.16%)</title><rect x="832.9" y="179.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="835.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.44%)</title><rect x="834.8" y="179.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="837.8" y="190.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="834.8" y="163.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="837.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.22%)</title><rect x="835.4" y="163.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="838.4" y="174.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.16%)</title><rect x="838.0" y="163.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="841.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (90 samples, 4.90%)</title><rect x="839.9" y="179.0" width="57.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="842.9" y="190.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (80 samples, 4.35%)</title><rect x="839.9" y="163.0" width="51.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.9" y="174.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (80 samples, 4.35%)</title><rect x="839.9" y="147.0" width="51.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.9" y="158.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (80 samples, 4.35%)</title><rect x="839.9" y="131.0" width="51.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="842.9" y="142.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (80 samples, 4.35%)</title><rect x="839.9" y="115.0" width="51.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="842.9" y="126.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (80 samples, 4.35%)</title><rect x="839.9" y="99.0" width="51.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="842.9" y="110.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (80 samples, 4.35%)</title><rect x="839.9" y="83.0" width="51.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="842.9" y="94.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (80 samples, 4.35%)</title><rect x="839.9" y="67.0" width="51.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="842.9" y="78.0">org/r..</text>
</g>
<g>
<title>byte[] (80 samples, 4.35%)</title><rect x="839.9" y="51.0" width="51.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="842.9" y="62.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (10 samples, 0.54%)</title><rect x="891.3" y="163.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.22%)</title><rect x="891.3" y="147.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="894.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.16%)</title><rect x="891.3" y="131.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="894.3" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="893.2" y="131.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="896.2" y="142.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="893.2" y="115.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="896.2" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.33%)</title><rect x="893.9" y="147.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="896.9" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.33%)</title><rect x="893.9" y="131.0" width="3.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="896.9" y="142.0"></text>
</g>
<g>
<title>[worker tid=24781] (119 samples, 6.48%)</title><rect x="897.7" y="323.0" width="76.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="900.7" y="334.0">[worker ..</text>
</g>
<g>
<title>java/lang/Thread.run (119 samples, 6.48%)</title><rect x="897.7" y="307.0" width="76.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="900.7" y="318.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (119 samples, 6.48%)</title><rect x="897.7" y="291.0" width="76.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.7" y="302.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (119 samples, 6.48%)</title><rect x="897.7" y="275.0" width="76.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="900.7" y="286.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.05%)</title><rect x="897.7" y="259.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.05%)</title><rect x="897.7" y="243.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.05%)</title><rect x="897.7" y="227.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.05%)</title><rect x="897.7" y="211.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="900.7" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.05%)</title><rect x="897.7" y="195.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="900.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (118 samples, 6.42%)</title><rect x="898.4" y="259.0" width="75.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.4" y="270.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (118 samples, 6.42%)</title><rect x="898.4" y="243.0" width="75.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.4" y="254.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (14 samples, 0.76%)</title><rect x="898.4" y="227.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="901.4" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (14 samples, 0.76%)</title><rect x="898.4" y="211.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="901.4" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.65%)</title><rect x="898.4" y="195.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.4" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (12 samples, 0.65%)</title><rect x="898.4" y="179.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="901.4" y="190.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.65%)</title><rect x="898.4" y="163.0" width="7.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="901.4" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.11%)</title><rect x="906.1" y="195.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.1" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.11%)</title><rect x="906.1" y="179.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="909.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (104 samples, 5.66%)</title><rect x="907.4" y="227.0" width="66.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="910.4" y="238.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (104 samples, 5.66%)</title><rect x="907.4" y="211.0" width="66.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="910.4" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (104 samples, 5.66%)</title><rect x="907.4" y="195.0" width="66.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="910.4" y="206.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.05%)</title><rect x="907.4" y="179.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="910.4" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.33%)</title><rect x="908.0" y="179.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="911.0" y="190.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.22%)</title><rect x="908.0" y="163.0" width="2.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="911.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.11%)</title><rect x="910.6" y="163.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="913.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (97 samples, 5.28%)</title><rect x="911.9" y="179.0" width="62.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.9" y="190.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (82 samples, 4.46%)</title><rect x="911.9" y="163.0" width="52.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="914.9" y="174.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (82 samples, 4.46%)</title><rect x="911.9" y="147.0" width="52.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="914.9" y="158.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (82 samples, 4.46%)</title><rect x="911.9" y="131.0" width="52.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="914.9" y="142.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (82 samples, 4.46%)</title><rect x="911.9" y="115.0" width="52.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.9" y="126.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (82 samples, 4.46%)</title><rect x="911.9" y="99.0" width="52.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="914.9" y="110.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (82 samples, 4.46%)</title><rect x="911.9" y="83.0" width="52.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="914.9" y="94.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (82 samples, 4.46%)</title><rect x="911.9" y="67.0" width="52.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.9" y="78.0">org/r..</text>
</g>
<g>
<title>byte[] (82 samples, 4.46%)</title><rect x="911.9" y="51.0" width="52.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="914.9" y="62.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (15 samples, 0.82%)</title><rect x="964.5" y="163.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="967.5" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.44%)</title><rect x="964.5" y="147.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.5" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.33%)</title><rect x="964.5" y="131.0" width="3.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="967.5" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.11%)</title><rect x="968.4" y="131.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.4" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.11%)</title><rect x="968.4" y="115.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="971.4" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (7 samples, 0.38%)</title><rect x="969.7" y="147.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="972.7" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.38%)</title><rect x="969.7" y="131.0" width="4.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="972.7" y="142.0"></text>
</g>
<g>
<title>[worker tid=24782] (111 samples, 6.04%)</title><rect x="974.2" y="323.0" width="71.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="977.2" y="334.0">[worker ..</text>
</g>
<g>
<title>java/lang/Thread.run (111 samples, 6.04%)</title><rect x="974.2" y="307.0" width="71.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="977.2" y="318.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (111 samples, 6.04%)</title><rect x="974.2" y="291.0" width="71.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="977.2" y="302.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (111 samples, 6.04%)</title><rect x="974.2" y="275.0" width="71.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="977.2" y="286.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.11%)</title><rect x="974.2" y="259.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="977.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.11%)</title><rect x="974.2" y="243.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="977.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.11%)</title><rect x="974.2" y="227.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.11%)</title><rect x="974.2" y="211.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="977.2" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.11%)</title><rect x="974.2" y="195.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="977.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (109 samples, 5.93%)</title><rect x="975.5" y="259.0" width="70.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="978.5" y="270.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (109 samples, 5.93%)</title><rect x="975.5" y="243.0" width="70.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="978.5" y="254.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 0.44%)</title><rect x="975.5" y="227.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="978.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 0.44%)</title><rect x="975.5" y="211.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="978.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.33%)</title><rect x="975.5" y="195.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="978.5" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6 samples, 0.33%)</title><rect x="975.5" y="179.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="978.5" y="190.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.33%)</title><rect x="975.5" y="163.0" width="3.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="978.5" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.11%)</title><rect x="979.3" y="195.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="982.3" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.11%)</title><rect x="979.3" y="179.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="982.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (101 samples, 5.50%)</title><rect x="980.6" y="227.0" width="64.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="983.6" y="238.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (101 samples, 5.50%)</title><rect x="980.6" y="211.0" width="64.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="983.6" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (101 samples, 5.50%)</title><rect x="980.6" y="195.0" width="64.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="983.6" y="206.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.05%)</title><rect x="980.6" y="179.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="983.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.16%)</title><rect x="981.2" y="179.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="984.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.11%)</title><rect x="981.2" y="163.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="984.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.05%)</title><rect x="982.5" y="163.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="985.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (97 samples, 5.28%)</title><rect x="983.2" y="179.0" width="62.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="986.2" y="190.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (80 samples, 4.35%)</title><rect x="983.2" y="163.0" width="51.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="986.2" y="174.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (80 samples, 4.35%)</title><rect x="983.2" y="147.0" width="51.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="986.2" y="158.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (80 samples, 4.35%)</title><rect x="983.2" y="131.0" width="51.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="986.2" y="142.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (80 samples, 4.35%)</title><rect x="983.2" y="115.0" width="51.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="986.2" y="126.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (80 samples, 4.35%)</title><rect x="983.2" y="99.0" width="51.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="986.2" y="110.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (80 samples, 4.35%)</title><rect x="983.2" y="83.0" width="51.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="986.2" y="94.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (80 samples, 4.35%)</title><rect x="983.2" y="67.0" width="51.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="986.2" y="78.0">org/r..</text>
</g>
<g>
<title>byte[] (80 samples, 4.35%)</title><rect x="983.2" y="51.0" width="51.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="986.2" y="62.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (17 samples, 0.93%)</title><rect x="1034.6" y="163.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1037.6" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (9 samples, 0.49%)</title><rect x="1034.6" y="147.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1037.6" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.27%)</title><rect x="1034.6" y="131.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1037.6" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.22%)</title><rect x="1037.8" y="131.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1040.8" y="142.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.22%)</title><rect x="1037.8" y="115.0" width="2.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1040.8" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.44%)</title><rect x="1040.3" y="147.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1043.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.44%)</title><rect x="1040.3" y="131.0" width="5.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1043.3" y="142.0"></text>
</g>
<g>
<title>[worker tid=24783] (111 samples, 6.04%)</title><rect x="1045.5" y="323.0" width="71.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1048.5" y="334.0">[worker ..</text>
</g>
<g>
<title>java/lang/Thread.run (111 samples, 6.04%)</title><rect x="1045.5" y="307.0" width="71.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1048.5" y="318.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (111 samples, 6.04%)</title><rect x="1045.5" y="291.0" width="71.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1048.5" y="302.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (111 samples, 6.04%)</title><rect x="1045.5" y="275.0" width="71.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.5" y="286.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.05%)</title><rect x="1045.5" y="259.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1048.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.05%)</title><rect x="1045.5" y="243.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.05%)</title><rect x="1045.5" y="227.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.05%)</title><rect x="1045.5" y="211.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1048.5" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.05%)</title><rect x="1045.5" y="195.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1048.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (110 samples, 5.99%)</title><rect x="1046.1" y="259.0" width="70.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1049.1" y="270.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (110 samples, 5.99%)</title><rect x="1046.1" y="243.0" width="70.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1049.1" y="254.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.54%)</title><rect x="1046.1" y="227.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1049.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.54%)</title><rect x="1046.1" y="211.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1049.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.44%)</title><rect x="1046.1" y="195.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1049.1" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (8 samples, 0.44%)</title><rect x="1046.1" y="179.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1049.1" y="190.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.44%)</title><rect x="1046.1" y="163.0" width="5.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1049.1" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.11%)</title><rect x="1051.3" y="195.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1054.3" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.11%)</title><rect x="1051.3" y="179.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1054.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (100 samples, 5.44%)</title><rect x="1052.5" y="227.0" width="64.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1055.5" y="238.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (100 samples, 5.44%)</title><rect x="1052.5" y="211.0" width="64.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1055.5" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (100 samples, 5.44%)</title><rect x="1052.5" y="195.0" width="64.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1055.5" y="206.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.11%)</title><rect x="1052.5" y="179.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1055.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.27%)</title><rect x="1053.8" y="179.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1056.8" y="190.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.22%)</title><rect x="1053.8" y="163.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1056.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.05%)</title><rect x="1056.4" y="163.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1059.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (93 samples, 5.06%)</title><rect x="1057.0" y="179.0" width="59.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1060.0" y="190.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (72 samples, 3.92%)</title><rect x="1057.0" y="163.0" width="46.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1060.0" y="174.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (72 samples, 3.92%)</title><rect x="1057.0" y="147.0" width="46.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1060.0" y="158.0">org/..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (72 samples, 3.92%)</title><rect x="1057.0" y="131.0" width="46.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1060.0" y="142.0">org/..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (72 samples, 3.92%)</title><rect x="1057.0" y="115.0" width="46.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1060.0" y="126.0">org/..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (72 samples, 3.92%)</title><rect x="1057.0" y="99.0" width="46.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1060.0" y="110.0">org/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (72 samples, 3.92%)</title><rect x="1057.0" y="83.0" width="46.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1060.0" y="94.0">org/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (72 samples, 3.92%)</title><rect x="1057.0" y="67.0" width="46.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1060.0" y="78.0">org/..</text>
</g>
<g>
<title>byte[] (72 samples, 3.92%)</title><rect x="1057.0" y="51.0" width="46.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1060.0" y="62.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (21 samples, 1.14%)</title><rect x="1103.3" y="163.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1106.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (12 samples, 0.65%)</title><rect x="1103.3" y="147.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1106.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.49%)</title><rect x="1103.3" y="131.0" width="5.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1106.3" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.16%)</title><rect x="1109.1" y="131.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1112.1" y="142.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.16%)</title><rect x="1109.1" y="115.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1112.1" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.49%)</title><rect x="1111.0" y="147.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1114.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (9 samples, 0.49%)</title><rect x="1111.0" y="131.0" width="5.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1114.0" y="142.0"></text>
</g>
<g>
<title>[worker tid=24784] (114 samples, 6.21%)</title><rect x="1116.8" y="323.0" width="73.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1119.8" y="334.0">[worker ..</text>
</g>
<g>
<title>java/lang/Thread.run (114 samples, 6.21%)</title><rect x="1116.8" y="307.0" width="73.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1119.8" y="318.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (114 samples, 6.21%)</title><rect x="1116.8" y="291.0" width="73.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1119.8" y="302.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (114 samples, 6.21%)</title><rect x="1116.8" y="275.0" width="73.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1119.8" y="286.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.16%)</title><rect x="1116.8" y="259.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3 samples, 0.16%)</title><rect x="1116.8" y="243.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1119.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.16%)</title><rect x="1116.8" y="227.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1119.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.16%)</title><rect x="1116.8" y="211.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.8" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.16%)</title><rect x="1116.8" y="195.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1119.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (111 samples, 6.04%)</title><rect x="1118.7" y="259.0" width="71.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1121.7" y="270.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (111 samples, 6.04%)</title><rect x="1118.7" y="243.0" width="71.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1121.7" y="254.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.22%)</title><rect x="1118.7" y="227.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1121.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.22%)</title><rect x="1118.7" y="211.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1121.7" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.11%)</title><rect x="1118.7" y="195.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1121.7" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1118.7" y="179.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1121.7" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.11%)</title><rect x="1118.7" y="163.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1121.7" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.11%)</title><rect x="1120.0" y="195.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1123.0" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.11%)</title><rect x="1120.0" y="179.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1123.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/1931355605.act (107 samples, 5.82%)</title><rect x="1121.3" y="227.0" width="68.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1124.3" y="238.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (107 samples, 5.82%)</title><rect x="1121.3" y="211.0" width="68.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1124.3" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (107 samples, 5.82%)</title><rect x="1121.3" y="195.0" width="68.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1124.3" y="206.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.05%)</title><rect x="1121.3" y="179.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1124.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.44%)</title><rect x="1121.9" y="179.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.9" y="190.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.16%)</title><rect x="1121.9" y="163.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1124.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.11%)</title><rect x="1123.8" y="163.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1126.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.16%)</title><rect x="1125.1" y="163.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1128.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (98 samples, 5.33%)</title><rect x="1127.0" y="179.0" width="63.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1130.0" y="190.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (80 samples, 4.35%)</title><rect x="1127.0" y="163.0" width="51.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1130.0" y="174.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (80 samples, 4.35%)</title><rect x="1127.0" y="147.0" width="51.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1130.0" y="158.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (80 samples, 4.35%)</title><rect x="1127.0" y="131.0" width="51.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1130.0" y="142.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (80 samples, 4.35%)</title><rect x="1127.0" y="115.0" width="51.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1130.0" y="126.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (80 samples, 4.35%)</title><rect x="1127.0" y="99.0" width="51.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1130.0" y="110.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (80 samples, 4.35%)</title><rect x="1127.0" y="83.0" width="51.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1130.0" y="94.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (80 samples, 4.35%)</title><rect x="1127.0" y="67.0" width="51.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.0" y="78.0">org/r..</text>
</g>
<g>
<title>byte[] (80 samples, 4.35%)</title><rect x="1127.0" y="51.0" width="51.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1130.0" y="62.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (18 samples, 0.98%)</title><rect x="1178.4" y="163.0" width="11.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (12 samples, 0.65%)</title><rect x="1178.4" y="147.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.4" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.54%)</title><rect x="1178.4" y="131.0" width="6.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1181.4" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1184.9" y="131.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1187.9" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.11%)</title><rect x="1184.9" y="115.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1187.9" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (6 samples, 0.33%)</title><rect x="1186.1" y="147.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1189.1" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.33%)</title><rect x="1186.1" y="131.0" width="3.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1189.1" y="142.0"></text>
</g>
</g>
</svg>
