<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="901"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="901"> </text>
<g id="frames">
<g>
<title>all (388 samples, 100.00%)</title><rect x="10.0" y="867.0" width="1180.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="878.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=24694] (52 samples, 13.40%)</title><rect x="10.0" y="851.0" width="158.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="13.0" y="862.0">[NIO Selector #0 tid..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (52 samples, 13.40%)</title><rect x="10.0" y="835.0" width="158.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="846.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.52%)</title><rect x="10.0" y="819.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.52%)</title><rect x="10.0" y="803.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 2.58%)</title><rect x="16.1" y="819.0" width="30.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.1" y="830.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (10 samples, 2.58%)</title><rect x="16.1" y="803.0" width="30.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.1" y="814.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.26%)</title><rect x="16.1" y="787.0" width="3.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="19.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.52%)</title><rect x="19.1" y="787.0" width="6.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="22.1" y="798.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.52%)</title><rect x="19.1" y="771.0" width="6.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="22.1" y="782.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.52%)</title><rect x="19.1" y="755.0" width="6.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="22.1" y="766.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 1.80%)</title><rect x="25.2" y="787.0" width="21.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="28.2" y="798.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (6 samples, 1.55%)</title><rect x="28.2" y="771.0" width="18.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="31.2" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.55%)</title><rect x="28.2" y="755.0" width="18.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="31.2" y="766.0"></text>
</g>
<g>
<title>sys_epoll_wait (6 samples, 1.55%)</title><rect x="28.2" y="739.0" width="18.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="31.2" y="750.0"></text>
</g>
<g>
<title>default_wake_function (5 samples, 1.29%)</title><rect x="31.3" y="723.0" width="15.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="34.3" y="734.0"></text>
</g>
<g>
<title>ep_poll (5 samples, 1.29%)</title><rect x="31.3" y="707.0" width="15.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="34.3" y="718.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (5 samples, 1.29%)</title><rect x="31.3" y="691.0" width="15.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="34.3" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 1.03%)</title><rect x="34.3" y="675.0" width="12.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="37.3" y="686.0"></text>
</g>
<g>
<title>schedule (4 samples, 1.03%)</title><rect x="34.3" y="659.0" width="12.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="37.3" y="670.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 1.03%)</title><rect x="34.3" y="643.0" width="12.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="37.3" y="654.0"></text>
</g>
<g>
<title>__schedule (4 samples, 1.03%)</title><rect x="34.3" y="627.0" width="12.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="37.3" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 1.03%)</title><rect x="34.3" y="611.0" width="12.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="37.3" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (40 samples, 10.31%)</title><rect x="46.5" y="819.0" width="121.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.5" y="830.0">one/nio/net/Ses..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.26%)</title><rect x="46.5" y="803.0" width="3.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="49.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (39 samples, 10.05%)</title><rect x="49.5" y="803.0" width="118.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.5" y="814.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (26 samples, 6.70%)</title><rect x="49.5" y="787.0" width="79.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.5" y="798.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (22 samples, 5.67%)</title><rect x="55.6" y="771.0" width="66.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.6" y="782.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (22 samples, 5.67%)</title><rect x="55.6" y="755.0" width="66.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.6" y="766.0">one/nio..</text>
</g>
<g>
<title>RequestHandler3_entity.handleRequest (22 samples, 5.67%)</title><rect x="55.6" y="739.0" width="66.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.6" y="750.0">Request..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.26%)</title><rect x="55.6" y="723.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="58.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.26%)</title><rect x="55.6" y="707.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="58.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.entity (21 samples, 5.41%)</title><rect x="58.7" y="723.0" width="63.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.7" y="734.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (7 samples, 1.80%)</title><rect x="58.7" y="707.0" width="21.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.7" y="718.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.26%)</title><rect x="58.7" y="691.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.26%)</title><rect x="58.7" y="675.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.7" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.26%)</title><rect x="58.7" y="659.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.26%)</title><rect x="58.7" y="643.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.7" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.26%)</title><rect x="58.7" y="627.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (6 samples, 1.55%)</title><rect x="61.7" y="691.0" width="18.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 1.55%)</title><rect x="61.7" y="675.0" width="18.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 1.55%)</title><rect x="61.7" y="659.0" width="18.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 1.55%)</title><rect x="61.7" y="643.0" width="18.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 1.55%)</title><rect x="61.7" y="627.0" width="18.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 1.55%)</title><rect x="61.7" y="611.0" width="18.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 1.55%)</title><rect x="61.7" y="595.0" width="18.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 1.55%)</title><rect x="61.7" y="579.0" width="18.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 1.55%)</title><rect x="61.7" y="563.0" width="18.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.7" y="574.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.26%)</title><rect x="61.7" y="547.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="64.7" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 1.29%)</title><rect x="64.7" y="547.0" width="15.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="67.7" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (4 samples, 1.03%)</title><rect x="67.8" y="531.0" width="12.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.8" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.03%)</title><rect x="67.8" y="515.0" width="12.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.8" y="526.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.77%)</title><rect x="70.8" y="499.0" width="9.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="73.8" y="510.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.77%)</title><rect x="70.8" y="483.0" width="9.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="73.8" y="494.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.26%)</title><rect x="73.9" y="467.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="76.9" y="478.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.26%)</title><rect x="76.9" y="467.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="79.9" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.26%)</title><rect x="76.9" y="451.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="79.9" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.26%)</title><rect x="76.9" y="435.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="79.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (13 samples, 3.35%)</title><rect x="79.9" y="707.0" width="39.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="82.9" y="718.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 3.35%)</title><rect x="79.9" y="691.0" width="39.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.9" y="702.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 3.35%)</title><rect x="79.9" y="675.0" width="39.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="82.9" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 3.35%)</title><rect x="79.9" y="659.0" width="39.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.9" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.26%)</title><rect x="79.9" y="643.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.26%)</title><rect x="79.9" y="627.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.26%)</title><rect x="79.9" y="611.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 3.09%)</title><rect x="83.0" y="643.0" width="36.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.0" y="654.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 3.09%)</title><rect x="83.0" y="627.0" width="36.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.0" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 3.09%)</title><rect x="83.0" y="611.0" width="36.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.0" y="622.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 3.09%)</title><rect x="83.0" y="595.0" width="36.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="86.0" y="606.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 3.09%)</title><rect x="83.0" y="579.0" width="36.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.0" y="590.0">jdk..</text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.26%)</title><rect x="83.0" y="563.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="86.0" y="574.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.52%)</title><rect x="86.0" y="563.0" width="6.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="89.0" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.26%)</title><rect x="89.1" y="547.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="92.1" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 2.32%)</title><rect x="92.1" y="563.0" width="27.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="95.1" y="574.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (8 samples, 2.06%)</title><rect x="95.2" y="547.0" width="24.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="98.2" y="558.0">e..</text>
</g>
<g>
<title>do_syscall_64 (8 samples, 2.06%)</title><rect x="95.2" y="531.0" width="24.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="98.2" y="542.0">d..</text>
</g>
<g>
<title>sys_futex (8 samples, 2.06%)</title><rect x="95.2" y="515.0" width="24.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="98.2" y="526.0">s..</text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.26%)</title><rect x="98.2" y="499.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="101.2" y="510.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.26%)</title><rect x="98.2" y="483.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="101.2" y="494.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.26%)</title><rect x="98.2" y="467.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="101.2" y="478.0"></text>
</g>
<g>
<title>do_futex (6 samples, 1.55%)</title><rect x="101.2" y="499.0" width="18.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="104.2" y="510.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.12 (1 samples, 0.26%)</title><rect x="104.3" y="483.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="107.3" y="494.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.26%)</title><rect x="107.3" y="483.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="110.3" y="494.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.77%)</title><rect x="110.4" y="483.0" width="9.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="113.4" y="494.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.52%)</title><rect x="113.4" y="467.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="116.4" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.52%)</title><rect x="113.4" y="451.0" width="6.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="116.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/Topology.isMe (1 samples, 0.26%)</title><rect x="119.5" y="707.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.5" y="718.0"></text>
</g>
<g>
<title>java/lang/Boolean.valueOf (1 samples, 0.26%)</title><rect x="119.5" y="691.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.26%)</title><rect x="122.5" y="771.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.26%)</title><rect x="122.5" y="755.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.26%)</title><rect x="122.5" y="739.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.26%)</title><rect x="122.5" y="723.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.26%)</title><rect x="125.6" y="771.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (13 samples, 3.35%)</title><rect x="128.6" y="787.0" width="39.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.6" y="798.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (13 samples, 3.35%)</title><rect x="128.6" y="771.0" width="39.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="131.6" y="782.0">one..</text>
</g>
<g>
<title>[unknown] (7 samples, 1.80%)</title><rect x="128.6" y="755.0" width="21.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="131.6" y="766.0">[..</text>
</g>
<g>
<title>[unknown] (7 samples, 1.80%)</title><rect x="128.6" y="739.0" width="21.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="131.6" y="750.0">[..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 1.03%)</title><rect x="128.6" y="723.0" width="12.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="131.6" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.26%)</title><rect x="128.6" y="707.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="131.6" y="718.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.26%)</title><rect x="131.6" y="707.0" width="3.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="134.6" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.52%)</title><rect x="134.7" y="707.0" width="6.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="137.7" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.26%)</title><rect x="137.7" y="691.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="140.7" y="702.0"></text>
</g>
<g>
<title>__libc_recv (1 samples, 0.26%)</title><rect x="140.8" y="723.0" width="3.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="143.8" y="734.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.26%)</title><rect x="143.8" y="723.0" width="3.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="146.8" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.26%)</title><rect x="146.9" y="723.0" width="3.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="149.9" y="734.0"></text>
</g>
<g>
<title>__libc_recv (5 samples, 1.29%)</title><rect x="149.9" y="755.0" width="15.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="152.9" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (5 samples, 1.29%)</title><rect x="149.9" y="739.0" width="15.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="152.9" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.29%)</title><rect x="149.9" y="723.0" width="15.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="152.9" y="734.0"></text>
</g>
<g>
<title>sys_epoll_wait (4 samples, 1.03%)</title><rect x="152.9" y="707.0" width="12.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="155.9" y="718.0"></text>
</g>
<g>
<title>default_wake_function (4 samples, 1.03%)</title><rect x="152.9" y="691.0" width="12.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="155.9" y="702.0"></text>
</g>
<g>
<title>SYSC_recvfrom (4 samples, 1.03%)</title><rect x="152.9" y="675.0" width="12.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="155.9" y="686.0"></text>
</g>
<g>
<title>inet_recvmsg (4 samples, 1.03%)</title><rect x="152.9" y="659.0" width="12.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="155.9" y="670.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 1.03%)</title><rect x="152.9" y="643.0" width="12.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="155.9" y="654.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.52%)</title><rect x="159.0" y="627.0" width="6.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="162.0" y="638.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.52%)</title><rect x="159.0" y="611.0" width="6.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="162.0" y="622.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.26%)</title><rect x="162.1" y="595.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="165.1" y="606.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.26%)</title><rect x="162.1" y="579.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="165.1" y="590.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.26%)</title><rect x="165.1" y="755.0" width="3.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="168.1" y="766.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=24723] (17 samples, 4.38%)</title><rect x="168.1" y="851.0" width="51.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="171.1" y="862.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (17 samples, 4.38%)</title><rect x="168.1" y="835.0" width="51.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.1" y="846.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 1.29%)</title><rect x="168.1" y="819.0" width="15.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="171.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 1.29%)</title><rect x="168.1" y="803.0" width="15.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.52%)</title><rect x="168.1" y="787.0" width="6.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="171.1" y="798.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.52%)</title><rect x="168.1" y="771.0" width="6.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="171.1" y="782.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.52%)</title><rect x="168.1" y="755.0" width="6.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="171.1" y="766.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.77%)</title><rect x="174.2" y="787.0" width="9.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="177.2" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.52%)</title><rect x="177.3" y="771.0" width="6.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="180.3" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.52%)</title><rect x="177.3" y="755.0" width="6.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="180.3" y="766.0"></text>
</g>
<g>
<title>sys_epoll_wait (2 samples, 0.52%)</title><rect x="177.3" y="739.0" width="6.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="180.3" y="750.0"></text>
</g>
<g>
<title>default_wake_function (1 samples, 0.26%)</title><rect x="177.3" y="723.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="180.3" y="734.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.26%)</title><rect x="177.3" y="707.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="180.3" y="718.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (1 samples, 0.26%)</title><rect x="177.3" y="691.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="180.3" y="702.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.26%)</title><rect x="177.3" y="675.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="180.3" y="686.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.26%)</title><rect x="177.3" y="659.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="180.3" y="670.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.26%)</title><rect x="180.3" y="723.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="183.3" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.26%)</title><rect x="180.3" y="707.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="183.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (12 samples, 3.09%)</title><rect x="183.4" y="819.0" width="36.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.4" y="830.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (12 samples, 3.09%)</title><rect x="183.4" y="803.0" width="36.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.4" y="814.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8 samples, 2.06%)</title><rect x="183.4" y="787.0" width="24.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.4" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7 samples, 1.80%)</title><rect x="183.4" y="771.0" width="21.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="186.4" y="782.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7 samples, 1.80%)</title><rect x="183.4" y="755.0" width="21.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.4" y="766.0">o..</text>
</g>
<g>
<title>RequestHandler3_entity.handleRequest (7 samples, 1.80%)</title><rect x="183.4" y="739.0" width="21.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.4" y="750.0">R..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.entity (7 samples, 1.80%)</title><rect x="183.4" y="723.0" width="21.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.4" y="734.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (7 samples, 1.80%)</title><rect x="183.4" y="707.0" width="21.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.4" y="718.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (7 samples, 1.80%)</title><rect x="183.4" y="691.0" width="21.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="186.4" y="702.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 1.80%)</title><rect x="183.4" y="675.0" width="21.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.4" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 1.80%)</title><rect x="183.4" y="659.0" width="21.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.4" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 1.55%)</title><rect x="183.4" y="643.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="186.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.26%)</title><rect x="183.4" y="627.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.26%)</title><rect x="183.4" y="611.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.26%)</title><rect x="183.4" y="595.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 1.29%)</title><rect x="186.4" y="627.0" width="15.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="189.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 1.29%)</title><rect x="186.4" y="611.0" width="15.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 1.29%)</title><rect x="186.4" y="595.0" width="15.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="189.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 1.29%)</title><rect x="186.4" y="579.0" width="15.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="189.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 1.29%)</title><rect x="186.4" y="563.0" width="15.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.4" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 1.03%)</title><rect x="186.4" y="547.0" width="12.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="189.4" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.77%)</title><rect x="189.4" y="531.0" width="9.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="192.4" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.77%)</title><rect x="189.4" y="515.0" width="9.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="192.4" y="526.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.77%)</title><rect x="189.4" y="499.0" width="9.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="192.4" y="510.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.77%)</title><rect x="189.4" y="483.0" width="9.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="192.4" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.26%)</title><rect x="189.4" y="467.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="192.4" y="478.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.26%)</title><rect x="192.5" y="467.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="195.5" y="478.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.11 (1 samples, 0.26%)</title><rect x="192.5" y="451.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="195.5" y="462.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.26%)</title><rect x="195.5" y="467.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="198.5" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.26%)</title><rect x="195.5" y="451.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="198.5" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.26%)</title><rect x="195.5" y="435.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="198.5" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.26%)</title><rect x="198.6" y="547.0" width="3.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="201.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.26%)</title><rect x="201.6" y="643.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="204.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.26%)</title><rect x="201.6" y="627.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.26%)</title><rect x="201.6" y="611.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="204.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.26%)</title><rect x="201.6" y="595.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="204.6" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.26%)</title><rect x="204.6" y="771.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.26%)</title><rect x="204.6" y="755.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 1.03%)</title><rect x="207.7" y="787.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="210.7" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 1.03%)</title><rect x="207.7" y="771.0" width="12.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.26%)</title><rect x="207.7" y="755.0" width="3.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="210.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.26%)</title><rect x="207.7" y="739.0" width="3.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="210.7" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.26%)</title><rect x="207.7" y="723.0" width="3.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="210.7" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.26%)</title><rect x="207.7" y="707.0" width="3.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="210.7" y="718.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.26%)</title><rect x="207.7" y="691.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="210.7" y="702.0"></text>
</g>
<g>
<title>__libc_recv (3 samples, 0.77%)</title><rect x="210.7" y="755.0" width="9.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="213.7" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.77%)</title><rect x="210.7" y="739.0" width="9.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="213.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.77%)</title><rect x="210.7" y="723.0" width="9.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="213.7" y="734.0"></text>
</g>
<g>
<title>sys_epoll_wait (3 samples, 0.77%)</title><rect x="210.7" y="707.0" width="9.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="213.7" y="718.0"></text>
</g>
<g>
<title>default_wake_function (3 samples, 0.77%)</title><rect x="210.7" y="691.0" width="9.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="213.7" y="702.0"></text>
</g>
<g>
<title>SYSC_recvfrom (3 samples, 0.77%)</title><rect x="210.7" y="675.0" width="9.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="213.7" y="686.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.52%)</title><rect x="210.7" y="659.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="213.7" y="670.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.26%)</title><rect x="210.7" y="643.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="213.7" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.26%)</title><rect x="210.7" y="627.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="213.7" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.26%)</title><rect x="210.7" y="611.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="213.7" y="622.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.26%)</title><rect x="213.8" y="643.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="216.8" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.26%)</title><rect x="213.8" y="627.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="216.8" y="638.0"></text>
</g>
<g>
<title>copy_to_iter (1 samples, 0.26%)</title><rect x="213.8" y="611.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="216.8" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.26%)</title><rect x="216.8" y="659.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="219.8" y="670.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.26%)</title><rect x="216.8" y="643.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="219.8" y="654.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=24747] (17 samples, 4.38%)</title><rect x="219.8" y="851.0" width="51.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="222.8" y="862.0">[NIO ..</text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.26%)</title><rect x="219.8" y="835.0" width="3.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="222.8" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.26%)</title><rect x="219.8" y="819.0" width="3.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="222.8" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.26%)</title><rect x="219.8" y="803.0" width="3.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="222.8" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.26%)</title><rect x="219.8" y="787.0" width="3.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="222.8" y="798.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (16 samples, 4.12%)</title><rect x="222.9" y="835.0" width="48.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="225.9" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.77%)</title><rect x="222.9" y="819.0" width="9.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="225.9" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.77%)</title><rect x="222.9" y="803.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="225.9" y="814.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.26%)</title><rect x="229.0" y="787.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="232.0" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.26%)</title><rect x="229.0" y="771.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="232.0" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="229.0" y="755.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="232.0" y="766.0"></text>
</g>
<g>
<title>sys_epoll_wait (1 samples, 0.26%)</title><rect x="229.0" y="739.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="232.0" y="750.0"></text>
</g>
<g>
<title>default_wake_function (1 samples, 0.26%)</title><rect x="229.0" y="723.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="232.0" y="734.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.26%)</title><rect x="229.0" y="707.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="232.0" y="718.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.12 (1 samples, 0.26%)</title><rect x="229.0" y="691.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="232.0" y="702.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.26%)</title><rect x="229.0" y="675.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="232.0" y="686.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.26%)</title><rect x="229.0" y="659.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="232.0" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (13 samples, 3.35%)</title><rect x="232.0" y="819.0" width="39.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.0" y="830.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (13 samples, 3.35%)</title><rect x="232.0" y="803.0" width="39.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.0" y="814.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9 samples, 2.32%)</title><rect x="232.0" y="787.0" width="27.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="235.0" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9 samples, 2.32%)</title><rect x="232.0" y="771.0" width="27.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.0" y="782.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9 samples, 2.32%)</title><rect x="232.0" y="755.0" width="27.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="235.0" y="766.0">o..</text>
</g>
<g>
<title>RequestHandler3_entity.handleRequest (9 samples, 2.32%)</title><rect x="232.0" y="739.0" width="27.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.0" y="750.0">R..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.entity (9 samples, 2.32%)</title><rect x="232.0" y="723.0" width="27.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="235.0" y="734.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.26%)</title><rect x="232.0" y="707.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.26%)</title><rect x="232.0" y="691.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.get$Lambda (1 samples, 0.26%)</title><rect x="232.0" y="675.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.26%)</title><rect x="232.0" y="659.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (8 samples, 2.06%)</title><rect x="235.1" y="707.0" width="24.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="238.1" y="718.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (8 samples, 2.06%)</title><rect x="235.1" y="691.0" width="24.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="238.1" y="702.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 2.06%)</title><rect x="235.1" y="675.0" width="24.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="238.1" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 2.06%)</title><rect x="235.1" y="659.0" width="24.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="238.1" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (8 samples, 2.06%)</title><rect x="235.1" y="643.0" width="24.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="238.1" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.26%)</title><rect x="235.1" y="627.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.26%)</title><rect x="235.1" y="611.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.26%)</title><rect x="235.1" y="595.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="238.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 1.80%)</title><rect x="238.1" y="627.0" width="21.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="241.1" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 1.80%)</title><rect x="238.1" y="611.0" width="21.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.1" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 1.80%)</title><rect x="238.1" y="595.0" width="21.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="241.1" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 1.80%)</title><rect x="238.1" y="579.0" width="21.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="241.1" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 1.80%)</title><rect x="238.1" y="563.0" width="21.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="241.1" y="574.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.52%)</title><rect x="238.1" y="547.0" width="6.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="241.1" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.26%)</title><rect x="241.1" y="531.0" width="3.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="244.1" y="542.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 1.29%)</title><rect x="244.2" y="547.0" width="15.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="247.2" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (5 samples, 1.29%)</title><rect x="244.2" y="531.0" width="15.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="247.2" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.29%)</title><rect x="244.2" y="515.0" width="15.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="247.2" y="526.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 1.29%)</title><rect x="244.2" y="499.0" width="15.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="247.2" y="510.0"></text>
</g>
<g>
<title>do_futex (5 samples, 1.29%)</title><rect x="244.2" y="483.0" width="15.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="247.2" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.26%)</title><rect x="247.2" y="467.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="250.2" y="478.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.77%)</title><rect x="250.3" y="467.0" width="9.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="253.3" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.77%)</title><rect x="250.3" y="451.0" width="9.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="253.3" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.77%)</title><rect x="250.3" y="435.0" width="9.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="253.3" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 1.03%)</title><rect x="259.4" y="787.0" width="12.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.4" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 1.03%)</title><rect x="259.4" y="771.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="262.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.77%)</title><rect x="259.4" y="755.0" width="9.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="262.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.77%)</title><rect x="259.4" y="739.0" width="9.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="262.4" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.77%)</title><rect x="259.4" y="723.0" width="9.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="262.4" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.26%)</title><rect x="259.4" y="707.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="262.4" y="718.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.26%)</title><rect x="262.4" y="707.0" width="3.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="265.4" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.26%)</title><rect x="265.5" y="707.0" width="3.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="268.5" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.26%)</title><rect x="265.5" y="691.0" width="3.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="268.5" y="702.0"></text>
</g>
<g>
<title>__libc_recv (1 samples, 0.26%)</title><rect x="268.5" y="755.0" width="3.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="271.5" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.26%)</title><rect x="268.5" y="739.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="271.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="268.5" y="723.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="271.5" y="734.0"></text>
</g>
<g>
<title>[tid=24671] (1 samples, 0.26%)</title><rect x="271.5" y="851.0" width="3.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="274.5" y="862.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.26%)</title><rect x="271.5" y="835.0" width="3.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="274.5" y="846.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.26%)</title><rect x="271.5" y="819.0" width="3.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="274.5" y="830.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.26%)</title><rect x="271.5" y="803.0" width="3.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="274.5" y="814.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.26%)</title><rect x="271.5" y="787.0" width="3.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="274.5" y="798.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.26%)</title><rect x="271.5" y="771.0" width="3.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="274.5" y="782.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.26%)</title><rect x="271.5" y="755.0" width="3.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="274.5" y="766.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.26%)</title><rect x="271.5" y="739.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="274.5" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.26%)</title><rect x="271.5" y="723.0" width="3.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="274.5" y="734.0"></text>
</g>
<g>
<title>[worker tid=24773] (41 samples, 10.57%)</title><rect x="274.6" y="851.0" width="124.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="277.6" y="862.0">[worker tid=247..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.26%)</title><rect x="274.6" y="835.0" width="3.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="277.6" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.run (40 samples, 10.31%)</title><rect x="277.6" y="835.0" width="121.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.6" y="846.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (40 samples, 10.31%)</title><rect x="277.6" y="819.0" width="121.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.6" y="830.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (40 samples, 10.31%)</title><rect x="277.6" y="803.0" width="121.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="280.6" y="814.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 1.55%)</title><rect x="277.6" y="787.0" width="18.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (6 samples, 1.55%)</title><rect x="277.6" y="771.0" width="18.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 1.55%)</title><rect x="277.6" y="755.0" width="18.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="280.6" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.26%)</title><rect x="277.6" y="739.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="280.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 1.29%)</title><rect x="280.7" y="739.0" width="15.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="283.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 1.29%)</title><rect x="280.7" y="723.0" width="15.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.7" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 1.29%)</title><rect x="280.7" y="707.0" width="15.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="283.7" y="718.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_unlock (1 samples, 0.26%)</title><rect x="280.7" y="691.0" width="3.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="283.7" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.77%)</title><rect x="283.7" y="691.0" width="9.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="286.7" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.52%)</title><rect x="286.8" y="675.0" width="6.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="289.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.52%)</title><rect x="286.8" y="659.0" width="6.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="289.8" y="670.0"></text>
</g>
<g>
<title>sys_setsockopt (2 samples, 0.52%)</title><rect x="286.8" y="643.0" width="6.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="289.8" y="654.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.52%)</title><rect x="286.8" y="627.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="289.8" y="638.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.52%)</title><rect x="286.8" y="611.0" width="6.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="289.8" y="622.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.52%)</title><rect x="286.8" y="595.0" width="6.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="289.8" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.52%)</title><rect x="286.8" y="579.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="289.8" y="590.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.52%)</title><rect x="286.8" y="563.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="289.8" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.52%)</title><rect x="286.8" y="547.0" width="6.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="289.8" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.52%)</title><rect x="286.8" y="531.0" width="6.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="289.8" y="542.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.52%)</title><rect x="286.8" y="515.0" width="6.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="289.8" y="526.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.26%)</title><rect x="286.8" y="499.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="289.8" y="510.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.26%)</title><rect x="286.8" y="483.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="289.8" y="494.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.26%)</title><rect x="289.8" y="499.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="292.8" y="510.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.26%)</title><rect x="289.8" y="483.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="292.8" y="494.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.26%)</title><rect x="292.8" y="691.0" width="3.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="295.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (34 samples, 8.76%)</title><rect x="295.9" y="787.0" width="103.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="298.9" y="798.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (34 samples, 8.76%)</title><rect x="295.9" y="771.0" width="103.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.9" y="782.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 2.58%)</title><rect x="295.9" y="755.0" width="30.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.9" y="766.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 2.58%)</title><rect x="295.9" y="739.0" width="30.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.9" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 2.58%)</title><rect x="295.9" y="723.0" width="30.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="298.9" y="734.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 2.58%)</title><rect x="295.9" y="707.0" width="30.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.9" y="718.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10 samples, 2.58%)</title><rect x="295.9" y="691.0" width="30.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.9" y="702.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (10 samples, 2.58%)</title><rect x="295.9" y="675.0" width="30.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.9" y="686.0">on..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.26%)</title><rect x="295.9" y="659.0" width="3.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="298.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.26%)</title><rect x="295.9" y="643.0" width="3.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="298.9" y="654.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.26%)</title><rect x="295.9" y="627.0" width="3.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="298.9" y="638.0"></text>
</g>
<g>
<title>__send (9 samples, 2.32%)</title><rect x="298.9" y="659.0" width="27.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="301.9" y="670.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (9 samples, 2.32%)</title><rect x="298.9" y="643.0" width="27.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="301.9" y="654.0">e..</text>
</g>
<g>
<title>do_syscall_64 (9 samples, 2.32%)</title><rect x="298.9" y="627.0" width="27.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="301.9" y="638.0">d..</text>
</g>
<g>
<title>sys_setsockopt (9 samples, 2.32%)</title><rect x="298.9" y="611.0" width="27.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="301.9" y="622.0">s..</text>
</g>
<g>
<title>sock_setsockopt (7 samples, 1.80%)</title><rect x="298.9" y="595.0" width="21.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="301.9" y="606.0">s..</text>
</g>
<g>
<title>SYSC_sendto (7 samples, 1.80%)</title><rect x="298.9" y="579.0" width="21.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="301.9" y="590.0">S..</text>
</g>
<g>
<title>sock_sendmsg (7 samples, 1.80%)</title><rect x="298.9" y="563.0" width="21.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="301.9" y="574.0">s..</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.26%)</title><rect x="298.9" y="547.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="301.9" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg (6 samples, 1.55%)</title><rect x="302.0" y="547.0" width="18.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="305.0" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (6 samples, 1.55%)</title><rect x="302.0" y="531.0" width="18.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="305.0" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (6 samples, 1.55%)</title><rect x="302.0" y="515.0" width="18.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="305.0" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 1.55%)</title><rect x="302.0" y="499.0" width="18.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="305.0" y="510.0"></text>
</g>
<g>
<title>ip_local_out (6 samples, 1.55%)</title><rect x="302.0" y="483.0" width="18.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="305.0" y="494.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.26%)</title><rect x="302.0" y="467.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="305.0" y="478.0"></text>
</g>
<g>
<title>__sk_dst_check (5 samples, 1.29%)</title><rect x="305.0" y="467.0" width="15.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="308.0" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 1.29%)</title><rect x="305.0" y="451.0" width="15.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="308.0" y="462.0"></text>
</g>
<g>
<title>ip_output (5 samples, 1.29%)</title><rect x="305.0" y="435.0" width="15.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="308.0" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 1.29%)</title><rect x="305.0" y="419.0" width="15.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="308.0" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.26%)</title><rect x="305.0" y="403.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="308.0" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.26%)</title><rect x="305.0" y="387.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="308.0" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.26%)</title><rect x="305.0" y="371.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="308.0" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.26%)</title><rect x="305.0" y="355.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="308.0" y="366.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 1.03%)</title><rect x="308.0" y="403.0" width="12.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="311.0" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.18 (4 samples, 1.03%)</title><rect x="308.0" y="387.0" width="12.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="311.0" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 1.03%)</title><rect x="308.0" y="371.0" width="12.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="311.0" y="382.0"></text>
</g>
<g>
<title>__do_softirq (4 samples, 1.03%)</title><rect x="308.0" y="355.0" width="12.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="311.0" y="366.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 1.03%)</title><rect x="308.0" y="339.0" width="12.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="311.0" y="350.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.77%)</title><rect x="311.1" y="323.0" width="9.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="314.1" y="334.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.52%)</title><rect x="314.1" y="307.0" width="6.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="317.1" y="318.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.26%)</title><rect x="314.1" y="291.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="317.1" y="302.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.26%)</title><rect x="314.1" y="275.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="317.1" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.26%)</title><rect x="314.1" y="259.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="317.1" y="270.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.26%)</title><rect x="317.2" y="291.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="320.2" y="302.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.26%)</title><rect x="317.2" y="275.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="320.2" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.26%)</title><rect x="317.2" y="259.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="320.2" y="270.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.26%)</title><rect x="317.2" y="243.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="320.2" y="254.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.26%)</title><rect x="317.2" y="227.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="320.2" y="238.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.26%)</title><rect x="317.2" y="211.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="320.2" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.26%)</title><rect x="317.2" y="195.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="320.2" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.26%)</title><rect x="317.2" y="179.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="320.2" y="190.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.26%)</title><rect x="317.2" y="163.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="320.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.26%)</title><rect x="317.2" y="147.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="320.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.26%)</title><rect x="317.2" y="131.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="320.2" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.26%)</title><rect x="317.2" y="115.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="320.2" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.26%)</title><rect x="317.2" y="99.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="320.2" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.26%)</title><rect x="317.2" y="83.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="320.2" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.26%)</title><rect x="317.2" y="67.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="320.2" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.26%)</title><rect x="317.2" y="51.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="320.2" y="62.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.52%)</title><rect x="320.2" y="595.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="323.2" y="606.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.52%)</title><rect x="320.2" y="579.0" width="6.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="323.2" y="590.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.52%)</title><rect x="320.2" y="563.0" width="6.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="323.2" y="574.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.52%)</title><rect x="320.2" y="547.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="323.2" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.52%)</title><rect x="320.2" y="531.0" width="6.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="323.2" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.52%)</title><rect x="320.2" y="515.0" width="6.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="323.2" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.52%)</title><rect x="320.2" y="499.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="323.2" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.52%)</title><rect x="320.2" y="483.0" width="6.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="323.2" y="494.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.26%)</title><rect x="320.2" y="467.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="323.2" y="478.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.26%)</title><rect x="320.2" y="451.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="323.2" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.26%)</title><rect x="320.2" y="435.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="323.2" y="446.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.26%)</title><rect x="320.2" y="419.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="323.2" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.26%)</title><rect x="320.2" y="403.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="323.2" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.26%)</title><rect x="320.2" y="387.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="323.2" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.26%)</title><rect x="320.2" y="371.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="323.2" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.26%)</title><rect x="320.2" y="355.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="323.2" y="366.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.26%)</title><rect x="320.2" y="339.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="323.2" y="350.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.26%)</title><rect x="320.2" y="323.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="323.2" y="334.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.26%)</title><rect x="320.2" y="307.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="323.2" y="318.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.26%)</title><rect x="320.2" y="291.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="323.2" y="302.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.26%)</title><rect x="320.2" y="275.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="323.2" y="286.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.26%)</title><rect x="320.2" y="259.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="323.2" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.26%)</title><rect x="320.2" y="243.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="323.2" y="254.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.26%)</title><rect x="320.2" y="227.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="323.2" y="238.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.26%)</title><rect x="320.2" y="211.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="323.2" y="222.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.26%)</title><rect x="320.2" y="195.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="323.2" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.26%)</title><rect x="320.2" y="179.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="323.2" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.26%)</title><rect x="320.2" y="163.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="323.2" y="174.0"></text>
</g>
<g>
<title>hw_breakpoint_exceptions_notify (1 samples, 0.26%)</title><rect x="320.2" y="147.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="323.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.26%)</title><rect x="320.2" y="131.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="323.2" y="142.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.26%)</title><rect x="323.2" y="467.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="326.2" y="478.0"></text>
</g>
<g>
<title>native_sched_clock (1 samples, 0.26%)</title><rect x="323.2" y="451.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="326.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (13 samples, 3.35%)</title><rect x="326.3" y="755.0" width="39.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="329.3" y="766.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (13 samples, 3.35%)</title><rect x="326.3" y="739.0" width="39.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.3" y="750.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (13 samples, 3.35%)</title><rect x="326.3" y="723.0" width="39.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="329.3" y="734.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (13 samples, 3.35%)</title><rect x="326.3" y="707.0" width="39.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.3" y="718.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (13 samples, 3.35%)</title><rect x="326.3" y="691.0" width="39.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.3" y="702.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (13 samples, 3.35%)</title><rect x="326.3" y="675.0" width="39.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.3" y="686.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (8 samples, 2.06%)</title><rect x="326.3" y="659.0" width="24.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="329.3" y="670.0">J..</text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (8 samples, 2.06%)</title><rect x="326.3" y="643.0" width="24.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="329.3" y="654.0">r..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.26%)</title><rect x="326.3" y="627.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="329.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (7 samples, 1.80%)</title><rect x="329.3" y="627.0" width="21.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="332.3" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.26%)</title><rect x="329.3" y="611.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="332.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (6 samples, 1.55%)</title><rect x="332.4" y="611.0" width="18.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="335.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (6 samples, 1.55%)</title><rect x="332.4" y="595.0" width="18.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="335.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (6 samples, 1.55%)</title><rect x="332.4" y="579.0" width="18.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="335.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (4 samples, 1.03%)</title><rect x="335.4" y="563.0" width="12.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="338.4" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (4 samples, 1.03%)</title><rect x="335.4" y="547.0" width="12.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="338.4" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (1 samples, 0.26%)</title><rect x="335.4" y="531.0" width="3.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="338.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::Comparator::Equal(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.26%)</title><rect x="335.4" y="515.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="338.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.26%)</title><rect x="335.4" y="499.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="338.4" y="510.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.26%)</title><rect x="335.4" y="483.0" width="3.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="338.4" y="494.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.26%)</title><rect x="335.4" y="467.0" width="3.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="338.4" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.26%)</title><rect x="335.4" y="451.0" width="3.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="338.4" y="462.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.26%)</title><rect x="335.4" y="435.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="338.4" y="446.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.26%)</title><rect x="335.4" y="419.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="338.4" y="430.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (3 samples, 0.77%)</title><rect x="338.5" y="531.0" width="9.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="341.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.77%)</title><rect x="338.5" y="515.0" width="9.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="341.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.77%)</title><rect x="338.5" y="499.0" width="9.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="341.5" y="510.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.26%)</title><rect x="338.5" y="483.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="341.5" y="494.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.26%)</title><rect x="338.5" y="467.0" width="3.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="341.5" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.26%)</title><rect x="338.5" y="451.0" width="3.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="341.5" y="462.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.26%)</title><rect x="338.5" y="435.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="341.5" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.52%)</title><rect x="341.5" y="483.0" width="6.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="344.5" y="494.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.52%)</title><rect x="341.5" y="467.0" width="6.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="344.5" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.26%)</title><rect x="341.5" y="451.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="344.5" y="462.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.26%)</title><rect x="344.5" y="451.0" width="3.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="347.5" y="462.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.26%)</title><rect x="344.5" y="435.0" width="3.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="347.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.26%)</title><rect x="347.6" y="563.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="350.6" y="574.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.26%)</title><rect x="350.6" y="659.0" width="3.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="353.6" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 1.03%)</title><rect x="353.7" y="659.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.7" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 1.03%)</title><rect x="353.7" y="643.0" width="12.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.7" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (4 samples, 1.03%)</title><rect x="353.7" y="627.0" width="12.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="356.7" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 1.03%)</title><rect x="353.7" y="611.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.7" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 1.03%)</title><rect x="353.7" y="595.0" width="12.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="356.7" y="606.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (4 samples, 1.03%)</title><rect x="353.7" y="579.0" width="12.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="356.7" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="353.7" y="563.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="356.7" y="574.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.26%)</title><rect x="356.7" y="563.0" width="3.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="359.7" y="574.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.26%)</title><rect x="356.7" y="547.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="359.7" y="558.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.52%)</title><rect x="359.7" y="563.0" width="6.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="362.7" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.52%)</title><rect x="359.7" y="547.0" width="6.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="362.7" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.52%)</title><rect x="359.7" y="531.0" width="6.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="362.7" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.52%)</title><rect x="359.7" y="515.0" width="6.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="362.7" y="526.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.26%)</title><rect x="359.7" y="499.0" width="3.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="362.7" y="510.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.26%)</title><rect x="362.8" y="499.0" width="3.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="365.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.act (11 samples, 2.84%)</title><rect x="365.8" y="755.0" width="33.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="368.8" y="766.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.lambda$entity$1 (11 samples, 2.84%)</title><rect x="365.8" y="739.0" width="33.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="368.8" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.proxy (11 samples, 2.84%)</title><rect x="365.8" y="723.0" width="33.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.8" y="734.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (11 samples, 2.84%)</title><rect x="365.8" y="707.0" width="33.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.8" y="718.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (11 samples, 2.84%)</title><rect x="365.8" y="691.0" width="33.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.8" y="702.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2 samples, 0.52%)</title><rect x="365.8" y="675.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.8" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.52%)</title><rect x="365.8" y="659.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="368.8" y="670.0"></text>
</g>
<g>
<title>__libc_recv (2 samples, 0.52%)</title><rect x="365.8" y="643.0" width="6.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="368.8" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.26%)</title><rect x="368.9" y="627.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="371.9" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="368.9" y="611.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="371.9" y="622.0"></text>
</g>
<g>
<title>sys_setsockopt (1 samples, 0.26%)</title><rect x="368.9" y="595.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="371.9" y="606.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.26%)</title><rect x="368.9" y="579.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="371.9" y="590.0"></text>
</g>
<g>
<title>SYSC_recvfrom (1 samples, 0.26%)</title><rect x="368.9" y="563.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="371.9" y="574.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.26%)</title><rect x="368.9" y="547.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="371.9" y="558.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.26%)</title><rect x="368.9" y="531.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="371.9" y="542.0"></text>
</g>
<g>
<title>autoremove_wake_function (1 samples, 0.26%)</title><rect x="368.9" y="515.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="371.9" y="526.0"></text>
</g>
<g>
<title>sk_wait_data (1 samples, 0.26%)</title><rect x="368.9" y="499.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="371.9" y="510.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.26%)</title><rect x="368.9" y="483.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="371.9" y="494.0"></text>
</g>
<g>
<title>schedule_timeout (1 samples, 0.26%)</title><rect x="368.9" y="467.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="371.9" y="478.0"></text>
</g>
<g>
<title>del_timer_sync (1 samples, 0.26%)</title><rect x="368.9" y="451.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="371.9" y="462.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (1 samples, 0.26%)</title><rect x="368.9" y="435.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="371.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1 samples, 0.26%)</title><rect x="371.9" y="675.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="374.9" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (8 samples, 2.06%)</title><rect x="374.9" y="675.0" width="24.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="377.9" y="686.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (2 samples, 0.52%)</title><rect x="374.9" y="659.0" width="6.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="377.9" y="670.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned_erms (1 samples, 0.26%)</title><rect x="374.9" y="643.0" width="3.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="377.9" y="654.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.26%)</title><rect x="378.0" y="643.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="381.0" y="654.0"></text>
</g>
<g>
<title>__send (6 samples, 1.55%)</title><rect x="381.0" y="659.0" width="18.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="384.0" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (6 samples, 1.55%)</title><rect x="381.0" y="643.0" width="18.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="384.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.55%)</title><rect x="381.0" y="627.0" width="18.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="384.0" y="638.0"></text>
</g>
<g>
<title>sys_setsockopt (6 samples, 1.55%)</title><rect x="381.0" y="611.0" width="18.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="384.0" y="622.0"></text>
</g>
<g>
<title>sock_setsockopt (6 samples, 1.55%)</title><rect x="381.0" y="595.0" width="18.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="384.0" y="606.0"></text>
</g>
<g>
<title>SYSC_sendto (6 samples, 1.55%)</title><rect x="381.0" y="579.0" width="18.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="384.0" y="590.0"></text>
</g>
<g>
<title>sock_sendmsg (6 samples, 1.55%)</title><rect x="381.0" y="563.0" width="18.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="384.0" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (5 samples, 1.29%)</title><rect x="384.1" y="547.0" width="15.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="387.1" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (5 samples, 1.29%)</title><rect x="384.1" y="531.0" width="15.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="387.1" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (5 samples, 1.29%)</title><rect x="384.1" y="515.0" width="15.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="387.1" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 1.29%)</title><rect x="384.1" y="499.0" width="15.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="387.1" y="510.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 1.03%)</title><rect x="387.1" y="483.0" width="12.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="390.1" y="494.0"></text>
</g>
<g>
<title>__sk_dst_check (4 samples, 1.03%)</title><rect x="387.1" y="467.0" width="12.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="390.1" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 1.03%)</title><rect x="387.1" y="451.0" width="12.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="390.1" y="462.0"></text>
</g>
<g>
<title>ip_output (4 samples, 1.03%)</title><rect x="387.1" y="435.0" width="12.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="390.1" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 1.03%)</title><rect x="387.1" y="419.0" width="12.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="390.1" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 1.03%)</title><rect x="387.1" y="403.0" width="12.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="390.1" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.18 (4 samples, 1.03%)</title><rect x="387.1" y="387.0" width="12.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="390.1" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 1.03%)</title><rect x="387.1" y="371.0" width="12.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="390.1" y="382.0"></text>
</g>
<g>
<title>__do_softirq (4 samples, 1.03%)</title><rect x="387.1" y="355.0" width="12.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="390.1" y="366.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.26%)</title><rect x="387.1" y="339.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="390.1" y="350.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.26%)</title><rect x="387.1" y="323.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="390.1" y="334.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.77%)</title><rect x="390.2" y="339.0" width="9.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="393.2" y="350.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.77%)</title><rect x="390.2" y="323.0" width="9.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="393.2" y="334.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.52%)</title><rect x="390.2" y="307.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="393.2" y="318.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.26%)</title><rect x="390.2" y="291.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="393.2" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.26%)</title><rect x="390.2" y="275.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="393.2" y="286.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.26%)</title><rect x="390.2" y="259.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="393.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.26%)</title><rect x="390.2" y="243.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="393.2" y="254.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.26%)</title><rect x="390.2" y="227.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="393.2" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.26%)</title><rect x="390.2" y="211.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="393.2" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.26%)</title><rect x="390.2" y="195.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="393.2" y="206.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.26%)</title><rect x="390.2" y="179.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="393.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.26%)</title><rect x="390.2" y="163.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="393.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.26%)</title><rect x="390.2" y="147.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="393.2" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.26%)</title><rect x="390.2" y="131.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="393.2" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.26%)</title><rect x="390.2" y="115.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="393.2" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.26%)</title><rect x="390.2" y="99.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="393.2" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.26%)</title><rect x="390.2" y="83.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="393.2" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.26%)</title><rect x="390.2" y="67.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="393.2" y="78.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.26%)</title><rect x="393.2" y="291.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="396.2" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.26%)</title><rect x="393.2" y="275.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="396.2" y="286.0"></text>
</g>
<g>
<title>do_send_sig_info (1 samples, 0.26%)</title><rect x="393.2" y="259.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="396.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.26%)</title><rect x="393.2" y="243.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="396.2" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.26%)</title><rect x="393.2" y="227.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="396.2" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.26%)</title><rect x="393.2" y="211.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="396.2" y="222.0"></text>
</g>
<g>
<title>hw_breakpoint_exceptions_notify (1 samples, 0.26%)</title><rect x="393.2" y="195.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="396.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.26%)</title><rect x="393.2" y="179.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="396.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.26%)</title><rect x="393.2" y="163.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="396.2" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.26%)</title><rect x="393.2" y="147.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="396.2" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.26%)</title><rect x="393.2" y="131.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="396.2" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.26%)</title><rect x="393.2" y="115.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="396.2" y="126.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.26%)</title><rect x="393.2" y="99.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="396.2" y="110.0"></text>
</g>
<g>
<title>tcp_rtt_estimator (1 samples, 0.26%)</title><rect x="393.2" y="83.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="396.2" y="94.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.26%)</title><rect x="396.2" y="307.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="399.2" y="318.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.26%)</title><rect x="396.2" y="291.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="399.2" y="302.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.26%)</title><rect x="396.2" y="275.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="399.2" y="286.0"></text>
</g>
<g>
<title>task_tick_fair (1 samples, 0.26%)</title><rect x="396.2" y="259.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="399.2" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.26%)</title><rect x="396.2" y="243.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="399.2" y="254.0"></text>
</g>
<g>
<title>[worker tid=24774] (17 samples, 4.38%)</title><rect x="399.3" y="851.0" width="51.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="402.3" y="862.0">[work..</text>
</g>
<g>
<title>java/lang/Thread.run (17 samples, 4.38%)</title><rect x="399.3" y="835.0" width="51.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="402.3" y="846.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17 samples, 4.38%)</title><rect x="399.3" y="819.0" width="51.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="402.3" y="830.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17 samples, 4.38%)</title><rect x="399.3" y="803.0" width="51.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="402.3" y="814.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.52%)</title><rect x="399.3" y="787.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="402.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.52%)</title><rect x="399.3" y="771.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.52%)</title><rect x="399.3" y="755.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.52%)</title><rect x="399.3" y="739.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.52%)</title><rect x="399.3" y="723.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.3" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.52%)</title><rect x="399.3" y="707.0" width="6.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="402.3" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.52%)</title><rect x="399.3" y="691.0" width="6.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="402.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (15 samples, 3.87%)</title><rect x="405.4" y="787.0" width="45.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="408.4" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (15 samples, 3.87%)</title><rect x="405.4" y="771.0" width="45.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="408.4" y="782.0">ru/m..</text>
</g>
<g>
<title>itable stub (1 samples, 0.26%)</title><rect x="405.4" y="755.0" width="3.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="408.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.77%)</title><rect x="408.4" y="755.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="411.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.77%)</title><rect x="408.4" y="739.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="411.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.77%)</title><rect x="408.4" y="723.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="411.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.77%)</title><rect x="408.4" y="707.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="411.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.77%)</title><rect x="408.4" y="691.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.77%)</title><rect x="408.4" y="675.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.4" y="686.0"></text>
</g>
<g>
<title>__send (3 samples, 0.77%)</title><rect x="408.4" y="659.0" width="9.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="411.4" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.77%)</title><rect x="408.4" y="643.0" width="9.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="411.4" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.77%)</title><rect x="408.4" y="627.0" width="9.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="411.4" y="638.0"></text>
</g>
<g>
<title>sys_rt_sigreturn (2 samples, 0.52%)</title><rect x="408.4" y="611.0" width="6.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="411.4" y="622.0"></text>
</g>
<g>
<title>restore_altstack (2 samples, 0.52%)</title><rect x="408.4" y="595.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="411.4" y="606.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.52%)</title><rect x="408.4" y="579.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="411.4" y="590.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.26%)</title><rect x="408.4" y="563.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="411.4" y="574.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.26%)</title><rect x="408.4" y="547.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="411.4" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.26%)</title><rect x="408.4" y="531.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="411.4" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.26%)</title><rect x="408.4" y="515.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="411.4" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.26%)</title><rect x="408.4" y="499.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="411.4" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.26%)</title><rect x="408.4" y="483.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="411.4" y="494.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.26%)</title><rect x="408.4" y="467.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="411.4" y="478.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.26%)</title><rect x="408.4" y="451.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="411.4" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.26%)</title><rect x="408.4" y="435.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="411.4" y="446.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.26%)</title><rect x="408.4" y="419.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="411.4" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.26%)</title><rect x="408.4" y="403.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="411.4" y="414.0"></text>
</g>
<g>
<title>__switch_to_asm (1 samples, 0.26%)</title><rect x="408.4" y="387.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="411.4" y="398.0"></text>
</g>
<g>
<title>__perf_event_task_sched_in (1 samples, 0.26%)</title><rect x="408.4" y="371.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="411.4" y="382.0"></text>
</g>
<g>
<title>perf_pmu_nop_void (1 samples, 0.26%)</title><rect x="408.4" y="355.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="411.4" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.26%)</title><rect x="408.4" y="339.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="411.4" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.26%)</title><rect x="408.4" y="323.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="411.4" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.26%)</title><rect x="408.4" y="307.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="411.4" y="318.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.26%)</title><rect x="408.4" y="291.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="411.4" y="302.0"></text>
</g>
<g>
<title>do_vfs_ioctl (1 samples, 0.26%)</title><rect x="411.4" y="563.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="414.4" y="574.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.26%)</title><rect x="411.4" y="547.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="414.4" y="558.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.26%)</title><rect x="411.4" y="531.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="414.4" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.26%)</title><rect x="411.4" y="515.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="414.4" y="526.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.26%)</title><rect x="411.4" y="499.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="414.4" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.26%)</title><rect x="411.4" y="483.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="414.4" y="494.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.26%)</title><rect x="411.4" y="467.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="414.4" y="478.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.26%)</title><rect x="411.4" y="451.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="414.4" y="462.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.26%)</title><rect x="411.4" y="435.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="414.4" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.26%)</title><rect x="411.4" y="419.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="414.4" y="430.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.26%)</title><rect x="411.4" y="403.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="414.4" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.26%)</title><rect x="411.4" y="387.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="414.4" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.26%)</title><rect x="411.4" y="371.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="414.4" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.26%)</title><rect x="411.4" y="355.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="414.4" y="366.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.26%)</title><rect x="411.4" y="339.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="414.4" y="350.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.26%)</title><rect x="411.4" y="323.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="414.4" y="334.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.26%)</title><rect x="411.4" y="307.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="414.4" y="318.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.26%)</title><rect x="411.4" y="291.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="414.4" y="302.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.26%)</title><rect x="411.4" y="275.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="414.4" y="286.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.26%)</title><rect x="411.4" y="259.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="414.4" y="270.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.26%)</title><rect x="411.4" y="243.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="414.4" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.26%)</title><rect x="411.4" y="227.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="414.4" y="238.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.26%)</title><rect x="411.4" y="211.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="414.4" y="222.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.26%)</title><rect x="411.4" y="195.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="414.4" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.26%)</title><rect x="411.4" y="179.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="414.4" y="190.0"></text>
</g>
<g>
<title>sys_sendto (1 samples, 0.26%)</title><rect x="414.5" y="611.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="417.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (11 samples, 2.84%)</title><rect x="417.5" y="755.0" width="33.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.5" y="766.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (11 samples, 2.84%)</title><rect x="417.5" y="739.0" width="33.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="420.5" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (11 samples, 2.84%)</title><rect x="417.5" y="723.0" width="33.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.5" y="734.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (11 samples, 2.84%)</title><rect x="417.5" y="707.0" width="33.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="420.5" y="718.0">ru..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (11 samples, 2.84%)</title><rect x="417.5" y="691.0" width="33.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.5" y="702.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (11 samples, 2.84%)</title><rect x="417.5" y="675.0" width="33.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="420.5" y="686.0">or..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (7 samples, 1.80%)</title><rect x="417.5" y="659.0" width="21.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="420.5" y="670.0">J..</text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (7 samples, 1.80%)</title><rect x="417.5" y="643.0" width="21.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="420.5" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (7 samples, 1.80%)</title><rect x="417.5" y="627.0" width="21.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="420.5" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (7 samples, 1.80%)</title><rect x="417.5" y="611.0" width="21.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="420.5" y="622.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (6 samples, 1.55%)</title><rect x="420.6" y="595.0" width="18.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="423.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (6 samples, 1.55%)</title><rect x="420.6" y="579.0" width="18.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="423.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (6 samples, 1.55%)</title><rect x="420.6" y="563.0" width="18.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="423.6" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (6 samples, 1.55%)</title><rect x="420.6" y="547.0" width="18.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="423.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (6 samples, 1.55%)</title><rect x="420.6" y="531.0" width="18.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="423.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 1.55%)</title><rect x="420.6" y="515.0" width="18.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="423.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (6 samples, 1.55%)</title><rect x="420.6" y="499.0" width="18.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="423.6" y="510.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.26%)</title><rect x="420.6" y="483.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="423.6" y="494.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.26%)</title><rect x="420.6" y="467.0" width="3.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="423.6" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="420.6" y="451.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="423.6" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.77%)</title><rect x="423.6" y="483.0" width="9.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="426.6" y="494.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (3 samples, 0.77%)</title><rect x="423.6" y="467.0" width="9.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="426.6" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.26%)</title><rect x="423.6" y="451.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="426.6" y="462.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.52%)</title><rect x="426.6" y="451.0" width="6.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="429.6" y="462.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.26%)</title><rect x="429.7" y="435.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="432.7" y="446.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.26%)</title><rect x="429.7" y="419.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="432.7" y="430.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.26%)</title><rect x="432.7" y="483.0" width="3.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="435.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.26%)</title><rect x="435.8" y="483.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="438.8" y="494.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 1.03%)</title><rect x="438.8" y="659.0" width="12.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="441.8" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 1.03%)</title><rect x="438.8" y="643.0" width="12.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.8" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (4 samples, 1.03%)</title><rect x="438.8" y="627.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="441.8" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 1.03%)</title><rect x="438.8" y="611.0" width="12.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.8" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (3 samples, 0.77%)</title><rect x="441.9" y="595.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="444.9" y="606.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (3 samples, 0.77%)</title><rect x="441.9" y="579.0" width="9.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="444.9" y="590.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.26%)</title><rect x="441.9" y="563.0" width="3.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="444.9" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="441.9" y="547.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="444.9" y="558.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.52%)</title><rect x="444.9" y="563.0" width="6.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="447.9" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.26%)</title><rect x="444.9" y="547.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="447.9" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="447.9" y="547.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="450.9" y="558.0"></text>
</g>
<g>
<title>[worker tid=24775] (42 samples, 10.82%)</title><rect x="451.0" y="851.0" width="127.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="454.0" y="862.0">[worker tid=24775]</text>
</g>
<g>
<title>java/lang/Thread.run (42 samples, 10.82%)</title><rect x="451.0" y="835.0" width="127.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.0" y="846.0">java/lang/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (42 samples, 10.82%)</title><rect x="451.0" y="819.0" width="127.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="454.0" y="830.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (42 samples, 10.82%)</title><rect x="451.0" y="803.0" width="127.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="454.0" y="814.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 1.03%)</title><rect x="451.0" y="787.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (4 samples, 1.03%)</title><rect x="451.0" y="771.0" width="12.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="454.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 1.03%)</title><rect x="451.0" y="755.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="454.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 1.03%)</title><rect x="451.0" y="739.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="454.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 1.03%)</title><rect x="451.0" y="723.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="454.0" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.26%)</title><rect x="457.1" y="707.0" width="3.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="460.1" y="718.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.26%)</title><rect x="457.1" y="691.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="460.1" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.26%)</title><rect x="457.1" y="675.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="460.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="457.1" y="659.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="460.1" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.26%)</title><rect x="460.1" y="707.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="463.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (38 samples, 9.79%)</title><rect x="463.1" y="787.0" width="115.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.1" y="798.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (38 samples, 9.79%)</title><rect x="463.1" y="771.0" width="115.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.1" y="782.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (14 samples, 3.61%)</title><rect x="463.1" y="755.0" width="42.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.1" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (13 samples, 3.35%)</title><rect x="463.1" y="739.0" width="39.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.1" y="750.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (13 samples, 3.35%)</title><rect x="463.1" y="723.0" width="39.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.1" y="734.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (13 samples, 3.35%)</title><rect x="463.1" y="707.0" width="39.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.1" y="718.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (13 samples, 3.35%)</title><rect x="463.1" y="691.0" width="39.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.1" y="702.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (13 samples, 3.35%)</title><rect x="463.1" y="675.0" width="39.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.1" y="686.0">one..</text>
</g>
<g>
<title>__send (13 samples, 3.35%)</title><rect x="463.1" y="659.0" width="39.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="466.1" y="670.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (13 samples, 3.35%)</title><rect x="463.1" y="643.0" width="39.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="466.1" y="654.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (13 samples, 3.35%)</title><rect x="463.1" y="627.0" width="39.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="466.1" y="638.0">do_..</text>
</g>
<g>
<title>sys_setsockopt (12 samples, 3.09%)</title><rect x="466.2" y="611.0" width="36.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="469.2" y="622.0">sys..</text>
</g>
<g>
<title>sock_setsockopt (10 samples, 2.58%)</title><rect x="466.2" y="595.0" width="30.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="469.2" y="606.0">so..</text>
</g>
<g>
<title>SYSC_sendto (10 samples, 2.58%)</title><rect x="466.2" y="579.0" width="30.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="469.2" y="590.0">SY..</text>
</g>
<g>
<title>sock_sendmsg (10 samples, 2.58%)</title><rect x="466.2" y="563.0" width="30.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="469.2" y="574.0">so..</text>
</g>
<g>
<title>tcp_sendmsg (10 samples, 2.58%)</title><rect x="466.2" y="547.0" width="30.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="469.2" y="558.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (8 samples, 2.06%)</title><rect x="469.2" y="531.0" width="24.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="472.2" y="542.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (8 samples, 2.06%)</title><rect x="469.2" y="515.0" width="24.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="472.2" y="526.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (8 samples, 2.06%)</title><rect x="469.2" y="499.0" width="24.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="472.2" y="510.0">_..</text>
</g>
<g>
<title>ip_local_out (7 samples, 1.80%)</title><rect x="469.2" y="483.0" width="21.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="472.2" y="494.0">i..</text>
</g>
<g>
<title>__sk_dst_check (7 samples, 1.80%)</title><rect x="469.2" y="467.0" width="21.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="472.2" y="478.0">_..</text>
</g>
<g>
<title>ipv4_dst_check (7 samples, 1.80%)</title><rect x="469.2" y="451.0" width="21.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="472.2" y="462.0">i..</text>
</g>
<g>
<title>ip_output (7 samples, 1.80%)</title><rect x="469.2" y="435.0" width="21.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="472.2" y="446.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (7 samples, 1.80%)</title><rect x="469.2" y="419.0" width="21.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="472.2" y="430.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.26%)</title><rect x="469.2" y="403.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="472.2" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 1.55%)</title><rect x="472.3" y="403.0" width="18.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="475.3" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.18 (6 samples, 1.55%)</title><rect x="472.3" y="387.0" width="18.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="475.3" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (6 samples, 1.55%)</title><rect x="472.3" y="371.0" width="18.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="475.3" y="382.0"></text>
</g>
<g>
<title>__do_softirq (5 samples, 1.29%)</title><rect x="472.3" y="355.0" width="15.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="475.3" y="366.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 1.03%)</title><rect x="475.3" y="339.0" width="12.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="478.3" y="350.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 1.03%)</title><rect x="475.3" y="323.0" width="12.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="478.3" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.52%)</title><rect x="475.3" y="307.0" width="6.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="478.3" y="318.0"></text>
</g>
<g>
<title>load_balance (2 samples, 0.52%)</title><rect x="475.3" y="291.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="478.3" y="302.0"></text>
</g>
<g>
<title>cpumask_next_and (1 samples, 0.26%)</title><rect x="475.3" y="275.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="478.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.26%)</title><rect x="475.3" y="259.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="478.3" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.26%)</title><rect x="475.3" y="243.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="478.3" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.26%)</title><rect x="475.3" y="227.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="478.3" y="238.0"></text>
</g>
<g>
<title>update_sd_lb_stats (1 samples, 0.26%)</title><rect x="475.3" y="211.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="478.3" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.26%)</title><rect x="475.3" y="195.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="478.3" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.26%)</title><rect x="475.3" y="179.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="478.3" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.26%)</title><rect x="475.3" y="163.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="478.3" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.26%)</title><rect x="475.3" y="147.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="478.3" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.26%)</title><rect x="475.3" y="131.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="478.3" y="142.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.26%)</title><rect x="475.3" y="115.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="478.3" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.26%)</title><rect x="475.3" y="99.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="478.3" y="110.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.26%)</title><rect x="478.4" y="275.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="481.4" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.26%)</title><rect x="478.4" y="259.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="481.4" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.26%)</title><rect x="478.4" y="243.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="481.4" y="254.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.26%)</title><rect x="478.4" y="227.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="481.4" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.26%)</title><rect x="478.4" y="211.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="481.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.26%)</title><rect x="478.4" y="195.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="481.4" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.26%)</title><rect x="478.4" y="179.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="481.4" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.26%)</title><rect x="478.4" y="163.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="481.4" y="174.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.26%)</title><rect x="478.4" y="147.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="481.4" y="158.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.26%)</title><rect x="478.4" y="131.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="481.4" y="142.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.52%)</title><rect x="481.4" y="307.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="484.4" y="318.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.52%)</title><rect x="481.4" y="291.0" width="6.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="484.4" y="302.0"></text>
</g>
<g>
<title>enqueue_task_fair (2 samples, 0.52%)</title><rect x="481.4" y="275.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="484.4" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.52%)</title><rect x="481.4" y="259.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="484.4" y="270.0"></text>
</g>
<g>
<title>enqueue_entity (2 samples, 0.52%)</title><rect x="481.4" y="243.0" width="6.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="484.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.52%)</title><rect x="481.4" y="227.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="484.4" y="238.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (2 samples, 0.52%)</title><rect x="481.4" y="211.0" width="6.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="484.4" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.52%)</title><rect x="481.4" y="195.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="484.4" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.52%)</title><rect x="481.4" y="179.0" width="6.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="484.4" y="190.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.26%)</title><rect x="481.4" y="163.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="484.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.26%)</title><rect x="481.4" y="147.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="484.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.26%)</title><rect x="481.4" y="131.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="484.4" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.26%)</title><rect x="481.4" y="115.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="484.4" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.26%)</title><rect x="481.4" y="99.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="484.4" y="110.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.26%)</title><rect x="481.4" y="83.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="484.4" y="94.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.26%)</title><rect x="481.4" y="67.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="484.4" y="78.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.26%)</title><rect x="481.4" y="51.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="484.4" y="62.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.26%)</title><rect x="484.4" y="163.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="487.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.26%)</title><rect x="484.4" y="147.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="487.4" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.26%)</title><rect x="484.4" y="131.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="487.4" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.26%)</title><rect x="484.4" y="115.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="487.4" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.26%)</title><rect x="484.4" y="99.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="487.4" y="110.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.26%)</title><rect x="484.4" y="83.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="487.4" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.26%)</title><rect x="484.4" y="67.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="487.4" y="78.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.26%)</title><rect x="484.4" y="51.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="487.4" y="62.0"></text>
</g>
<g>
<title>hrtimer_interrupt (1 samples, 0.26%)</title><rect x="487.5" y="355.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="490.5" y="366.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.26%)</title><rect x="487.5" y="339.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="490.5" y="350.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.26%)</title><rect x="490.5" y="483.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="493.5" y="494.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.26%)</title><rect x="490.5" y="467.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="493.5" y="478.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.26%)</title><rect x="493.6" y="531.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="496.6" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.26%)</title><rect x="493.6" y="515.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="496.6" y="526.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.26%)</title><rect x="493.6" y="499.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="496.6" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.26%)</title><rect x="493.6" y="483.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="496.6" y="494.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.52%)</title><rect x="496.6" y="595.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="499.6" y="606.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.52%)</title><rect x="496.6" y="579.0" width="6.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="499.6" y="590.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.52%)</title><rect x="496.6" y="563.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="499.6" y="574.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.52%)</title><rect x="496.6" y="547.0" width="6.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="499.6" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.52%)</title><rect x="496.6" y="531.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="499.6" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.52%)</title><rect x="496.6" y="515.0" width="6.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="499.6" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.52%)</title><rect x="496.6" y="499.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="499.6" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.52%)</title><rect x="496.6" y="483.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="499.6" y="494.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.26%)</title><rect x="499.6" y="467.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="502.6" y="478.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.26%)</title><rect x="499.6" y="451.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="502.6" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.26%)</title><rect x="499.6" y="435.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="502.6" y="446.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.26%)</title><rect x="499.6" y="419.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="502.6" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.26%)</title><rect x="499.6" y="403.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="502.6" y="414.0"></text>
</g>
<g>
<title>__switch_to_asm (1 samples, 0.26%)</title><rect x="499.6" y="387.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="502.6" y="398.0"></text>
</g>
<g>
<title>__perf_event_task_sched_in (1 samples, 0.26%)</title><rect x="499.6" y="371.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="502.6" y="382.0"></text>
</g>
<g>
<title>perf_pmu_nop_void (1 samples, 0.26%)</title><rect x="499.6" y="355.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="502.6" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.26%)</title><rect x="499.6" y="339.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="502.6" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.26%)</title><rect x="502.7" y="739.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="505.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.26%)</title><rect x="502.7" y="723.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="505.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.26%)</title><rect x="502.7" y="707.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="505.7" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.26%)</title><rect x="502.7" y="691.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="505.7" y="702.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.26%)</title><rect x="502.7" y="675.0" width="3.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="505.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (10 samples, 2.58%)</title><rect x="505.7" y="755.0" width="30.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.7" y="766.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (10 samples, 2.58%)</title><rect x="505.7" y="739.0" width="30.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="508.7" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (10 samples, 2.58%)</title><rect x="505.7" y="723.0" width="30.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="508.7" y="734.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (10 samples, 2.58%)</title><rect x="505.7" y="707.0" width="30.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="508.7" y="718.0">ru..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (10 samples, 2.58%)</title><rect x="505.7" y="691.0" width="30.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="508.7" y="702.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (10 samples, 2.58%)</title><rect x="505.7" y="675.0" width="30.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.7" y="686.0">or..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (7 samples, 1.80%)</title><rect x="505.7" y="659.0" width="21.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="508.7" y="670.0">J..</text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (7 samples, 1.80%)</title><rect x="505.7" y="643.0" width="21.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="508.7" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (7 samples, 1.80%)</title><rect x="505.7" y="627.0" width="21.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="508.7" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (7 samples, 1.80%)</title><rect x="505.7" y="611.0" width="21.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="508.7" y="622.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (7 samples, 1.80%)</title><rect x="505.7" y="595.0" width="21.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="508.7" y="606.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (7 samples, 1.80%)</title><rect x="505.7" y="579.0" width="21.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="508.7" y="590.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (7 samples, 1.80%)</title><rect x="505.7" y="563.0" width="21.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="508.7" y="574.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (7 samples, 1.80%)</title><rect x="505.7" y="547.0" width="21.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="508.7" y="558.0">/..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (7 samples, 1.80%)</title><rect x="505.7" y="531.0" width="21.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="508.7" y="542.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 1.80%)</title><rect x="505.7" y="515.0" width="21.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="508.7" y="526.0">r..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (7 samples, 1.80%)</title><rect x="505.7" y="499.0" width="21.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="508.7" y="510.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.77%)</title><rect x="505.7" y="483.0" width="9.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="508.7" y="494.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (3 samples, 0.77%)</title><rect x="505.7" y="467.0" width="9.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="508.7" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.52%)</title><rect x="508.8" y="451.0" width="6.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="511.8" y="462.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.26%)</title><rect x="511.8" y="435.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="514.8" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.26%)</title><rect x="514.8" y="483.0" width="3.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="517.8" y="494.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.26%)</title><rect x="514.8" y="467.0" width="3.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="517.8" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.26%)</title><rect x="514.8" y="451.0" width="3.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="517.8" y="462.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.26%)</title><rect x="514.8" y="435.0" width="3.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="517.8" y="446.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.77%)</title><rect x="517.9" y="483.0" width="9.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="520.9" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="524.0" y="467.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="527.0" y="478.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.26%)</title><rect x="527.0" y="659.0" width="3.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="530.0" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (2 samples, 0.52%)</title><rect x="530.1" y="659.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.1" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (2 samples, 0.52%)</title><rect x="530.1" y="643.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="533.1" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (2 samples, 0.52%)</title><rect x="530.1" y="627.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="533.1" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.52%)</title><rect x="530.1" y="611.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="533.1" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.52%)</title><rect x="530.1" y="595.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="533.1" y="606.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (2 samples, 0.52%)</title><rect x="530.1" y="579.0" width="6.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="533.1" y="590.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.52%)</title><rect x="530.1" y="563.0" width="6.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="533.1" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.26%)</title><rect x="530.1" y="547.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="533.1" y="558.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.26%)</title><rect x="533.1" y="547.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="536.1" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.26%)</title><rect x="533.1" y="531.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="536.1" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.26%)</title><rect x="533.1" y="515.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="536.1" y="526.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.26%)</title><rect x="533.1" y="499.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="536.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.act (14 samples, 3.61%)</title><rect x="536.1" y="755.0" width="42.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="539.1" y="766.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.lambda$entity$1 (14 samples, 3.61%)</title><rect x="536.1" y="739.0" width="42.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="539.1" y="750.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.proxy (14 samples, 3.61%)</title><rect x="536.1" y="723.0" width="42.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="539.1" y="734.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (14 samples, 3.61%)</title><rect x="536.1" y="707.0" width="42.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.1" y="718.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (14 samples, 3.61%)</title><rect x="536.1" y="691.0" width="42.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.1" y="702.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (6 samples, 1.55%)</title><rect x="536.1" y="675.0" width="18.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="539.1" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 1.55%)</title><rect x="536.1" y="659.0" width="18.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="539.1" y="670.0"></text>
</g>
<g>
<title>__libc_recv (6 samples, 1.55%)</title><rect x="536.1" y="643.0" width="18.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="539.1" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (6 samples, 1.55%)</title><rect x="536.1" y="627.0" width="18.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="539.1" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.55%)</title><rect x="536.1" y="611.0" width="18.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="539.1" y="622.0"></text>
</g>
<g>
<title>sys_setsockopt (6 samples, 1.55%)</title><rect x="536.1" y="595.0" width="18.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="539.1" y="606.0"></text>
</g>
<g>
<title>sock_setsockopt (6 samples, 1.55%)</title><rect x="536.1" y="579.0" width="18.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="539.1" y="590.0"></text>
</g>
<g>
<title>SYSC_recvfrom (6 samples, 1.55%)</title><rect x="536.1" y="563.0" width="18.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="539.1" y="574.0"></text>
</g>
<g>
<title>inet_recvmsg (6 samples, 1.55%)</title><rect x="536.1" y="547.0" width="18.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="539.1" y="558.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 1.55%)</title><rect x="536.1" y="531.0" width="18.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="539.1" y="542.0"></text>
</g>
<g>
<title>autoremove_wake_function (1 samples, 0.26%)</title><rect x="536.1" y="515.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="539.1" y="526.0"></text>
</g>
<g>
<title>sk_wait_data (1 samples, 0.26%)</title><rect x="536.1" y="499.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="539.1" y="510.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.26%)</title><rect x="536.1" y="483.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="539.1" y="494.0"></text>
</g>
<g>
<title>schedule_timeout (1 samples, 0.26%)</title><rect x="536.1" y="467.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="539.1" y="478.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.26%)</title><rect x="536.1" y="451.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="539.1" y="462.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.26%)</title><rect x="536.1" y="435.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="539.1" y="446.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.26%)</title><rect x="536.1" y="419.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="539.1" y="430.0"></text>
</g>
<g>
<title>tcp_prequeue_process (5 samples, 1.29%)</title><rect x="539.2" y="515.0" width="15.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="542.2" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 1.29%)</title><rect x="539.2" y="499.0" width="15.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="542.2" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 1.29%)</title><rect x="539.2" y="483.0" width="15.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="542.2" y="494.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.26%)</title><rect x="539.2" y="467.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="542.2" y="478.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.26%)</title><rect x="542.2" y="467.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="545.2" y="478.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (3 samples, 0.77%)</title><rect x="545.3" y="467.0" width="9.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="548.3" y="478.0"></text>
</g>
<g>
<title>copy_to_iter (1 samples, 0.26%)</title><rect x="545.3" y="451.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="548.3" y="462.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.26%)</title><rect x="545.3" y="435.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="548.3" y="446.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.52%)</title><rect x="548.3" y="451.0" width="6.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="551.3" y="462.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.52%)</title><rect x="548.3" y="435.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="551.3" y="446.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.26%)</title><rect x="548.3" y="419.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="551.3" y="430.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.26%)</title><rect x="551.3" y="419.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="554.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2 samples, 0.52%)</title><rect x="554.4" y="675.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="557.4" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.26%)</title><rect x="554.4" y="659.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="557.4" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.26%)</title><rect x="554.4" y="643.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="557.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1 samples, 0.26%)</title><rect x="557.4" y="659.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.4" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.26%)</title><rect x="557.4" y="643.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="560.4" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.26%)</title><rect x="557.4" y="627.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="560.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.26%)</title><rect x="560.5" y="675.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="563.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.26%)</title><rect x="560.5" y="659.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.5" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (1 samples, 0.26%)</title><rect x="563.5" y="675.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="566.5" y="686.0"></text>
</g>
<g>
<title>__GI___setsockopt (1 samples, 0.26%)</title><rect x="563.5" y="659.0" width="3.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="566.5" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (4 samples, 1.03%)</title><rect x="566.5" y="675.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="569.5" y="686.0"></text>
</g>
<g>
<title>__send (4 samples, 1.03%)</title><rect x="566.5" y="659.0" width="12.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="569.5" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (4 samples, 1.03%)</title><rect x="566.5" y="643.0" width="12.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="569.5" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.03%)</title><rect x="566.5" y="627.0" width="12.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="569.5" y="638.0"></text>
</g>
<g>
<title>sys_sendto (1 samples, 0.26%)</title><rect x="566.5" y="611.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="569.5" y="622.0"></text>
</g>
<g>
<title>sys_setsockopt (3 samples, 0.77%)</title><rect x="569.6" y="611.0" width="9.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="572.6" y="622.0"></text>
</g>
<g>
<title>sock_setsockopt (3 samples, 0.77%)</title><rect x="569.6" y="595.0" width="9.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="572.6" y="606.0"></text>
</g>
<g>
<title>SYSC_sendto (3 samples, 0.77%)</title><rect x="569.6" y="579.0" width="9.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="572.6" y="590.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.77%)</title><rect x="569.6" y="563.0" width="9.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="572.6" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (3 samples, 0.77%)</title><rect x="569.6" y="547.0" width="9.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="572.6" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.26%)</title><rect x="569.6" y="531.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="572.6" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.26%)</title><rect x="569.6" y="515.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="572.6" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.26%)</title><rect x="569.6" y="499.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="572.6" y="510.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.52%)</title><rect x="572.6" y="531.0" width="6.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="575.6" y="542.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.26%)</title><rect x="572.6" y="515.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="575.6" y="526.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.26%)</title><rect x="575.7" y="515.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="578.7" y="526.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.26%)</title><rect x="575.7" y="499.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="578.7" y="510.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.35 (1 samples, 0.26%)</title><rect x="575.7" y="483.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="578.7" y="494.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.26%)</title><rect x="575.7" y="467.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="578.7" y="478.0"></text>
</g>
<g>
<title>[worker tid=24776] (17 samples, 4.38%)</title><rect x="578.7" y="851.0" width="51.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="581.7" y="862.0">[work..</text>
</g>
<g>
<title>java/lang/Thread.run (17 samples, 4.38%)</title><rect x="578.7" y="835.0" width="51.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.7" y="846.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17 samples, 4.38%)</title><rect x="578.7" y="819.0" width="51.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.7" y="830.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17 samples, 4.38%)</title><rect x="578.7" y="803.0" width="51.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="581.7" y="814.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.52%)</title><rect x="578.7" y="787.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="581.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.52%)</title><rect x="578.7" y="771.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="581.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.52%)</title><rect x="578.7" y="755.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="581.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.52%)</title><rect x="578.7" y="739.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.52%)</title><rect x="578.7" y="723.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="581.7" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.52%)</title><rect x="578.7" y="707.0" width="6.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="581.7" y="718.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.26%)</title><rect x="578.7" y="691.0" width="3.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="581.7" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.26%)</title><rect x="581.8" y="691.0" width="3.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="584.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.26%)</title><rect x="581.8" y="675.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="584.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="581.8" y="659.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="584.8" y="670.0"></text>
</g>
<g>
<title>sys_rt_sigreturn (1 samples, 0.26%)</title><rect x="581.8" y="643.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="584.8" y="654.0"></text>
</g>
<g>
<title>restore_altstack (1 samples, 0.26%)</title><rect x="581.8" y="627.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="584.8" y="638.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.26%)</title><rect x="581.8" y="611.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="584.8" y="622.0"></text>
</g>
<g>
<title>do_vfs_ioctl (1 samples, 0.26%)</title><rect x="581.8" y="595.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="584.8" y="606.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.26%)</title><rect x="581.8" y="579.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="584.8" y="590.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.26%)</title><rect x="581.8" y="563.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="584.8" y="574.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.26%)</title><rect x="581.8" y="547.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="584.8" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.26%)</title><rect x="581.8" y="531.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="584.8" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.26%)</title><rect x="581.8" y="515.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="584.8" y="526.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.26%)</title><rect x="581.8" y="499.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="584.8" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.26%)</title><rect x="581.8" y="483.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="584.8" y="494.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.26%)</title><rect x="581.8" y="467.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="584.8" y="478.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.26%)</title><rect x="581.8" y="451.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="584.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (15 samples, 3.87%)</title><rect x="584.8" y="787.0" width="45.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="587.8" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (15 samples, 3.87%)</title><rect x="584.8" y="771.0" width="45.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="587.8" y="782.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.26%)</title><rect x="584.8" y="755.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="587.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.26%)</title><rect x="584.8" y="739.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="587.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.26%)</title><rect x="584.8" y="723.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="587.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.26%)</title><rect x="584.8" y="707.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="587.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.26%)</title><rect x="584.8" y="691.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="587.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.26%)</title><rect x="584.8" y="675.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="587.8" y="686.0"></text>
</g>
<g>
<title>__send (1 samples, 0.26%)</title><rect x="584.8" y="659.0" width="3.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="587.8" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.26%)</title><rect x="584.8" y="643.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="587.8" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="584.8" y="627.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="587.8" y="638.0"></text>
</g>
<g>
<title>sys_rt_sigreturn (1 samples, 0.26%)</title><rect x="584.8" y="611.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="587.8" y="622.0"></text>
</g>
<g>
<title>restore_altstack (1 samples, 0.26%)</title><rect x="584.8" y="595.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="587.8" y="606.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.26%)</title><rect x="584.8" y="579.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="587.8" y="590.0"></text>
</g>
<g>
<title>do_vfs_ioctl (1 samples, 0.26%)</title><rect x="584.8" y="563.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="587.8" y="574.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.26%)</title><rect x="584.8" y="547.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="587.8" y="558.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.26%)</title><rect x="584.8" y="531.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="587.8" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.26%)</title><rect x="584.8" y="515.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="587.8" y="526.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.26%)</title><rect x="584.8" y="499.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="587.8" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.26%)</title><rect x="584.8" y="483.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="587.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (14 samples, 3.61%)</title><rect x="587.8" y="755.0" width="42.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="590.8" y="766.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (14 samples, 3.61%)</title><rect x="587.8" y="739.0" width="42.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="590.8" y="750.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (14 samples, 3.61%)</title><rect x="587.8" y="723.0" width="42.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="590.8" y="734.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (14 samples, 3.61%)</title><rect x="587.8" y="707.0" width="42.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="590.8" y="718.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (14 samples, 3.61%)</title><rect x="587.8" y="691.0" width="42.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="590.8" y="702.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (14 samples, 3.61%)</title><rect x="587.8" y="675.0" width="42.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.8" y="686.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (7 samples, 1.80%)</title><rect x="587.8" y="659.0" width="21.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="590.8" y="670.0">J..</text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.26%)</title><rect x="587.8" y="643.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="590.8" y="654.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (6 samples, 1.55%)</title><rect x="590.9" y="643.0" width="18.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="593.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (6 samples, 1.55%)</title><rect x="590.9" y="627.0" width="18.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="593.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (6 samples, 1.55%)</title><rect x="590.9" y="611.0" width="18.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="593.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (6 samples, 1.55%)</title><rect x="590.9" y="595.0" width="18.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="593.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (6 samples, 1.55%)</title><rect x="590.9" y="579.0" width="18.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="593.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (5 samples, 1.29%)</title><rect x="590.9" y="563.0" width="15.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="593.9" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (5 samples, 1.29%)</title><rect x="590.9" y="547.0" width="15.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="593.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (5 samples, 1.29%)</title><rect x="590.9" y="531.0" width="15.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="593.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 1.03%)</title><rect x="593.9" y="515.0" width="12.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="596.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 1.03%)</title><rect x="593.9" y="499.0" width="12.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="596.9" y="510.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.52%)</title><rect x="593.9" y="483.0" width="6.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="596.9" y="494.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.52%)</title><rect x="593.9" y="467.0" width="6.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="596.9" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="593.9" y="451.0" width="3.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="596.9" y="462.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.26%)</title><rect x="597.0" y="451.0" width="3.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="600.0" y="462.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.26%)</title><rect x="597.0" y="435.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="600.0" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.52%)</title><rect x="600.0" y="483.0" width="6.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="603.0" y="494.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.52%)</title><rect x="600.0" y="467.0" width="6.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="603.0" y="478.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.26%)</title><rect x="600.0" y="451.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="603.0" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.26%)</title><rect x="603.0" y="451.0" width="3.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="606.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.26%)</title><rect x="606.1" y="563.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="609.1" y="574.0"></text>
</g>
<g>
<title>_init (1 samples, 0.26%)</title><rect x="609.1" y="659.0" width="3.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="612.1" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (6 samples, 1.55%)</title><rect x="612.2" y="659.0" width="18.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="615.2" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (6 samples, 1.55%)</title><rect x="612.2" y="643.0" width="18.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.2" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (5 samples, 1.29%)</title><rect x="612.2" y="627.0" width="15.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.2" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (5 samples, 1.29%)</title><rect x="612.2" y="611.0" width="15.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="615.2" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (5 samples, 1.29%)</title><rect x="612.2" y="595.0" width="15.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="615.2" y="606.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (4 samples, 1.03%)</title><rect x="615.2" y="579.0" width="12.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="618.2" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.26%)</title><rect x="615.2" y="563.0" width="3.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="618.2" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="615.2" y="547.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="618.2" y="558.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.26%)</title><rect x="618.2" y="563.0" width="3.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="621.2" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="618.2" y="547.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="621.2" y="558.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.52%)</title><rect x="621.3" y="563.0" width="6.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="624.3" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="624.3" y="547.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="627.3" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (1 samples, 0.26%)</title><rect x="627.4" y="627.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.26%)</title><rect x="627.4" y="611.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="630.4" y="622.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.26%)</title><rect x="627.4" y="595.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.4" y="606.0"></text>
</g>
<g>
<title>[worker tid=24777] (41 samples, 10.57%)</title><rect x="630.4" y="851.0" width="124.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="633.4" y="862.0">[worker tid=247..</text>
</g>
<g>
<title>java/lang/Thread.run (41 samples, 10.57%)</title><rect x="630.4" y="835.0" width="124.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="633.4" y="846.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (41 samples, 10.57%)</title><rect x="630.4" y="819.0" width="124.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.4" y="830.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (41 samples, 10.57%)</title><rect x="630.4" y="803.0" width="124.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.4" y="814.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 2.58%)</title><rect x="630.4" y="787.0" width="30.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.4" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (10 samples, 2.58%)</title><rect x="630.4" y="771.0" width="30.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.4" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 2.58%)</title><rect x="630.4" y="755.0" width="30.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.4" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 2.58%)</title><rect x="630.4" y="739.0" width="30.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.4" y="750.0">ja..</text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (1 samples, 0.26%)</title><rect x="630.4" y="723.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="633.4" y="734.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.26%)</title><rect x="630.4" y="707.0" width="3.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="633.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 2.32%)</title><rect x="633.5" y="723.0" width="27.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="636.5" y="734.0">j..</text>
</g>
<g>
<title>Unsafe_Park (9 samples, 2.32%)</title><rect x="633.5" y="707.0" width="27.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="636.5" y="718.0">U..</text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.26%)</title><rect x="639.5" y="691.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="642.5" y="702.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.77%)</title><rect x="642.6" y="691.0" width="9.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="645.6" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.26%)</title><rect x="648.7" y="675.0" width="3.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="651.7" y="686.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.26%)</title><rect x="651.7" y="691.0" width="3.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="654.7" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.26%)</title><rect x="651.7" y="675.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="654.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="651.7" y="659.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="654.7" y="670.0"></text>
</g>
<g>
<title>sys_setsockopt (1 samples, 0.26%)</title><rect x="651.7" y="643.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="654.7" y="654.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.26%)</title><rect x="651.7" y="627.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="654.7" y="638.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.26%)</title><rect x="651.7" y="611.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="654.7" y="622.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.26%)</title><rect x="651.7" y="595.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="654.7" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.26%)</title><rect x="651.7" y="579.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="654.7" y="590.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.26%)</title><rect x="651.7" y="563.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="654.7" y="574.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.26%)</title><rect x="651.7" y="547.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="654.7" y="558.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.26%)</title><rect x="651.7" y="531.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="654.7" y="542.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.26%)</title><rect x="654.7" y="691.0" width="3.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="657.7" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.26%)</title><rect x="654.7" y="675.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="657.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="654.7" y="659.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="657.7" y="670.0"></text>
</g>
<g>
<title>sys_setsockopt (1 samples, 0.26%)</title><rect x="654.7" y="643.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="657.7" y="654.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.26%)</title><rect x="654.7" y="627.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="657.7" y="638.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.26%)</title><rect x="654.7" y="611.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="657.7" y="622.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.26%)</title><rect x="654.7" y="595.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="657.7" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.26%)</title><rect x="654.7" y="579.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="657.7" y="590.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.26%)</title><rect x="654.7" y="563.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="657.7" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.26%)</title><rect x="657.8" y="691.0" width="3.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="660.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (31 samples, 7.99%)</title><rect x="660.8" y="787.0" width="94.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="663.8" y="798.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (31 samples, 7.99%)</title><rect x="660.8" y="771.0" width="94.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.8" y="782.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 1.80%)</title><rect x="660.8" y="755.0" width="21.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.8" y="766.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 1.80%)</title><rect x="660.8" y="739.0" width="21.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="663.8" y="750.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.26%)</title><rect x="660.8" y="723.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="663.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.26%)</title><rect x="660.8" y="707.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="663.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.26%)</title><rect x="660.8" y="691.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.26%)</title><rect x="660.8" y="675.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.8" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 1.55%)</title><rect x="663.9" y="723.0" width="18.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 1.55%)</title><rect x="663.9" y="707.0" width="18.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 1.55%)</title><rect x="663.9" y="691.0" width="18.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.9" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (6 samples, 1.55%)</title><rect x="663.9" y="675.0" width="18.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="666.9" y="686.0"></text>
</g>
<g>
<title>__send (6 samples, 1.55%)</title><rect x="663.9" y="659.0" width="18.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="666.9" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (6 samples, 1.55%)</title><rect x="663.9" y="643.0" width="18.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="666.9" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.55%)</title><rect x="663.9" y="627.0" width="18.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="666.9" y="638.0"></text>
</g>
<g>
<title>sys_setsockopt (6 samples, 1.55%)</title><rect x="663.9" y="611.0" width="18.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="666.9" y="622.0"></text>
</g>
<g>
<title>sock_setsockopt (4 samples, 1.03%)</title><rect x="663.9" y="595.0" width="12.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="666.9" y="606.0"></text>
</g>
<g>
<title>SYSC_sendto (4 samples, 1.03%)</title><rect x="663.9" y="579.0" width="12.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="666.9" y="590.0"></text>
</g>
<g>
<title>sock_sendmsg (4 samples, 1.03%)</title><rect x="663.9" y="563.0" width="12.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="666.9" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 1.03%)</title><rect x="663.9" y="547.0" width="12.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="666.9" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (4 samples, 1.03%)</title><rect x="663.9" y="531.0" width="12.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="666.9" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (4 samples, 1.03%)</title><rect x="663.9" y="515.0" width="12.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="666.9" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 1.03%)</title><rect x="663.9" y="499.0" width="12.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="666.9" y="510.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.77%)</title><rect x="666.9" y="483.0" width="9.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="669.9" y="494.0"></text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.77%)</title><rect x="666.9" y="467.0" width="9.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="669.9" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.77%)</title><rect x="666.9" y="451.0" width="9.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="669.9" y="462.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.77%)</title><rect x="666.9" y="435.0" width="9.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="669.9" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.77%)</title><rect x="666.9" y="419.0" width="9.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="669.9" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.77%)</title><rect x="666.9" y="403.0" width="9.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="669.9" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.18 (3 samples, 0.77%)</title><rect x="666.9" y="387.0" width="9.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="669.9" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.77%)</title><rect x="666.9" y="371.0" width="9.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="669.9" y="382.0"></text>
</g>
<g>
<title>__do_softirq (3 samples, 0.77%)</title><rect x="666.9" y="355.0" width="9.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="669.9" y="366.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.77%)</title><rect x="666.9" y="339.0" width="9.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="669.9" y="350.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.52%)</title><rect x="669.9" y="323.0" width="6.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="672.9" y="334.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.52%)</title><rect x="669.9" y="307.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="672.9" y="318.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.26%)</title><rect x="669.9" y="291.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="672.9" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.26%)</title><rect x="669.9" y="275.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="672.9" y="286.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.26%)</title><rect x="669.9" y="259.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="672.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.26%)</title><rect x="669.9" y="243.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="672.9" y="254.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.26%)</title><rect x="669.9" y="227.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="672.9" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.26%)</title><rect x="669.9" y="211.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="672.9" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.26%)</title><rect x="669.9" y="195.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="672.9" y="206.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.26%)</title><rect x="669.9" y="179.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="672.9" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.26%)</title><rect x="669.9" y="163.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="672.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.26%)</title><rect x="669.9" y="147.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="672.9" y="158.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.26%)</title><rect x="669.9" y="131.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="672.9" y="142.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.26%)</title><rect x="673.0" y="291.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="676.0" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.26%)</title><rect x="673.0" y="275.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="676.0" y="286.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.52%)</title><rect x="676.0" y="595.0" width="6.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="679.0" y="606.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.52%)</title><rect x="676.0" y="579.0" width="6.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="679.0" y="590.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.52%)</title><rect x="676.0" y="563.0" width="6.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="679.0" y="574.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.52%)</title><rect x="676.0" y="547.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="679.0" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.52%)</title><rect x="676.0" y="531.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="679.0" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.52%)</title><rect x="676.0" y="515.0" width="6.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="679.0" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.52%)</title><rect x="676.0" y="499.0" width="6.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="679.0" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.52%)</title><rect x="676.0" y="483.0" width="6.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="679.0" y="494.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.52%)</title><rect x="676.0" y="467.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="679.0" y="478.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.26%)</title><rect x="679.1" y="451.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="682.1" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.26%)</title><rect x="679.1" y="435.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="682.1" y="446.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.26%)</title><rect x="679.1" y="419.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="682.1" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.26%)</title><rect x="679.1" y="403.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="682.1" y="414.0"></text>
</g>
<g>
<title>__switch_to_asm (1 samples, 0.26%)</title><rect x="679.1" y="387.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="682.1" y="398.0"></text>
</g>
<g>
<title>__perf_event_task_sched_in (1 samples, 0.26%)</title><rect x="679.1" y="371.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="682.1" y="382.0"></text>
</g>
<g>
<title>perf_pmu_nop_void (1 samples, 0.26%)</title><rect x="679.1" y="355.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="682.1" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.26%)</title><rect x="679.1" y="339.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="682.1" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.26%)</title><rect x="679.1" y="323.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="682.1" y="334.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.26%)</title><rect x="679.1" y="307.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="682.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (13 samples, 3.35%)</title><rect x="682.1" y="755.0" width="39.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.1" y="766.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (13 samples, 3.35%)</title><rect x="682.1" y="739.0" width="39.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.1" y="750.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (13 samples, 3.35%)</title><rect x="682.1" y="723.0" width="39.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.1" y="734.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (13 samples, 3.35%)</title><rect x="682.1" y="707.0" width="39.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.1" y="718.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (13 samples, 3.35%)</title><rect x="682.1" y="691.0" width="39.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="685.1" y="702.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (13 samples, 3.35%)</title><rect x="682.1" y="675.0" width="39.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.1" y="686.0">org..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.26%)</title><rect x="682.1" y="659.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.1" y="670.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (7 samples, 1.80%)</title><rect x="685.2" y="659.0" width="21.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="688.2" y="670.0">J..</text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (1 samples, 0.26%)</title><rect x="685.2" y="643.0" width="3.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="688.2" y="654.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (6 samples, 1.55%)</title><rect x="688.2" y="643.0" width="18.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="691.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (6 samples, 1.55%)</title><rect x="688.2" y="627.0" width="18.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="691.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (6 samples, 1.55%)</title><rect x="688.2" y="611.0" width="18.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="691.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (6 samples, 1.55%)</title><rect x="688.2" y="595.0" width="18.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="691.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (6 samples, 1.55%)</title><rect x="688.2" y="579.0" width="18.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="691.2" y="590.0"></text>
</g>
<g>
<title>_init (1 samples, 0.26%)</title><rect x="688.2" y="563.0" width="3.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="691.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (5 samples, 1.29%)</title><rect x="691.2" y="563.0" width="15.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="694.2" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (5 samples, 1.29%)</title><rect x="691.2" y="547.0" width="15.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="694.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (5 samples, 1.29%)</title><rect x="691.2" y="531.0" width="15.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="694.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 1.29%)</title><rect x="691.2" y="515.0" width="15.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="694.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 1.29%)</title><rect x="691.2" y="499.0" width="15.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="694.2" y="510.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.26%)</title><rect x="691.2" y="483.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="694.2" y="494.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.26%)</title><rect x="691.2" y="467.0" width="3.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="694.2" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.26%)</title><rect x="691.2" y="451.0" width="3.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="694.2" y="462.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.26%)</title><rect x="691.2" y="435.0" width="3.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="694.2" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (4 samples, 1.03%)</title><rect x="694.3" y="483.0" width="12.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="697.3" y="494.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (4 samples, 1.03%)</title><rect x="694.3" y="467.0" width="12.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="697.3" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="697.3" y="451.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="700.3" y="462.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.52%)</title><rect x="700.4" y="451.0" width="6.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="703.4" y="462.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.26%)</title><rect x="703.4" y="435.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="706.4" y="446.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.26%)</title><rect x="706.4" y="659.0" width="3.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="709.4" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 1.03%)</title><rect x="709.5" y="659.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.5" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (3 samples, 0.77%)</title><rect x="712.5" y="643.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="715.5" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (3 samples, 0.77%)</title><rect x="712.5" y="627.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.5" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (3 samples, 0.77%)</title><rect x="712.5" y="611.0" width="9.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="715.5" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (3 samples, 0.77%)</title><rect x="712.5" y="595.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="715.5" y="606.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (2 samples, 0.52%)</title><rect x="715.6" y="579.0" width="6.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="718.6" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.26%)</title><rect x="715.6" y="563.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="718.6" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.26%)</title><rect x="718.6" y="563.0" width="3.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="721.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.act (11 samples, 2.84%)</title><rect x="721.6" y="755.0" width="33.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="724.6" y="766.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.lambda$entity$1 (11 samples, 2.84%)</title><rect x="721.6" y="739.0" width="33.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="724.6" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.proxy (11 samples, 2.84%)</title><rect x="721.6" y="723.0" width="33.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.6" y="734.0">ru..</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.26%)</title><rect x="721.6" y="707.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="724.6" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.26%)</title><rect x="721.6" y="691.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="724.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (10 samples, 2.58%)</title><rect x="724.7" y="707.0" width="30.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="727.7" y="718.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (10 samples, 2.58%)</title><rect x="724.7" y="691.0" width="30.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="727.7" y="702.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (4 samples, 1.03%)</title><rect x="724.7" y="675.0" width="12.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="727.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 1.03%)</title><rect x="724.7" y="659.0" width="12.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="727.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.26%)</title><rect x="724.7" y="643.0" width="3.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="727.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.26%)</title><rect x="724.7" y="627.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="727.7" y="638.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.26%)</title><rect x="724.7" y="611.0" width="3.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="727.7" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.26%)</title><rect x="724.7" y="595.0" width="3.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="727.7" y="606.0"></text>
</g>
<g>
<title>__libc_recv (3 samples, 0.77%)</title><rect x="727.7" y="643.0" width="9.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="730.7" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (3 samples, 0.77%)</title><rect x="727.7" y="627.0" width="9.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="730.7" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.77%)</title><rect x="727.7" y="611.0" width="9.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="730.7" y="622.0"></text>
</g>
<g>
<title>sys_setsockopt (3 samples, 0.77%)</title><rect x="727.7" y="595.0" width="9.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="730.7" y="606.0"></text>
</g>
<g>
<title>sock_setsockopt (3 samples, 0.77%)</title><rect x="727.7" y="579.0" width="9.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="730.7" y="590.0"></text>
</g>
<g>
<title>SYSC_recvfrom (3 samples, 0.77%)</title><rect x="727.7" y="563.0" width="9.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="730.7" y="574.0"></text>
</g>
<g>
<title>inet_recvmsg (3 samples, 0.77%)</title><rect x="727.7" y="547.0" width="9.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="730.7" y="558.0"></text>
</g>
<g>
<title>tcp_recvmsg (3 samples, 0.77%)</title><rect x="727.7" y="531.0" width="9.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="730.7" y="542.0"></text>
</g>
<g>
<title>autoremove_wake_function (2 samples, 0.52%)</title><rect x="727.7" y="515.0" width="6.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="730.7" y="526.0"></text>
</g>
<g>
<title>sk_wait_data (2 samples, 0.52%)</title><rect x="727.7" y="499.0" width="6.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="730.7" y="510.0"></text>
</g>
<g>
<title>process_timeout (2 samples, 0.52%)</title><rect x="727.7" y="483.0" width="6.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="730.7" y="494.0"></text>
</g>
<g>
<title>schedule_timeout (2 samples, 0.52%)</title><rect x="727.7" y="467.0" width="6.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="730.7" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.26%)</title><rect x="727.7" y="451.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="730.7" y="462.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.26%)</title><rect x="730.8" y="451.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="733.8" y="462.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.26%)</title><rect x="730.8" y="435.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="733.8" y="446.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.26%)</title><rect x="730.8" y="419.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="733.8" y="430.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.26%)</title><rect x="730.8" y="403.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="733.8" y="414.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.26%)</title><rect x="730.8" y="387.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="733.8" y="398.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.26%)</title><rect x="730.8" y="371.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="733.8" y="382.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.26%)</title><rect x="730.8" y="355.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="733.8" y="366.0"></text>
</g>
<g>
<title>timerqueue_add (1 samples, 0.26%)</title><rect x="730.8" y="339.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="733.8" y="350.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.26%)</title><rect x="730.8" y="323.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="733.8" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.26%)</title><rect x="730.8" y="307.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="733.8" y="318.0"></text>
</g>
<g>
<title>tcp_prequeue_process (1 samples, 0.26%)</title><rect x="733.8" y="515.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="736.8" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.26%)</title><rect x="733.8" y="499.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="736.8" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.26%)</title><rect x="733.8" y="483.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="736.8" y="494.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (1 samples, 0.26%)</title><rect x="733.8" y="467.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="736.8" y="478.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.26%)</title><rect x="733.8" y="451.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="736.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1 samples, 0.26%)</title><rect x="736.9" y="675.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1 samples, 0.26%)</title><rect x="736.9" y="659.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.9" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.26%)</title><rect x="736.9" y="643.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.9" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.26%)</title><rect x="736.9" y="627.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.26%)</title><rect x="739.9" y="675.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="742.9" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.26%)</title><rect x="739.9" y="659.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="742.9" y="670.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.26%)</title><rect x="739.9" y="643.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="742.9" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (1 samples, 0.26%)</title><rect x="742.9" y="675.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.9" y="686.0"></text>
</g>
<g>
<title>__GI___setsockopt (1 samples, 0.26%)</title><rect x="742.9" y="659.0" width="3.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="745.9" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.26%)</title><rect x="742.9" y="643.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="745.9" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="742.9" y="627.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="745.9" y="638.0"></text>
</g>
<g>
<title>sys_setsockopt (1 samples, 0.26%)</title><rect x="742.9" y="611.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="745.9" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.26%)</title><rect x="742.9" y="595.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="745.9" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.26%)</title><rect x="742.9" y="579.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="745.9" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (2 samples, 0.52%)</title><rect x="746.0" y="675.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="749.0" y="686.0"></text>
</g>
<g>
<title>__send (2 samples, 0.52%)</title><rect x="746.0" y="659.0" width="6.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="749.0" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.52%)</title><rect x="746.0" y="643.0" width="6.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="749.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.52%)</title><rect x="746.0" y="627.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="749.0" y="638.0"></text>
</g>
<g>
<title>sys_setsockopt (2 samples, 0.52%)</title><rect x="746.0" y="611.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="749.0" y="622.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.52%)</title><rect x="746.0" y="595.0" width="6.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="749.0" y="606.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.52%)</title><rect x="746.0" y="579.0" width="6.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="749.0" y="590.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.52%)</title><rect x="746.0" y="563.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="749.0" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.52%)</title><rect x="746.0" y="547.0" width="6.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="749.0" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.52%)</title><rect x="746.0" y="531.0" width="6.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="749.0" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.52%)</title><rect x="746.0" y="515.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="749.0" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.52%)</title><rect x="746.0" y="499.0" width="6.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="749.0" y="510.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.26%)</title><rect x="749.0" y="483.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="752.0" y="494.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.26%)</title><rect x="749.0" y="467.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="752.0" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.26%)</title><rect x="749.0" y="451.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="752.0" y="462.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.26%)</title><rect x="749.0" y="435.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="752.0" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.26%)</title><rect x="749.0" y="419.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="752.0" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.26%)</title><rect x="749.0" y="403.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="752.0" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.26%)</title><rect x="749.0" y="387.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="752.0" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.26%)</title><rect x="749.0" y="371.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="752.0" y="382.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.26%)</title><rect x="749.0" y="355.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="752.0" y="366.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.26%)</title><rect x="749.0" y="339.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="752.0" y="350.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.26%)</title><rect x="749.0" y="323.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="752.0" y="334.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.26%)</title><rect x="749.0" y="307.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="752.0" y="318.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.26%)</title><rect x="749.0" y="291.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="752.0" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.26%)</title><rect x="749.0" y="275.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="752.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.26%)</title><rect x="749.0" y="259.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="752.0" y="270.0"></text>
</g>
<g>
<title>__irqentry_text_start (1 samples, 0.26%)</title><rect x="749.0" y="243.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="752.0" y="254.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.26%)</title><rect x="749.0" y="227.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="752.0" y="238.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.26%)</title><rect x="749.0" y="211.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="752.0" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.26%)</title><rect x="749.0" y="195.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="752.0" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.26%)</title><rect x="749.0" y="179.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="752.0" y="190.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.26%)</title><rect x="749.0" y="163.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="752.0" y="174.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.26%)</title><rect x="749.0" y="147.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="752.0" y="158.0"></text>
</g>
<g>
<title>hrtimer_wakeup (1 samples, 0.26%)</title><rect x="749.0" y="131.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="752.0" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.26%)</title><rect x="749.0" y="115.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="752.0" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.26%)</title><rect x="749.0" y="99.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="752.0" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.26%)</title><rect x="749.0" y="83.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="752.0" y="94.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.26%)</title><rect x="749.0" y="67.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="752.0" y="78.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.26%)</title><rect x="749.0" y="51.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="752.0" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.26%)</title><rect x="749.0" y="35.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="752.0" y="46.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.26%)</title><rect x="752.1" y="675.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.1" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.26%)</title><rect x="752.1" y="659.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="755.1" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (1 samples, 0.26%)</title><rect x="752.1" y="643.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.1" y="654.0"></text>
</g>
<g>
<title>[worker tid=24778] (41 samples, 10.57%)</title><rect x="755.1" y="851.0" width="124.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="758.1" y="862.0">[worker tid=247..</text>
</g>
<g>
<title>java/lang/Thread.run (41 samples, 10.57%)</title><rect x="755.1" y="835.0" width="124.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="758.1" y="846.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (41 samples, 10.57%)</title><rect x="755.1" y="819.0" width="124.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="758.1" y="830.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (41 samples, 10.57%)</title><rect x="755.1" y="803.0" width="124.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="758.1" y="814.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 1.03%)</title><rect x="755.1" y="787.0" width="12.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="758.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (4 samples, 1.03%)</title><rect x="755.1" y="771.0" width="12.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="758.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 1.03%)</title><rect x="755.1" y="755.0" width="12.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="758.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 1.03%)</title><rect x="755.1" y="739.0" width="12.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="758.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 1.03%)</title><rect x="755.1" y="723.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="758.1" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 1.03%)</title><rect x="755.1" y="707.0" width="12.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="758.1" y="718.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.26%)</title><rect x="755.1" y="691.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="758.1" y="702.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.26%)</title><rect x="758.1" y="691.0" width="3.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="761.1" y="702.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.26%)</title><rect x="761.2" y="691.0" width="3.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="764.2" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.26%)</title><rect x="761.2" y="675.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="764.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="761.2" y="659.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="764.2" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.26%)</title><rect x="764.2" y="691.0" width="3.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="767.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (37 samples, 9.54%)</title><rect x="767.3" y="787.0" width="112.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.3" y="798.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (37 samples, 9.54%)</title><rect x="767.3" y="771.0" width="112.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.3" y="782.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 2.06%)</title><rect x="767.3" y="755.0" width="24.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.3" y="766.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 2.06%)</title><rect x="767.3" y="739.0" width="24.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="770.3" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 2.06%)</title><rect x="767.3" y="723.0" width="24.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.3" y="734.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 2.06%)</title><rect x="767.3" y="707.0" width="24.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="770.3" y="718.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (8 samples, 2.06%)</title><rect x="767.3" y="691.0" width="24.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="770.3" y="702.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (8 samples, 2.06%)</title><rect x="767.3" y="675.0" width="24.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="770.3" y="686.0">o..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.52%)</title><rect x="770.3" y="659.0" width="6.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="773.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.52%)</title><rect x="770.3" y="643.0" width="6.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="773.3" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.26%)</title><rect x="770.3" y="627.0" width="3.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="773.3" y="638.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.26%)</title><rect x="773.4" y="627.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="776.4" y="638.0"></text>
</g>
<g>
<title>__send (5 samples, 1.29%)</title><rect x="776.4" y="659.0" width="15.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="779.4" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (5 samples, 1.29%)</title><rect x="776.4" y="643.0" width="15.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="779.4" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.29%)</title><rect x="776.4" y="627.0" width="15.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="779.4" y="638.0"></text>
</g>
<g>
<title>sys_setsockopt (5 samples, 1.29%)</title><rect x="776.4" y="611.0" width="15.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="779.4" y="622.0"></text>
</g>
<g>
<title>sock_setsockopt (3 samples, 0.77%)</title><rect x="776.4" y="595.0" width="9.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="779.4" y="606.0"></text>
</g>
<g>
<title>SYSC_sendto (3 samples, 0.77%)</title><rect x="776.4" y="579.0" width="9.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="779.4" y="590.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.77%)</title><rect x="776.4" y="563.0" width="9.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="779.4" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (3 samples, 0.77%)</title><rect x="776.4" y="547.0" width="9.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="779.4" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.52%)</title><rect x="776.4" y="531.0" width="6.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="779.4" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.52%)</title><rect x="776.4" y="515.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="779.4" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.52%)</title><rect x="776.4" y="499.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="779.4" y="510.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.52%)</title><rect x="776.4" y="483.0" width="6.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="779.4" y="494.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.52%)</title><rect x="776.4" y="467.0" width="6.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="779.4" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.52%)</title><rect x="776.4" y="451.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="779.4" y="462.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.52%)</title><rect x="776.4" y="435.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="779.4" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.52%)</title><rect x="776.4" y="419.0" width="6.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="779.4" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.26%)</title><rect x="776.4" y="403.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="779.4" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.26%)</title><rect x="776.4" y="387.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="779.4" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.26%)</title><rect x="779.4" y="403.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="782.4" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.26%)</title><rect x="779.4" y="387.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="782.4" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.26%)</title><rect x="779.4" y="371.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="782.4" y="382.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.26%)</title><rect x="779.4" y="355.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="782.4" y="366.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.26%)</title><rect x="779.4" y="339.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="782.4" y="350.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.26%)</title><rect x="779.4" y="323.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="782.4" y="334.0"></text>
</g>
<g>
<title>delayed_work_timer_fn (1 samples, 0.26%)</title><rect x="779.4" y="307.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="782.4" y="318.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.26%)</title><rect x="779.4" y="291.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="782.4" y="302.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.26%)</title><rect x="779.4" y="275.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="782.4" y="286.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.26%)</title><rect x="779.4" y="259.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="782.4" y="270.0"></text>
</g>
<g>
<title>__queue_work (1 samples, 0.26%)</title><rect x="779.4" y="243.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="782.4" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.26%)</title><rect x="779.4" y="227.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="782.4" y="238.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.26%)</title><rect x="779.4" y="211.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="782.4" y="222.0"></text>
</g>
<g>
<title>ttwu_do_wakeup (1 samples, 0.26%)</title><rect x="779.4" y="195.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="782.4" y="206.0"></text>
</g>
<g>
<title>check_preempt_curr (1 samples, 0.26%)</title><rect x="779.4" y="179.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="782.4" y="190.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.26%)</title><rect x="779.4" y="163.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="782.4" y="174.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.26%)</title><rect x="782.5" y="531.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="785.5" y="542.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.52%)</title><rect x="785.5" y="595.0" width="6.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="788.5" y="606.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.52%)</title><rect x="785.5" y="579.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="788.5" y="590.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.52%)</title><rect x="785.5" y="563.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="788.5" y="574.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.52%)</title><rect x="785.5" y="547.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="788.5" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.52%)</title><rect x="785.5" y="531.0" width="6.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="788.5" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.52%)</title><rect x="785.5" y="515.0" width="6.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="788.5" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.52%)</title><rect x="785.5" y="499.0" width="6.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="788.5" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.52%)</title><rect x="785.5" y="483.0" width="6.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="788.5" y="494.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.52%)</title><rect x="785.5" y="467.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="788.5" y="478.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.52%)</title><rect x="785.5" y="451.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="788.5" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.52%)</title><rect x="785.5" y="435.0" width="6.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="788.5" y="446.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.52%)</title><rect x="785.5" y="419.0" width="6.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="788.5" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.52%)</title><rect x="785.5" y="403.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="788.5" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.52%)</title><rect x="785.5" y="387.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="788.5" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.18 (2 samples, 0.52%)</title><rect x="785.5" y="371.0" width="6.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="788.5" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.52%)</title><rect x="785.5" y="355.0" width="6.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="788.5" y="366.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.52%)</title><rect x="785.5" y="339.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="788.5" y="350.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.52%)</title><rect x="785.5" y="323.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="788.5" y="334.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.52%)</title><rect x="785.5" y="307.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="788.5" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.26%)</title><rect x="788.6" y="291.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="791.6" y="302.0"></text>
</g>
<g>
<title>update_curr (1 samples, 0.26%)</title><rect x="788.6" y="275.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="791.6" y="286.0"></text>
</g>
<g>
<title>load_balance (1 samples, 0.26%)</title><rect x="788.6" y="259.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="791.6" y="270.0"></text>
</g>
<g>
<title>cpumask_next_and (1 samples, 0.26%)</title><rect x="788.6" y="243.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="791.6" y="254.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.26%)</title><rect x="788.6" y="227.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="791.6" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.26%)</title><rect x="788.6" y="211.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="791.6" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.26%)</title><rect x="788.6" y="195.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="791.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (12 samples, 3.09%)</title><rect x="791.6" y="755.0" width="36.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.6" y="766.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (12 samples, 3.09%)</title><rect x="791.6" y="739.0" width="36.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="794.6" y="750.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (12 samples, 3.09%)</title><rect x="791.6" y="723.0" width="36.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="794.6" y="734.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (12 samples, 3.09%)</title><rect x="791.6" y="707.0" width="36.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.6" y="718.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (12 samples, 3.09%)</title><rect x="791.6" y="691.0" width="36.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.6" y="702.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (12 samples, 3.09%)</title><rect x="791.6" y="675.0" width="36.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="794.6" y="686.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (10 samples, 2.58%)</title><rect x="791.6" y="659.0" width="30.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="794.6" y="670.0">Ja..</text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.26%)</title><rect x="791.6" y="643.0" width="3.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="794.6" y="654.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (9 samples, 2.32%)</title><rect x="794.6" y="643.0" width="27.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="797.6" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (9 samples, 2.32%)</title><rect x="794.6" y="627.0" width="27.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="797.6" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (9 samples, 2.32%)</title><rect x="794.6" y="611.0" width="27.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="797.6" y="622.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (9 samples, 2.32%)</title><rect x="794.6" y="595.0" width="27.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="797.6" y="606.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (9 samples, 2.32%)</title><rect x="794.6" y="579.0" width="27.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="797.6" y="590.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (9 samples, 2.32%)</title><rect x="794.6" y="563.0" width="27.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="797.6" y="574.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (9 samples, 2.32%)</title><rect x="794.6" y="547.0" width="27.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="797.6" y="558.0">/..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (9 samples, 2.32%)</title><rect x="794.6" y="531.0" width="27.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="797.6" y="542.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 2.32%)</title><rect x="794.6" y="515.0" width="27.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="797.6" y="526.0">r..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (9 samples, 2.32%)</title><rect x="794.6" y="499.0" width="27.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="797.6" y="510.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.26%)</title><rect x="794.6" y="483.0" width="3.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="797.6" y="494.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.26%)</title><rect x="794.6" y="467.0" width="3.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="797.6" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.26%)</title><rect x="794.6" y="451.0" width="3.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="797.6" y="462.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.26%)</title><rect x="794.6" y="435.0" width="3.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="797.6" y="446.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.26%)</title><rect x="794.6" y="419.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="797.6" y="430.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.26%)</title><rect x="794.6" y="403.0" width="3.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="797.6" y="414.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (6 samples, 1.55%)</title><rect x="797.7" y="483.0" width="18.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="800.7" y="494.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (6 samples, 1.55%)</title><rect x="797.7" y="467.0" width="18.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="800.7" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="797.7" y="451.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="800.7" y="462.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (5 samples, 1.29%)</title><rect x="800.7" y="451.0" width="15.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="803.7" y="462.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.77%)</title><rect x="803.8" y="435.0" width="9.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="806.8" y="446.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.26%)</title><rect x="803.8" y="419.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="806.8" y="430.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.52%)</title><rect x="806.8" y="419.0" width="6.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="809.8" y="430.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.26%)</title><rect x="809.8" y="403.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="812.8" y="414.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.26%)</title><rect x="812.9" y="435.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="815.9" y="446.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.26%)</title><rect x="815.9" y="483.0" width="3.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="818.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.26%)</title><rect x="819.0" y="483.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="822.0" y="494.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.26%)</title><rect x="822.0" y="659.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="825.0" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (1 samples, 0.26%)</title><rect x="825.1" y="659.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="828.1" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (1 samples, 0.26%)</title><rect x="825.1" y="643.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.1" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (1 samples, 0.26%)</title><rect x="825.1" y="627.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.1" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1 samples, 0.26%)</title><rect x="825.1" y="611.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.1" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1 samples, 0.26%)</title><rect x="825.1" y="595.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="828.1" y="606.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (1 samples, 0.26%)</title><rect x="825.1" y="579.0" width="3.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="828.1" y="590.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.26%)</title><rect x="825.1" y="563.0" width="3.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="828.1" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.26%)</title><rect x="825.1" y="547.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="828.1" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.26%)</title><rect x="825.1" y="531.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="828.1" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.26%)</title><rect x="825.1" y="515.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="828.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.act (17 samples, 4.38%)</title><rect x="828.1" y="755.0" width="51.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="831.1" y="766.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.lambda$entity$1 (16 samples, 4.12%)</title><rect x="831.1" y="739.0" width="48.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="834.1" y="750.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.proxy (16 samples, 4.12%)</title><rect x="831.1" y="723.0" width="48.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.1" y="734.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (16 samples, 4.12%)</title><rect x="831.1" y="707.0" width="48.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.1" y="718.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (16 samples, 4.12%)</title><rect x="831.1" y="691.0" width="48.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.1" y="702.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (6 samples, 1.55%)</title><rect x="831.1" y="675.0" width="18.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="834.1" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 1.55%)</title><rect x="831.1" y="659.0" width="18.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.1" y="670.0"></text>
</g>
<g>
<title>__libc_recv (5 samples, 1.29%)</title><rect x="831.1" y="643.0" width="15.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="834.1" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (5 samples, 1.29%)</title><rect x="831.1" y="627.0" width="15.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="834.1" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.29%)</title><rect x="831.1" y="611.0" width="15.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="834.1" y="622.0"></text>
</g>
<g>
<title>sys_setsockopt (5 samples, 1.29%)</title><rect x="831.1" y="595.0" width="15.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="834.1" y="606.0"></text>
</g>
<g>
<title>sock_setsockopt (5 samples, 1.29%)</title><rect x="831.1" y="579.0" width="15.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="834.1" y="590.0"></text>
</g>
<g>
<title>SYSC_recvfrom (5 samples, 1.29%)</title><rect x="831.1" y="563.0" width="15.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="834.1" y="574.0"></text>
</g>
<g>
<title>inet_recvmsg (5 samples, 1.29%)</title><rect x="831.1" y="547.0" width="15.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="834.1" y="558.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 1.29%)</title><rect x="831.1" y="531.0" width="15.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="834.1" y="542.0"></text>
</g>
<g>
<title>autoremove_wake_function (1 samples, 0.26%)</title><rect x="831.1" y="515.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="834.1" y="526.0"></text>
</g>
<g>
<title>sk_wait_data (1 samples, 0.26%)</title><rect x="831.1" y="499.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="834.1" y="510.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.26%)</title><rect x="831.1" y="483.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="834.1" y="494.0"></text>
</g>
<g>
<title>schedule_timeout (1 samples, 0.26%)</title><rect x="831.1" y="467.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="834.1" y="478.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.26%)</title><rect x="831.1" y="451.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="834.1" y="462.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.26%)</title><rect x="831.1" y="435.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="834.1" y="446.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.26%)</title><rect x="831.1" y="419.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="834.1" y="430.0"></text>
</g>
<g>
<title>tcp_prequeue_process (4 samples, 1.03%)</title><rect x="834.2" y="515.0" width="12.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="837.2" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 1.03%)</title><rect x="834.2" y="499.0" width="12.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="837.2" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.77%)</title><rect x="837.2" y="483.0" width="9.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="840.2" y="494.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.26%)</title><rect x="837.2" y="467.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="840.2" y="478.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (2 samples, 0.52%)</title><rect x="840.3" y="467.0" width="6.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="843.3" y="478.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.52%)</title><rect x="840.3" y="451.0" width="6.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="843.3" y="462.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.26%)</title><rect x="843.3" y="435.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="846.3" y="446.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.26%)</title><rect x="843.3" y="419.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="846.3" y="430.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.26%)</title><rect x="846.3" y="643.0" width="3.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="849.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2 samples, 0.52%)</title><rect x="849.4" y="675.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="852.4" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.52%)</title><rect x="849.4" y="659.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="852.4" y="670.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.26%)</title><rect x="852.4" y="643.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.4" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (7 samples, 1.80%)</title><rect x="855.5" y="675.0" width="21.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="858.5" y="686.0">o..</text>
</g>
<g>
<title>__send (7 samples, 1.80%)</title><rect x="855.5" y="659.0" width="21.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="858.5" y="670.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (7 samples, 1.80%)</title><rect x="855.5" y="643.0" width="21.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="858.5" y="654.0">e..</text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.80%)</title><rect x="855.5" y="627.0" width="21.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="858.5" y="638.0">d..</text>
</g>
<g>
<title>sys_setsockopt (7 samples, 1.80%)</title><rect x="855.5" y="611.0" width="21.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="858.5" y="622.0">s..</text>
</g>
<g>
<title>sock_setsockopt (7 samples, 1.80%)</title><rect x="855.5" y="595.0" width="21.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="858.5" y="606.0">s..</text>
</g>
<g>
<title>SYSC_sendto (7 samples, 1.80%)</title><rect x="855.5" y="579.0" width="21.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="858.5" y="590.0">S..</text>
</g>
<g>
<title>sock_sendmsg (7 samples, 1.80%)</title><rect x="855.5" y="563.0" width="21.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="858.5" y="574.0">s..</text>
</g>
<g>
<title>tcp_sendmsg (7 samples, 1.80%)</title><rect x="855.5" y="547.0" width="21.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="858.5" y="558.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (6 samples, 1.55%)</title><rect x="855.5" y="531.0" width="18.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="858.5" y="542.0"></text>
</g>
<g>
<title>copy_from_iter (1 samples, 0.26%)</title><rect x="855.5" y="515.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="858.5" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.26%)</title><rect x="855.5" y="499.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="858.5" y="510.0"></text>
</g>
<g>
<title>tcp_tso_segs (1 samples, 0.26%)</title><rect x="855.5" y="483.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="858.5" y="494.0"></text>
</g>
<g>
<title>tcp_write_xmit (5 samples, 1.29%)</title><rect x="858.5" y="515.0" width="15.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="861.5" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 1.03%)</title><rect x="861.5" y="499.0" width="12.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="864.5" y="510.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 1.03%)</title><rect x="861.5" y="483.0" width="12.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="864.5" y="494.0"></text>
</g>
<g>
<title>__sk_dst_check (4 samples, 1.03%)</title><rect x="861.5" y="467.0" width="12.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="864.5" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 1.03%)</title><rect x="861.5" y="451.0" width="12.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="864.5" y="462.0"></text>
</g>
<g>
<title>ip_output (4 samples, 1.03%)</title><rect x="861.5" y="435.0" width="12.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="864.5" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 1.03%)</title><rect x="861.5" y="419.0" width="12.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="864.5" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 1.03%)</title><rect x="861.5" y="403.0" width="12.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="864.5" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.18 (3 samples, 0.77%)</title><rect x="864.6" y="387.0" width="9.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="867.6" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.77%)</title><rect x="864.6" y="371.0" width="9.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="867.6" y="382.0"></text>
</g>
<g>
<title>__do_softirq (3 samples, 0.77%)</title><rect x="864.6" y="355.0" width="9.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="867.6" y="366.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.77%)</title><rect x="864.6" y="339.0" width="9.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="867.6" y="350.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.77%)</title><rect x="864.6" y="323.0" width="9.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="867.6" y="334.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.26%)</title><rect x="864.6" y="307.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="867.6" y="318.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.26%)</title><rect x="864.6" y="291.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="867.6" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.26%)</title><rect x="864.6" y="275.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="867.6" y="286.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.26%)</title><rect x="864.6" y="259.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="867.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.26%)</title><rect x="864.6" y="243.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="867.6" y="254.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.26%)</title><rect x="864.6" y="227.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="867.6" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.26%)</title><rect x="864.6" y="211.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="867.6" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.26%)</title><rect x="864.6" y="195.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="867.6" y="206.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.26%)</title><rect x="864.6" y="179.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="867.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.26%)</title><rect x="864.6" y="163.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="867.6" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.26%)</title><rect x="864.6" y="147.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="867.6" y="158.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.52%)</title><rect x="867.6" y="307.0" width="6.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="870.6" y="318.0"></text>
</g>
<g>
<title>task_tick_fair (1 samples, 0.26%)</title><rect x="867.6" y="291.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="870.6" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.26%)</title><rect x="867.6" y="275.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="870.6" y="286.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.26%)</title><rect x="867.6" y="259.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="870.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.26%)</title><rect x="867.6" y="243.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="870.6" y="254.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.26%)</title><rect x="867.6" y="227.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="870.6" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.26%)</title><rect x="867.6" y="211.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="870.6" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.26%)</title><rect x="867.6" y="195.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="870.6" y="206.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.26%)</title><rect x="867.6" y="179.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="870.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.26%)</title><rect x="867.6" y="163.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="870.6" y="174.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.26%)</title><rect x="867.6" y="147.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="870.6" y="158.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.26%)</title><rect x="870.7" y="291.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="873.7" y="302.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.26%)</title><rect x="870.7" y="275.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="873.7" y="286.0"></text>
</g>
<g>
<title>task_tick_fair (1 samples, 0.26%)</title><rect x="870.7" y="259.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="873.7" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.26%)</title><rect x="870.7" y="243.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="873.7" y="254.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.26%)</title><rect x="870.7" y="227.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="873.7" y="238.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.26%)</title><rect x="870.7" y="211.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="873.7" y="222.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.26%)</title><rect x="870.7" y="195.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="873.7" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.26%)</title><rect x="870.7" y="179.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="873.7" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.26%)</title><rect x="870.7" y="163.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="873.7" y="174.0"></text>
</g>
<g>
<title>find_busiest_group (1 samples, 0.26%)</title><rect x="870.7" y="147.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="873.7" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.26%)</title><rect x="870.7" y="131.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="873.7" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.26%)</title><rect x="870.7" y="115.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="873.7" y="126.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.26%)</title><rect x="873.7" y="531.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="876.7" y="542.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.26%)</title><rect x="873.7" y="515.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="876.7" y="526.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.26%)</title><rect x="873.7" y="499.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="876.7" y="510.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.26%)</title><rect x="873.7" y="483.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="876.7" y="494.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (1 samples, 0.26%)</title><rect x="873.7" y="467.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="876.7" y="478.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.26%)</title><rect x="876.8" y="675.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="879.8" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.26%)</title><rect x="876.8" y="659.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="879.8" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (1 samples, 0.26%)</title><rect x="876.8" y="643.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="879.8" y="654.0"></text>
</g>
<g>
<title>[worker tid=24779] (17 samples, 4.38%)</title><rect x="879.8" y="851.0" width="51.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="882.8" y="862.0">[work..</text>
</g>
<g>
<title>java/lang/Thread.run (17 samples, 4.38%)</title><rect x="879.8" y="835.0" width="51.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="882.8" y="846.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17 samples, 4.38%)</title><rect x="879.8" y="819.0" width="51.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="882.8" y="830.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17 samples, 4.38%)</title><rect x="879.8" y="803.0" width="51.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="882.8" y="814.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.77%)</title><rect x="879.8" y="787.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="882.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3 samples, 0.77%)</title><rect x="879.8" y="771.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="882.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.77%)</title><rect x="879.8" y="755.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="882.8" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.26%)</title><rect x="879.8" y="739.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="882.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.52%)</title><rect x="882.8" y="739.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="885.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.52%)</title><rect x="882.8" y="723.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="885.8" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.52%)</title><rect x="882.8" y="707.0" width="6.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="885.8" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.26%)</title><rect x="885.9" y="691.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="888.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (14 samples, 3.61%)</title><rect x="888.9" y="787.0" width="42.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="891.9" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (14 samples, 3.61%)</title><rect x="888.9" y="771.0" width="42.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="891.9" y="782.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 1.29%)</title><rect x="888.9" y="755.0" width="15.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="891.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 1.29%)</title><rect x="888.9" y="739.0" width="15.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.26%)</title><rect x="888.9" y="723.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="891.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.26%)</title><rect x="888.9" y="707.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="891.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.26%)</title><rect x="888.9" y="691.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.26%)</title><rect x="888.9" y="675.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.9" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 1.03%)</title><rect x="892.0" y="723.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="895.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 1.03%)</title><rect x="892.0" y="707.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="895.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (4 samples, 1.03%)</title><rect x="892.0" y="691.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="895.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 1.03%)</title><rect x="892.0" y="675.0" width="12.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="895.0" y="686.0"></text>
</g>
<g>
<title>__send (4 samples, 1.03%)</title><rect x="892.0" y="659.0" width="12.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="895.0" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (4 samples, 1.03%)</title><rect x="892.0" y="643.0" width="12.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="895.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.03%)</title><rect x="892.0" y="627.0" width="12.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="895.0" y="638.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.26%)</title><rect x="892.0" y="611.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="895.0" y="622.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.26%)</title><rect x="892.0" y="595.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="895.0" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.26%)</title><rect x="892.0" y="579.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="895.0" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.26%)</title><rect x="892.0" y="563.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="895.0" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.26%)</title><rect x="892.0" y="547.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="895.0" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.26%)</title><rect x="892.0" y="531.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="895.0" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.26%)</title><rect x="892.0" y="515.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="895.0" y="526.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.26%)</title><rect x="892.0" y="499.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="895.0" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.26%)</title><rect x="892.0" y="483.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="895.0" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.26%)</title><rect x="892.0" y="467.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="895.0" y="478.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.26%)</title><rect x="892.0" y="451.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="895.0" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.26%)</title><rect x="892.0" y="435.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="895.0" y="446.0"></text>
</g>
<g>
<title>__switch_to_asm (1 samples, 0.26%)</title><rect x="892.0" y="419.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="895.0" y="430.0"></text>
</g>
<g>
<title>__perf_event_task_sched_in (1 samples, 0.26%)</title><rect x="892.0" y="403.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="895.0" y="414.0"></text>
</g>
<g>
<title>perf_pmu_nop_void (1 samples, 0.26%)</title><rect x="892.0" y="387.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="895.0" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.26%)</title><rect x="892.0" y="371.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="895.0" y="382.0"></text>
</g>
<g>
<title>sys_rt_sigreturn (3 samples, 0.77%)</title><rect x="895.0" y="611.0" width="9.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="898.0" y="622.0"></text>
</g>
<g>
<title>restore_altstack (3 samples, 0.77%)</title><rect x="895.0" y="595.0" width="9.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="898.0" y="606.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.77%)</title><rect x="895.0" y="579.0" width="9.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="898.0" y="590.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.26%)</title><rect x="895.0" y="563.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="898.0" y="574.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.26%)</title><rect x="895.0" y="547.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="898.0" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.26%)</title><rect x="895.0" y="531.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="898.0" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.26%)</title><rect x="895.0" y="515.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="898.0" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.26%)</title><rect x="895.0" y="499.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="898.0" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.26%)</title><rect x="895.0" y="483.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="898.0" y="494.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.26%)</title><rect x="895.0" y="467.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="898.0" y="478.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.26%)</title><rect x="895.0" y="451.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="898.0" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.26%)</title><rect x="895.0" y="435.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="898.0" y="446.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.26%)</title><rect x="895.0" y="419.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="898.0" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.26%)</title><rect x="895.0" y="403.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="898.0" y="414.0"></text>
</g>
<g>
<title>__switch_to_asm (1 samples, 0.26%)</title><rect x="895.0" y="387.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="898.0" y="398.0"></text>
</g>
<g>
<title>__perf_event_task_sched_in (1 samples, 0.26%)</title><rect x="895.0" y="371.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="898.0" y="382.0"></text>
</g>
<g>
<title>perf_pmu_nop_void (1 samples, 0.26%)</title><rect x="895.0" y="355.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="898.0" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.26%)</title><rect x="895.0" y="339.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="898.0" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.26%)</title><rect x="895.0" y="323.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="898.0" y="334.0"></text>
</g>
<g>
<title>do_vfs_ioctl (2 samples, 0.52%)</title><rect x="898.0" y="563.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="901.0" y="574.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.52%)</title><rect x="898.0" y="547.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="901.0" y="558.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.52%)</title><rect x="898.0" y="531.0" width="6.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="901.0" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.52%)</title><rect x="898.0" y="515.0" width="6.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="901.0" y="526.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.26%)</title><rect x="898.0" y="499.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="901.0" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.26%)</title><rect x="898.0" y="483.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="901.0" y="494.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.26%)</title><rect x="898.0" y="467.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="901.0" y="478.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.26%)</title><rect x="898.0" y="451.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="901.0" y="462.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.26%)</title><rect x="898.0" y="435.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="901.0" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.26%)</title><rect x="898.0" y="419.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="901.0" y="430.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.26%)</title><rect x="898.0" y="403.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="901.0" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.26%)</title><rect x="898.0" y="387.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="901.0" y="398.0"></text>
</g>
<g>
<title>__switch_to_asm (1 samples, 0.26%)</title><rect x="898.0" y="371.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="901.0" y="382.0"></text>
</g>
<g>
<title>__perf_event_task_sched_in (1 samples, 0.26%)</title><rect x="898.0" y="355.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="901.0" y="366.0"></text>
</g>
<g>
<title>perf_pmu_nop_void (1 samples, 0.26%)</title><rect x="898.0" y="339.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="901.0" y="350.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.26%)</title><rect x="898.0" y="323.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="901.0" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.26%)</title><rect x="898.0" y="307.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="901.0" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.26%)</title><rect x="898.0" y="291.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="901.0" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.26%)</title><rect x="898.0" y="275.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="901.0" y="286.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.26%)</title><rect x="898.0" y="259.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="901.0" y="270.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.26%)</title><rect x="901.1" y="499.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="904.1" y="510.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.26%)</title><rect x="901.1" y="483.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="904.1" y="494.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.26%)</title><rect x="901.1" y="467.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="904.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (9 samples, 2.32%)</title><rect x="904.1" y="755.0" width="27.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="907.1" y="766.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (9 samples, 2.32%)</title><rect x="904.1" y="739.0" width="27.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="907.1" y="750.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (9 samples, 2.32%)</title><rect x="904.1" y="723.0" width="27.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="907.1" y="734.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (9 samples, 2.32%)</title><rect x="904.1" y="707.0" width="27.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="907.1" y="718.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (9 samples, 2.32%)</title><rect x="904.1" y="691.0" width="27.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="907.1" y="702.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (9 samples, 2.32%)</title><rect x="904.1" y="675.0" width="27.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="907.1" y="686.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (5 samples, 1.29%)</title><rect x="904.1" y="659.0" width="15.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="907.1" y="670.0"></text>
</g>
<g>
<title>_init (1 samples, 0.26%)</title><rect x="904.1" y="643.0" width="3.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="907.1" y="654.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (4 samples, 1.03%)</title><rect x="907.2" y="643.0" width="12.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="910.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (4 samples, 1.03%)</title><rect x="907.2" y="627.0" width="12.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="910.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (4 samples, 1.03%)</title><rect x="907.2" y="611.0" width="12.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="910.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (4 samples, 1.03%)</title><rect x="907.2" y="595.0" width="12.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="910.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (4 samples, 1.03%)</title><rect x="907.2" y="579.0" width="12.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="910.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (4 samples, 1.03%)</title><rect x="907.2" y="563.0" width="12.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="910.2" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (4 samples, 1.03%)</title><rect x="907.2" y="547.0" width="12.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="910.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (4 samples, 1.03%)</title><rect x="907.2" y="531.0" width="12.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="910.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 1.03%)</title><rect x="907.2" y="515.0" width="12.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="910.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 1.03%)</title><rect x="907.2" y="499.0" width="12.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="910.2" y="510.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.52%)</title><rect x="907.2" y="483.0" width="6.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="910.2" y="494.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.52%)</title><rect x="907.2" y="467.0" width="6.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="910.2" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="907.2" y="451.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="910.2" y="462.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.26%)</title><rect x="910.2" y="451.0" width="3.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="913.2" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.26%)</title><rect x="913.2" y="483.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="916.2" y="494.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.26%)</title><rect x="913.2" y="467.0" width="3.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="916.2" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.26%)</title><rect x="913.2" y="451.0" width="3.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="916.2" y="462.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.26%)</title><rect x="913.2" y="435.0" width="3.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="916.2" y="446.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.26%)</title><rect x="916.3" y="483.0" width="3.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="919.3" y="494.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.26%)</title><rect x="916.3" y="467.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="919.3" y="478.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 1.03%)</title><rect x="919.3" y="659.0" width="12.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="922.3" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (4 samples, 1.03%)</title><rect x="919.3" y="643.0" width="12.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="922.3" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (4 samples, 1.03%)</title><rect x="919.3" y="627.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="922.3" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 1.03%)</title><rect x="919.3" y="611.0" width="12.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="922.3" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 1.03%)</title><rect x="919.3" y="595.0" width="12.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="922.3" y="606.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (4 samples, 1.03%)</title><rect x="919.3" y="579.0" width="12.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="922.3" y="590.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.26%)</title><rect x="919.3" y="563.0" width="3.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="922.3" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.26%)</title><rect x="919.3" y="547.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="922.3" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.26%)</title><rect x="919.3" y="531.0" width="3.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="922.3" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.26%)</title><rect x="919.3" y="515.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="922.3" y="526.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.26%)</title><rect x="919.3" y="499.0" width="3.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="922.3" y="510.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.26%)</title><rect x="919.3" y="483.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="922.3" y="494.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.26%)</title><rect x="919.3" y="467.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="922.3" y="478.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.26%)</title><rect x="919.3" y="451.0" width="3.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="922.3" y="462.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.26%)</title><rect x="919.3" y="435.0" width="3.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="922.3" y="446.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.77%)</title><rect x="922.4" y="563.0" width="9.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="925.4" y="574.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.26%)</title><rect x="922.4" y="547.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="925.4" y="558.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.26%)</title><rect x="925.4" y="547.0" width="3.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="928.4" y="558.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.26%)</title><rect x="928.5" y="547.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="931.5" y="558.0"></text>
</g>
<g>
<title>[worker tid=24780] (17 samples, 4.38%)</title><rect x="931.5" y="851.0" width="51.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="934.5" y="862.0">[work..</text>
</g>
<g>
<title>java/lang/Thread.run (17 samples, 4.38%)</title><rect x="931.5" y="835.0" width="51.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="934.5" y="846.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17 samples, 4.38%)</title><rect x="931.5" y="819.0" width="51.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="934.5" y="830.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17 samples, 4.38%)</title><rect x="931.5" y="803.0" width="51.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="934.5" y="814.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 1.03%)</title><rect x="931.5" y="787.0" width="12.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="934.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (4 samples, 1.03%)</title><rect x="931.5" y="771.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="934.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 1.03%)</title><rect x="931.5" y="755.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="934.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 1.03%)</title><rect x="931.5" y="739.0" width="12.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="934.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 1.03%)</title><rect x="931.5" y="723.0" width="12.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="934.5" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 1.03%)</title><rect x="931.5" y="707.0" width="12.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="934.5" y="718.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.26%)</title><rect x="931.5" y="691.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="934.5" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.26%)</title><rect x="931.5" y="675.0" width="3.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="934.5" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.26%)</title><rect x="934.5" y="691.0" width="3.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="937.5" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.26%)</title><rect x="937.6" y="691.0" width="3.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="940.6" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.26%)</title><rect x="937.6" y="675.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="940.6" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="937.6" y="659.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="940.6" y="670.0"></text>
</g>
<g>
<title>sys_rt_sigreturn (1 samples, 0.26%)</title><rect x="937.6" y="643.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="940.6" y="654.0"></text>
</g>
<g>
<title>restore_altstack (1 samples, 0.26%)</title><rect x="937.6" y="627.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="940.6" y="638.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.26%)</title><rect x="937.6" y="611.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="940.6" y="622.0"></text>
</g>
<g>
<title>do_vfs_ioctl (1 samples, 0.26%)</title><rect x="937.6" y="595.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="940.6" y="606.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.26%)</title><rect x="937.6" y="579.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="940.6" y="590.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.26%)</title><rect x="937.6" y="563.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="940.6" y="574.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.26%)</title><rect x="937.6" y="547.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="940.6" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.26%)</title><rect x="937.6" y="531.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="940.6" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.26%)</title><rect x="937.6" y="515.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="940.6" y="526.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.26%)</title><rect x="937.6" y="499.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="940.6" y="510.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.26%)</title><rect x="937.6" y="483.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="940.6" y="494.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.26%)</title><rect x="940.6" y="691.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="943.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (13 samples, 3.35%)</title><rect x="943.7" y="787.0" width="39.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="946.7" y="798.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (13 samples, 3.35%)</title><rect x="943.7" y="771.0" width="39.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="946.7" y="782.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.77%)</title><rect x="943.7" y="755.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="946.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.52%)</title><rect x="943.7" y="739.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="946.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.52%)</title><rect x="943.7" y="723.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="946.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.52%)</title><rect x="943.7" y="707.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="946.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.52%)</title><rect x="943.7" y="691.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="946.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.52%)</title><rect x="943.7" y="675.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="946.7" y="686.0"></text>
</g>
<g>
<title>__send (2 samples, 0.52%)</title><rect x="943.7" y="659.0" width="6.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="946.7" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.52%)</title><rect x="943.7" y="643.0" width="6.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="946.7" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.52%)</title><rect x="943.7" y="627.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="946.7" y="638.0"></text>
</g>
<g>
<title>sys_rt_sigreturn (2 samples, 0.52%)</title><rect x="943.7" y="611.0" width="6.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="946.7" y="622.0"></text>
</g>
<g>
<title>restore_altstack (2 samples, 0.52%)</title><rect x="943.7" y="595.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="946.7" y="606.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.52%)</title><rect x="943.7" y="579.0" width="6.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="946.7" y="590.0"></text>
</g>
<g>
<title>do_vfs_ioctl (2 samples, 0.52%)</title><rect x="943.7" y="563.0" width="6.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="946.7" y="574.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.52%)</title><rect x="943.7" y="547.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="946.7" y="558.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.52%)</title><rect x="943.7" y="531.0" width="6.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="946.7" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.52%)</title><rect x="943.7" y="515.0" width="6.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="946.7" y="526.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.52%)</title><rect x="943.7" y="499.0" width="6.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="946.7" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.52%)</title><rect x="943.7" y="483.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="946.7" y="494.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.52%)</title><rect x="943.7" y="467.0" width="6.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="946.7" y="478.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.52%)</title><rect x="943.7" y="451.0" width="6.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="946.7" y="462.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.52%)</title><rect x="943.7" y="435.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="946.7" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.52%)</title><rect x="943.7" y="419.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="946.7" y="430.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.52%)</title><rect x="943.7" y="403.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="946.7" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.52%)</title><rect x="943.7" y="387.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="946.7" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.52%)</title><rect x="943.7" y="371.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="946.7" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.18 (2 samples, 0.52%)</title><rect x="943.7" y="355.0" width="6.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="946.7" y="366.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.52%)</title><rect x="943.7" y="339.0" width="6.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="946.7" y="350.0"></text>
</g>
<g>
<title>__do_softirq (2 samples, 0.52%)</title><rect x="943.7" y="323.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="946.7" y="334.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.26%)</title><rect x="946.7" y="307.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="949.7" y="318.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.26%)</title><rect x="946.7" y="291.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="949.7" y="302.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.26%)</title><rect x="946.7" y="275.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="949.7" y="286.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.26%)</title><rect x="946.7" y="259.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="949.7" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.26%)</title><rect x="946.7" y="243.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="949.7" y="254.0"></text>
</g>
<g>
<title>do_send_sig_info (1 samples, 0.26%)</title><rect x="946.7" y="227.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="949.7" y="238.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.26%)</title><rect x="946.7" y="211.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="949.7" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.26%)</title><rect x="946.7" y="195.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="949.7" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.26%)</title><rect x="946.7" y="179.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="949.7" y="190.0"></text>
</g>
<g>
<title>hw_breakpoint_exceptions_notify (1 samples, 0.26%)</title><rect x="946.7" y="163.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="949.7" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.26%)</title><rect x="946.7" y="147.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="949.7" y="158.0"></text>
</g>
<g>
<title>tcp_prequeue (1 samples, 0.26%)</title><rect x="946.7" y="131.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="949.7" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.26%)</title><rect x="946.7" y="115.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="949.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.26%)</title><rect x="949.7" y="739.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="952.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.26%)</title><rect x="949.7" y="723.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.26%)</title><rect x="949.7" y="707.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="952.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (10 samples, 2.58%)</title><rect x="952.8" y="755.0" width="30.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="955.8" y="766.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (10 samples, 2.58%)</title><rect x="952.8" y="739.0" width="30.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="955.8" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (10 samples, 2.58%)</title><rect x="952.8" y="723.0" width="30.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="955.8" y="734.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (10 samples, 2.58%)</title><rect x="952.8" y="707.0" width="30.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="955.8" y="718.0">ru..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (10 samples, 2.58%)</title><rect x="952.8" y="691.0" width="30.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="955.8" y="702.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (10 samples, 2.58%)</title><rect x="952.8" y="675.0" width="30.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="955.8" y="686.0">or..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (6 samples, 1.55%)</title><rect x="952.8" y="659.0" width="18.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="955.8" y="670.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (6 samples, 1.55%)</title><rect x="952.8" y="643.0" width="18.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="955.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (6 samples, 1.55%)</title><rect x="952.8" y="627.0" width="18.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="955.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (6 samples, 1.55%)</title><rect x="952.8" y="611.0" width="18.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="955.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (6 samples, 1.55%)</title><rect x="952.8" y="595.0" width="18.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="955.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (5 samples, 1.29%)</title><rect x="952.8" y="579.0" width="15.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="955.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (5 samples, 1.29%)</title><rect x="952.8" y="563.0" width="15.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="955.8" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (5 samples, 1.29%)</title><rect x="952.8" y="547.0" width="15.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="955.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (5 samples, 1.29%)</title><rect x="952.8" y="531.0" width="15.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="955.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 1.29%)</title><rect x="952.8" y="515.0" width="15.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="955.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 1.29%)</title><rect x="952.8" y="499.0" width="15.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="955.8" y="510.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (4 samples, 1.03%)</title><rect x="952.8" y="483.0" width="12.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="955.8" y="494.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (4 samples, 1.03%)</title><rect x="952.8" y="467.0" width="12.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="955.8" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (2 samples, 0.52%)</title><rect x="952.8" y="451.0" width="6.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="955.8" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="958.9" y="451.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="961.9" y="462.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.26%)</title><rect x="961.9" y="451.0" width="3.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="964.9" y="462.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.26%)</title><rect x="964.9" y="483.0" width="3.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="967.9" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="964.9" y="467.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="967.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (1 samples, 0.26%)</title><rect x="968.0" y="579.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="971.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.26%)</title><rect x="971.0" y="659.0" width="3.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="974.0" y="670.0"></text>
</g>
<g>
<title>_int_free (1 samples, 0.26%)</title><rect x="971.0" y="643.0" width="3.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="974.0" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.26%)</title><rect x="974.1" y="659.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="977.1" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (2 samples, 0.52%)</title><rect x="977.1" y="659.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="980.1" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (2 samples, 0.52%)</title><rect x="977.1" y="643.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="980.1" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (2 samples, 0.52%)</title><rect x="977.1" y="627.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="980.1" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.52%)</title><rect x="977.1" y="611.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="980.1" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.52%)</title><rect x="977.1" y="595.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="980.1" y="606.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (2 samples, 0.52%)</title><rect x="977.1" y="579.0" width="6.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="980.1" y="590.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.52%)</title><rect x="977.1" y="563.0" width="6.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="980.1" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.26%)</title><rect x="980.2" y="547.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="983.2" y="558.0"></text>
</g>
<g>
<title>[worker tid=24781] (17 samples, 4.38%)</title><rect x="983.2" y="851.0" width="51.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="986.2" y="862.0">[work..</text>
</g>
<g>
<title>java/lang/Thread.run (17 samples, 4.38%)</title><rect x="983.2" y="835.0" width="51.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="986.2" y="846.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17 samples, 4.38%)</title><rect x="983.2" y="819.0" width="51.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="986.2" y="830.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17 samples, 4.38%)</title><rect x="983.2" y="803.0" width="51.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="986.2" y="814.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (17 samples, 4.38%)</title><rect x="983.2" y="787.0" width="51.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="986.2" y="798.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (17 samples, 4.38%)</title><rect x="983.2" y="771.0" width="51.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="986.2" y="782.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.52%)</title><rect x="983.2" y="755.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="986.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.52%)</title><rect x="983.2" y="739.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="986.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.52%)</title><rect x="983.2" y="723.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="986.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.52%)</title><rect x="983.2" y="707.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="986.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.52%)</title><rect x="983.2" y="691.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="986.2" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.52%)</title><rect x="983.2" y="675.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="986.2" y="686.0"></text>
</g>
<g>
<title>__send (2 samples, 0.52%)</title><rect x="983.2" y="659.0" width="6.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="986.2" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.52%)</title><rect x="983.2" y="643.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="986.2" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.52%)</title><rect x="983.2" y="627.0" width="6.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="986.2" y="638.0"></text>
</g>
<g>
<title>sys_rt_sigreturn (2 samples, 0.52%)</title><rect x="983.2" y="611.0" width="6.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="986.2" y="622.0"></text>
</g>
<g>
<title>restore_altstack (2 samples, 0.52%)</title><rect x="983.2" y="595.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="986.2" y="606.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.52%)</title><rect x="983.2" y="579.0" width="6.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="986.2" y="590.0"></text>
</g>
<g>
<title>do_vfs_ioctl (2 samples, 0.52%)</title><rect x="983.2" y="563.0" width="6.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="986.2" y="574.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.52%)</title><rect x="983.2" y="547.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="986.2" y="558.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.26%)</title><rect x="986.2" y="531.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="989.2" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.26%)</title><rect x="986.2" y="515.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="989.2" y="526.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.26%)</title><rect x="986.2" y="499.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="989.2" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.26%)</title><rect x="986.2" y="483.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="989.2" y="494.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.26%)</title><rect x="986.2" y="467.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="989.2" y="478.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.26%)</title><rect x="986.2" y="451.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="989.2" y="462.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.26%)</title><rect x="986.2" y="435.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="989.2" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.26%)</title><rect x="986.2" y="419.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="989.2" y="430.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.26%)</title><rect x="986.2" y="403.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="989.2" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.26%)</title><rect x="986.2" y="387.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="989.2" y="398.0"></text>
</g>
<g>
<title>__switch_to_asm (1 samples, 0.26%)</title><rect x="986.2" y="371.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="989.2" y="382.0"></text>
</g>
<g>
<title>__perf_event_task_sched_in (1 samples, 0.26%)</title><rect x="986.2" y="355.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="989.2" y="366.0"></text>
</g>
<g>
<title>perf_pmu_nop_void (1 samples, 0.26%)</title><rect x="986.2" y="339.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="989.2" y="350.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.26%)</title><rect x="986.2" y="323.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="989.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (15 samples, 3.87%)</title><rect x="989.3" y="755.0" width="45.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="992.3" y="766.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (15 samples, 3.87%)</title><rect x="989.3" y="739.0" width="45.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="992.3" y="750.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (15 samples, 3.87%)</title><rect x="989.3" y="723.0" width="45.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="992.3" y="734.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (15 samples, 3.87%)</title><rect x="989.3" y="707.0" width="45.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="992.3" y="718.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (15 samples, 3.87%)</title><rect x="989.3" y="691.0" width="45.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="992.3" y="702.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (15 samples, 3.87%)</title><rect x="989.3" y="675.0" width="45.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="992.3" y="686.0">org/..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.26%)</title><rect x="989.3" y="659.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="992.3" y="670.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (10 samples, 2.58%)</title><rect x="992.3" y="659.0" width="30.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="995.3" y="670.0">Ja..</text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (10 samples, 2.58%)</title><rect x="992.3" y="643.0" width="30.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="995.3" y="654.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (10 samples, 2.58%)</title><rect x="992.3" y="627.0" width="30.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="995.3" y="638.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (10 samples, 2.58%)</title><rect x="992.3" y="611.0" width="30.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="995.3" y="622.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (9 samples, 2.32%)</title><rect x="992.3" y="595.0" width="27.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="995.3" y="606.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (8 samples, 2.06%)</title><rect x="992.3" y="579.0" width="24.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="995.3" y="590.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.26%)</title><rect x="992.3" y="563.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="995.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.26%)</title><rect x="992.3" y="547.0" width="3.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="995.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.26%)</title><rect x="992.3" y="531.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="995.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (7 samples, 1.80%)</title><rect x="995.4" y="563.0" width="21.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="998.4" y="574.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (7 samples, 1.80%)</title><rect x="995.4" y="547.0" width="21.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="998.4" y="558.0">/..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (7 samples, 1.80%)</title><rect x="995.4" y="531.0" width="21.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="998.4" y="542.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 1.80%)</title><rect x="995.4" y="515.0" width="21.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="998.4" y="526.0">r..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (7 samples, 1.80%)</title><rect x="995.4" y="499.0" width="21.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="998.4" y="510.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (7 samples, 1.80%)</title><rect x="995.4" y="483.0" width="21.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="998.4" y="494.0">J..</text>
</g>
<g>
<title>jni_CallVoidMethodV (7 samples, 1.80%)</title><rect x="995.4" y="467.0" width="21.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="998.4" y="478.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.52%)</title><rect x="995.4" y="451.0" width="6.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="998.4" y="462.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (5 samples, 1.29%)</title><rect x="1001.4" y="451.0" width="15.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1004.4" y="462.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.77%)</title><rect x="1007.5" y="435.0" width="9.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1010.5" y="446.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.26%)</title><rect x="1013.6" y="419.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1016.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (1 samples, 0.26%)</title><rect x="1016.6" y="579.0" width="3.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1019.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.26%)</title><rect x="1019.7" y="595.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1022.7" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.26%)</title><rect x="1022.7" y="659.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1025.7" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (2 samples, 0.52%)</title><rect x="1025.8" y="659.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1028.8" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (2 samples, 0.52%)</title><rect x="1025.8" y="643.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1028.8" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (2 samples, 0.52%)</title><rect x="1025.8" y="627.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1028.8" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.52%)</title><rect x="1025.8" y="611.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1028.8" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.52%)</title><rect x="1025.8" y="595.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1028.8" y="606.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (2 samples, 0.52%)</title><rect x="1025.8" y="579.0" width="6.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1028.8" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.52%)</title><rect x="1025.8" y="563.0" width="6.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1028.8" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="1028.8" y="547.0" width="3.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1031.8" y="558.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.26%)</title><rect x="1031.9" y="659.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1034.9" y="670.0"></text>
</g>
<g>
<title>[worker tid=24782] (17 samples, 4.38%)</title><rect x="1034.9" y="851.0" width="51.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1037.9" y="862.0">[work..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (1 samples, 0.26%)</title><rect x="1034.9" y="835.0" width="3.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1037.9" y="846.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.26%)</title><rect x="1034.9" y="819.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1037.9" y="830.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.26%)</title><rect x="1034.9" y="803.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1037.9" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.26%)</title><rect x="1034.9" y="787.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1037.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.26%)</title><rect x="1034.9" y="771.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1037.9" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.26%)</title><rect x="1034.9" y="755.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1037.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.26%)</title><rect x="1034.9" y="739.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1037.9" y="750.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (1 samples, 0.26%)</title><rect x="1034.9" y="723.0" width="3.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1037.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.26%)</title><rect x="1034.9" y="707.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1037.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.26%)</title><rect x="1034.9" y="691.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1037.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.26%)</title><rect x="1034.9" y="675.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1037.9" y="686.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.26%)</title><rect x="1034.9" y="659.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1037.9" y="670.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.26%)</title><rect x="1034.9" y="643.0" width="3.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1037.9" y="654.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.26%)</title><rect x="1034.9" y="627.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1037.9" y="638.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.26%)</title><rect x="1034.9" y="611.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1037.9" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.run (16 samples, 4.12%)</title><rect x="1037.9" y="835.0" width="48.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.9" y="846.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (16 samples, 4.12%)</title><rect x="1037.9" y="819.0" width="48.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.9" y="830.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (16 samples, 4.12%)</title><rect x="1037.9" y="803.0" width="48.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1040.9" y="814.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.52%)</title><rect x="1037.9" y="787.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1040.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.52%)</title><rect x="1037.9" y="771.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1040.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.52%)</title><rect x="1037.9" y="755.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1040.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.52%)</title><rect x="1037.9" y="739.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1040.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.52%)</title><rect x="1037.9" y="723.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1040.9" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.52%)</title><rect x="1037.9" y="707.0" width="6.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1040.9" y="718.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.26%)</title><rect x="1037.9" y="691.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1040.9" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.26%)</title><rect x="1037.9" y="675.0" width="3.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1040.9" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.26%)</title><rect x="1041.0" y="691.0" width="3.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1044.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.26%)</title><rect x="1041.0" y="675.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1044.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="1041.0" y="659.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1044.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (14 samples, 3.61%)</title><rect x="1044.0" y="787.0" width="42.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1047.0" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (14 samples, 3.61%)</title><rect x="1044.0" y="771.0" width="42.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1047.0" y="782.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.52%)</title><rect x="1044.0" y="755.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1047.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.52%)</title><rect x="1044.0" y="739.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1047.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.52%)</title><rect x="1044.0" y="723.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1047.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.52%)</title><rect x="1044.0" y="707.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1047.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.52%)</title><rect x="1044.0" y="691.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1047.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.52%)</title><rect x="1044.0" y="675.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1047.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.26%)</title><rect x="1044.0" y="659.0" width="3.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1047.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.26%)</title><rect x="1044.0" y="643.0" width="3.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1047.0" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.26%)</title><rect x="1044.0" y="627.0" width="3.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1047.0" y="638.0"></text>
</g>
<g>
<title>__send (1 samples, 0.26%)</title><rect x="1047.1" y="659.0" width="3.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1050.1" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.26%)</title><rect x="1047.1" y="643.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1050.1" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="1047.1" y="627.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1050.1" y="638.0"></text>
</g>
<g>
<title>sys_rt_sigreturn (1 samples, 0.26%)</title><rect x="1047.1" y="611.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1050.1" y="622.0"></text>
</g>
<g>
<title>restore_altstack (1 samples, 0.26%)</title><rect x="1047.1" y="595.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1050.1" y="606.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.26%)</title><rect x="1047.1" y="579.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1050.1" y="590.0"></text>
</g>
<g>
<title>do_vfs_ioctl (1 samples, 0.26%)</title><rect x="1047.1" y="563.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1050.1" y="574.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.26%)</title><rect x="1047.1" y="547.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1050.1" y="558.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.26%)</title><rect x="1047.1" y="531.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1050.1" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.26%)</title><rect x="1047.1" y="515.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1050.1" y="526.0"></text>
</g>
<g>
<title>copy_from_iter (1 samples, 0.26%)</title><rect x="1047.1" y="499.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1050.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (12 samples, 3.09%)</title><rect x="1050.1" y="755.0" width="36.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1053.1" y="766.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (12 samples, 3.09%)</title><rect x="1050.1" y="739.0" width="36.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1053.1" y="750.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (12 samples, 3.09%)</title><rect x="1050.1" y="723.0" width="36.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1053.1" y="734.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (12 samples, 3.09%)</title><rect x="1050.1" y="707.0" width="36.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1053.1" y="718.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (12 samples, 3.09%)</title><rect x="1050.1" y="691.0" width="36.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1053.1" y="702.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (12 samples, 3.09%)</title><rect x="1050.1" y="675.0" width="36.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1053.1" y="686.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (8 samples, 2.06%)</title><rect x="1050.1" y="659.0" width="24.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1053.1" y="670.0">J..</text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.26%)</title><rect x="1050.1" y="643.0" width="3.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1053.1" y="654.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (7 samples, 1.80%)</title><rect x="1053.1" y="643.0" width="21.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1056.1" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (7 samples, 1.80%)</title><rect x="1053.1" y="627.0" width="21.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1056.1" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (7 samples, 1.80%)</title><rect x="1053.1" y="611.0" width="21.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1056.1" y="622.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (7 samples, 1.80%)</title><rect x="1053.1" y="595.0" width="21.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1056.1" y="606.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.26%)</title><rect x="1053.1" y="579.0" width="3.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1056.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (6 samples, 1.55%)</title><rect x="1056.2" y="579.0" width="18.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1059.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (6 samples, 1.55%)</title><rect x="1056.2" y="563.0" width="18.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1059.2" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (6 samples, 1.55%)</title><rect x="1056.2" y="547.0" width="18.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1059.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (6 samples, 1.55%)</title><rect x="1056.2" y="531.0" width="18.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1059.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 1.55%)</title><rect x="1056.2" y="515.0" width="18.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1059.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (6 samples, 1.55%)</title><rect x="1056.2" y="499.0" width="18.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1059.2" y="510.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.26%)</title><rect x="1056.2" y="483.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1059.2" y="494.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.26%)</title><rect x="1056.2" y="467.0" width="3.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1059.2" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.26%)</title><rect x="1056.2" y="451.0" width="3.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1059.2" y="462.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.26%)</title><rect x="1056.2" y="435.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1059.2" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.77%)</title><rect x="1059.2" y="483.0" width="9.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1062.2" y="494.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (3 samples, 0.77%)</title><rect x="1059.2" y="467.0" width="9.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1062.2" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="1059.2" y="451.0" width="3.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1062.2" y="462.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.52%)</title><rect x="1062.3" y="451.0" width="6.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1065.3" y="462.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.26%)</title><rect x="1062.3" y="435.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1065.3" y="446.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.26%)</title><rect x="1062.3" y="419.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1065.3" y="430.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.26%)</title><rect x="1065.3" y="435.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1068.3" y="446.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.52%)</title><rect x="1068.4" y="483.0" width="6.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1071.4" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="1071.4" y="467.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1074.4" y="478.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.26%)</title><rect x="1074.4" y="659.0" width="3.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1077.4" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.26%)</title><rect x="1077.5" y="659.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1080.5" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (2 samples, 0.52%)</title><rect x="1080.5" y="659.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1083.5" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (2 samples, 0.52%)</title><rect x="1080.5" y="643.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1083.5" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (2 samples, 0.52%)</title><rect x="1080.5" y="627.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1083.5" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.52%)</title><rect x="1080.5" y="611.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1083.5" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.52%)</title><rect x="1080.5" y="595.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1083.5" y="606.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (2 samples, 0.52%)</title><rect x="1080.5" y="579.0" width="6.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1083.5" y="590.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.26%)</title><rect x="1083.6" y="563.0" width="3.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1086.6" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.26%)</title><rect x="1083.6" y="547.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1086.6" y="558.0"></text>
</g>
<g>
<title>[worker tid=24783] (17 samples, 4.38%)</title><rect x="1086.6" y="851.0" width="51.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1089.6" y="862.0">[work..</text>
</g>
<g>
<title>java/lang/Thread.run (17 samples, 4.38%)</title><rect x="1086.6" y="835.0" width="51.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.6" y="846.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17 samples, 4.38%)</title><rect x="1086.6" y="819.0" width="51.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1089.6" y="830.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17 samples, 4.38%)</title><rect x="1086.6" y="803.0" width="51.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.6" y="814.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.77%)</title><rect x="1086.6" y="787.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1089.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3 samples, 0.77%)</title><rect x="1086.6" y="771.0" width="9.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.77%)</title><rect x="1086.6" y="755.0" width="9.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.77%)</title><rect x="1086.6" y="739.0" width="9.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.77%)</title><rect x="1086.6" y="723.0" width="9.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1089.6" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.77%)</title><rect x="1086.6" y="707.0" width="9.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1089.6" y="718.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.52%)</title><rect x="1086.6" y="691.0" width="6.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1089.6" y="702.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.26%)</title><rect x="1089.6" y="675.0" width="3.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1092.6" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.26%)</title><rect x="1092.7" y="691.0" width="3.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1095.7" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.26%)</title><rect x="1092.7" y="675.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1095.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="1092.7" y="659.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1095.7" y="670.0"></text>
</g>
<g>
<title>sys_rt_sigreturn (1 samples, 0.26%)</title><rect x="1092.7" y="643.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1095.7" y="654.0"></text>
</g>
<g>
<title>restore_altstack (1 samples, 0.26%)</title><rect x="1092.7" y="627.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1095.7" y="638.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.26%)</title><rect x="1092.7" y="611.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1095.7" y="622.0"></text>
</g>
<g>
<title>do_vfs_ioctl (1 samples, 0.26%)</title><rect x="1092.7" y="595.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1095.7" y="606.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.26%)</title><rect x="1092.7" y="579.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1095.7" y="590.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.26%)</title><rect x="1092.7" y="563.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1095.7" y="574.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.26%)</title><rect x="1092.7" y="547.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1095.7" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.26%)</title><rect x="1092.7" y="531.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1095.7" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.26%)</title><rect x="1092.7" y="515.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1095.7" y="526.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.26%)</title><rect x="1092.7" y="499.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1095.7" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.26%)</title><rect x="1092.7" y="483.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1095.7" y="494.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.26%)</title><rect x="1092.7" y="467.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1095.7" y="478.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.26%)</title><rect x="1092.7" y="451.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1095.7" y="462.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.26%)</title><rect x="1092.7" y="435.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1095.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (14 samples, 3.61%)</title><rect x="1095.7" y="787.0" width="42.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.7" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (14 samples, 3.61%)</title><rect x="1095.7" y="771.0" width="42.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.7" y="782.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.26%)</title><rect x="1095.7" y="755.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1098.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.26%)</title><rect x="1095.7" y="739.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.26%)</title><rect x="1095.7" y="723.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.26%)</title><rect x="1095.7" y="707.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1098.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.26%)</title><rect x="1095.7" y="691.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1098.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.26%)</title><rect x="1095.7" y="675.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1098.7" y="686.0"></text>
</g>
<g>
<title>__send (1 samples, 0.26%)</title><rect x="1095.7" y="659.0" width="3.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1098.7" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.26%)</title><rect x="1095.7" y="643.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1098.7" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.26%)</title><rect x="1095.7" y="627.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1098.7" y="638.0"></text>
</g>
<g>
<title>sys_rt_sigreturn (1 samples, 0.26%)</title><rect x="1095.7" y="611.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1098.7" y="622.0"></text>
</g>
<g>
<title>restore_altstack (1 samples, 0.26%)</title><rect x="1095.7" y="595.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1098.7" y="606.0"></text>
</g>
<g>
<title>sys_futex (1 samples, 0.26%)</title><rect x="1095.7" y="579.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1098.7" y="590.0"></text>
</g>
<g>
<title>do_vfs_ioctl (1 samples, 0.26%)</title><rect x="1095.7" y="563.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1098.7" y="574.0"></text>
</g>
<g>
<title>SYSC_sendto (1 samples, 0.26%)</title><rect x="1095.7" y="547.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1098.7" y="558.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.26%)</title><rect x="1095.7" y="531.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1098.7" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.26%)</title><rect x="1095.7" y="515.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1098.7" y="526.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.26%)</title><rect x="1095.7" y="499.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1098.7" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.26%)</title><rect x="1095.7" y="483.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1098.7" y="494.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.26%)</title><rect x="1095.7" y="467.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1098.7" y="478.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.26%)</title><rect x="1095.7" y="451.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1098.7" y="462.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.26%)</title><rect x="1095.7" y="435.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1098.7" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.26%)</title><rect x="1095.7" y="419.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1098.7" y="430.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.26%)</title><rect x="1095.7" y="403.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1098.7" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.26%)</title><rect x="1095.7" y="387.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1098.7" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.26%)</title><rect x="1095.7" y="371.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1098.7" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.18 (1 samples, 0.26%)</title><rect x="1095.7" y="355.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1098.7" y="366.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.26%)</title><rect x="1095.7" y="339.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1098.7" y="350.0"></text>
</g>
<g>
<title>__do_softirq (1 samples, 0.26%)</title><rect x="1095.7" y="323.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1098.7" y="334.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.26%)</title><rect x="1095.7" y="307.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1098.7" y="318.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.26%)</title><rect x="1095.7" y="291.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1098.7" y="302.0"></text>
</g>
<g>
<title>sched_clock (1 samples, 0.26%)</title><rect x="1095.7" y="275.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1098.7" y="286.0"></text>
</g>
<g>
<title>update_rq_clock.part.84 (1 samples, 0.26%)</title><rect x="1095.7" y="259.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1098.7" y="270.0"></text>
</g>
<g>
<title>enqueue_task_fair (1 samples, 0.26%)</title><rect x="1095.7" y="243.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1098.7" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.26%)</title><rect x="1095.7" y="227.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1098.7" y="238.0"></text>
</g>
<g>
<title>enqueue_entity (1 samples, 0.26%)</title><rect x="1095.7" y="211.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1098.7" y="222.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.26%)</title><rect x="1095.7" y="195.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1098.7" y="206.0"></text>
</g>
<g>
<title>update_cfs_rq_load_avg (1 samples, 0.26%)</title><rect x="1095.7" y="179.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1098.7" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.26%)</title><rect x="1095.7" y="163.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1098.7" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.26%)</title><rect x="1095.7" y="147.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1098.7" y="158.0"></text>
</g>
<g>
<title>hw_breakpoint_exceptions_notify (1 samples, 0.26%)</title><rect x="1095.7" y="131.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1098.7" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.26%)</title><rect x="1095.7" y="115.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1098.7" y="126.0"></text>
</g>
<g>
<title>tcp_prequeue (1 samples, 0.26%)</title><rect x="1095.7" y="99.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1098.7" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.26%)</title><rect x="1095.7" y="83.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1098.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (13 samples, 3.35%)</title><rect x="1098.8" y="755.0" width="39.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1101.8" y="766.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (13 samples, 3.35%)</title><rect x="1098.8" y="739.0" width="39.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1101.8" y="750.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (13 samples, 3.35%)</title><rect x="1098.8" y="723.0" width="39.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1101.8" y="734.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (13 samples, 3.35%)</title><rect x="1098.8" y="707.0" width="39.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1101.8" y="718.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (12 samples, 3.09%)</title><rect x="1098.8" y="691.0" width="36.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1101.8" y="702.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (12 samples, 3.09%)</title><rect x="1098.8" y="675.0" width="36.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1101.8" y="686.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (10 samples, 2.58%)</title><rect x="1098.8" y="659.0" width="30.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1101.8" y="670.0">Ja..</text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (10 samples, 2.58%)</title><rect x="1098.8" y="643.0" width="30.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1101.8" y="654.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (10 samples, 2.58%)</title><rect x="1098.8" y="627.0" width="30.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1101.8" y="638.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (10 samples, 2.58%)</title><rect x="1098.8" y="611.0" width="30.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1101.8" y="622.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (10 samples, 2.58%)</title><rect x="1098.8" y="595.0" width="30.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1101.8" y="606.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (10 samples, 2.58%)</title><rect x="1098.8" y="579.0" width="30.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1101.8" y="590.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (9 samples, 2.32%)</title><rect x="1101.8" y="563.0" width="27.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1104.8" y="574.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (9 samples, 2.32%)</title><rect x="1101.8" y="547.0" width="27.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1104.8" y="558.0">/..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (9 samples, 2.32%)</title><rect x="1101.8" y="531.0" width="27.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1104.8" y="542.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 2.06%)</title><rect x="1104.8" y="515.0" width="24.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1107.8" y="526.0">r..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (8 samples, 2.06%)</title><rect x="1104.8" y="499.0" width="24.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1107.8" y="510.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.52%)</title><rect x="1104.8" y="483.0" width="6.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1107.8" y="494.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.52%)</title><rect x="1104.8" y="467.0" width="6.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1107.8" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.26%)</title><rect x="1107.9" y="451.0" width="3.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1110.9" y="462.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.26%)</title><rect x="1107.9" y="435.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1110.9" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.52%)</title><rect x="1110.9" y="483.0" width="6.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1113.9" y="494.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.52%)</title><rect x="1110.9" y="467.0" width="6.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1113.9" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (2 samples, 0.52%)</title><rect x="1110.9" y="451.0" width="6.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1113.9" y="462.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.52%)</title><rect x="1110.9" y="435.0" width="6.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1113.9" y="446.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.26%)</title><rect x="1114.0" y="419.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1117.0" y="430.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.77%)</title><rect x="1117.0" y="483.0" width="9.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1120.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.26%)</title><rect x="1126.1" y="483.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1129.1" y="494.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.26%)</title><rect x="1126.1" y="467.0" width="3.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1129.1" y="478.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (2 samples, 0.52%)</title><rect x="1129.2" y="659.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1132.2" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (2 samples, 0.52%)</title><rect x="1129.2" y="643.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1132.2" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (2 samples, 0.52%)</title><rect x="1129.2" y="627.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1132.2" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.52%)</title><rect x="1129.2" y="611.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1132.2" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.52%)</title><rect x="1129.2" y="595.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1132.2" y="606.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (2 samples, 0.52%)</title><rect x="1129.2" y="579.0" width="6.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1132.2" y="590.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.52%)</title><rect x="1129.2" y="563.0" width="6.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1132.2" y="574.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.26%)</title><rect x="1129.2" y="547.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1132.2" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.26%)</title><rect x="1132.2" y="547.0" width="3.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1135.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (1 samples, 0.26%)</title><rect x="1135.3" y="691.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1138.3" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.26%)</title><rect x="1135.3" y="675.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1138.3" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.26%)</title><rect x="1135.3" y="659.0" width="3.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1138.3" y="670.0"></text>
</g>
<g>
<title>[worker tid=24784] (17 samples, 4.38%)</title><rect x="1138.3" y="851.0" width="51.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1141.3" y="862.0">[work..</text>
</g>
<g>
<title>java/lang/Thread.run (17 samples, 4.38%)</title><rect x="1138.3" y="835.0" width="51.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1141.3" y="846.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17 samples, 4.38%)</title><rect x="1138.3" y="819.0" width="51.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.3" y="830.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17 samples, 4.38%)</title><rect x="1138.3" y="803.0" width="51.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.3" y="814.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.52%)</title><rect x="1138.3" y="787.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1141.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.52%)</title><rect x="1138.3" y="771.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.52%)</title><rect x="1138.3" y="755.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.52%)</title><rect x="1138.3" y="739.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1141.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.52%)</title><rect x="1138.3" y="723.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.3" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.52%)</title><rect x="1138.3" y="707.0" width="6.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1141.3" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.52%)</title><rect x="1138.3" y="691.0" width="6.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1141.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.52%)</title><rect x="1138.3" y="675.0" width="6.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1141.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.52%)</title><rect x="1138.3" y="659.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1141.3" y="670.0"></text>
</g>
<g>
<title>sys_rt_sigreturn (2 samples, 0.52%)</title><rect x="1138.3" y="643.0" width="6.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1141.3" y="654.0"></text>
</g>
<g>
<title>restore_altstack (2 samples, 0.52%)</title><rect x="1138.3" y="627.0" width="6.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1141.3" y="638.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.52%)</title><rect x="1138.3" y="611.0" width="6.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1141.3" y="622.0"></text>
</g>
<g>
<title>do_vfs_ioctl (2 samples, 0.52%)</title><rect x="1138.3" y="595.0" width="6.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1141.3" y="606.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.52%)</title><rect x="1138.3" y="579.0" width="6.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1141.3" y="590.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.52%)</title><rect x="1138.3" y="563.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1141.3" y="574.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.52%)</title><rect x="1138.3" y="547.0" width="6.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1141.3" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.52%)</title><rect x="1138.3" y="531.0" width="6.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1141.3" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.52%)</title><rect x="1138.3" y="515.0" width="6.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1141.3" y="526.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.52%)</title><rect x="1138.3" y="499.0" width="6.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1141.3" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.26%)</title><rect x="1141.3" y="483.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1144.3" y="494.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.26%)</title><rect x="1141.3" y="467.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1144.3" y="478.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.26%)</title><rect x="1141.3" y="451.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1144.3" y="462.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.26%)</title><rect x="1141.3" y="435.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1144.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (15 samples, 3.87%)</title><rect x="1144.4" y="787.0" width="45.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1147.4" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (15 samples, 3.87%)</title><rect x="1144.4" y="771.0" width="45.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1147.4" y="782.0">ru/m..</text>
</g>
<g>
<title>itable stub (1 samples, 0.26%)</title><rect x="1144.4" y="755.0" width="3.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1147.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.52%)</title><rect x="1147.4" y="755.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1150.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.52%)</title><rect x="1147.4" y="739.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1150.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.52%)</title><rect x="1147.4" y="723.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1150.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.52%)</title><rect x="1147.4" y="707.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1150.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2 samples, 0.52%)</title><rect x="1147.4" y="691.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1150.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.52%)</title><rect x="1147.4" y="675.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1150.4" y="686.0"></text>
</g>
<g>
<title>__send (2 samples, 0.52%)</title><rect x="1147.4" y="659.0" width="6.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1150.4" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_swapgs (2 samples, 0.52%)</title><rect x="1147.4" y="643.0" width="6.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1150.4" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.52%)</title><rect x="1147.4" y="627.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1150.4" y="638.0"></text>
</g>
<g>
<title>sys_rt_sigreturn (2 samples, 0.52%)</title><rect x="1147.4" y="611.0" width="6.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.4" y="622.0"></text>
</g>
<g>
<title>restore_altstack (2 samples, 0.52%)</title><rect x="1147.4" y="595.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1150.4" y="606.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.52%)</title><rect x="1147.4" y="579.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1150.4" y="590.0"></text>
</g>
<g>
<title>do_vfs_ioctl (2 samples, 0.52%)</title><rect x="1147.4" y="563.0" width="6.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1150.4" y="574.0"></text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.52%)</title><rect x="1147.4" y="547.0" width="6.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1150.4" y="558.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.52%)</title><rect x="1147.4" y="531.0" width="6.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1150.4" y="542.0"></text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.26%)</title><rect x="1147.4" y="515.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1150.4" y="526.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.26%)</title><rect x="1150.5" y="515.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1153.5" y="526.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.26%)</title><rect x="1150.5" y="499.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1153.5" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.26%)</title><rect x="1150.5" y="483.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1153.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (12 samples, 3.09%)</title><rect x="1153.5" y="755.0" width="36.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1156.5" y="766.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (12 samples, 3.09%)</title><rect x="1153.5" y="739.0" width="36.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1156.5" y="750.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (12 samples, 3.09%)</title><rect x="1153.5" y="723.0" width="36.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1156.5" y="734.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (12 samples, 3.09%)</title><rect x="1153.5" y="707.0" width="36.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1156.5" y="718.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (12 samples, 3.09%)</title><rect x="1153.5" y="691.0" width="36.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1156.5" y="702.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (12 samples, 3.09%)</title><rect x="1153.5" y="675.0" width="36.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1156.5" y="686.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (9 samples, 2.32%)</title><rect x="1153.5" y="659.0" width="27.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1156.5" y="670.0">J..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22 (1 samples, 0.26%)</title><rect x="1153.5" y="643.0" width="3.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1156.5" y="654.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (8 samples, 2.06%)</title><rect x="1156.5" y="643.0" width="24.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.5" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (8 samples, 2.06%)</title><rect x="1156.5" y="627.0" width="24.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.5" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (8 samples, 2.06%)</title><rect x="1156.5" y="611.0" width="24.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1159.5" y="622.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (7 samples, 1.80%)</title><rect x="1156.5" y="595.0" width="21.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1159.5" y="606.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (7 samples, 1.80%)</title><rect x="1156.5" y="579.0" width="21.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1159.5" y="590.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (7 samples, 1.80%)</title><rect x="1156.5" y="563.0" width="21.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.5" y="574.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni18087461833032665488.so (7 samples, 1.80%)</title><rect x="1156.5" y="547.0" width="21.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1159.5" y="558.0">/..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (7 samples, 1.80%)</title><rect x="1156.5" y="531.0" width="21.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1159.5" y="542.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 1.55%)</title><rect x="1159.6" y="515.0" width="18.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (6 samples, 1.55%)</title><rect x="1159.6" y="499.0" width="18.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.6" y="510.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.26%)</title><rect x="1162.6" y="483.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1165.6" y="494.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.26%)</title><rect x="1162.6" y="467.0" width="3.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1165.6" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (1 samples, 0.26%)</title><rect x="1162.6" y="451.0" width="3.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1165.6" y="462.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.26%)</title><rect x="1162.6" y="435.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1165.6" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.77%)</title><rect x="1165.7" y="483.0" width="9.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.7" y="494.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (3 samples, 0.77%)</title><rect x="1165.7" y="467.0" width="9.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1168.7" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) (3 samples, 0.77%)</title><rect x="1165.7" y="451.0" width="9.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1168.7" y="462.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.77%)</title><rect x="1165.7" y="435.0" width="9.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.7" y="446.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.26%)</title><rect x="1171.8" y="419.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1174.8" y="430.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.26%)</title><rect x="1171.8" y="403.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.8" y="414.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.26%)</title><rect x="1174.8" y="483.0" width="3.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1177.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.26%)</title><rect x="1177.8" y="595.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.26%)</title><rect x="1180.9" y="659.0" width="3.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1183.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.26%)</title><rect x="1180.9" y="643.0" width="3.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1183.9" y="654.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.26%)</title><rect x="1180.9" y="627.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.9" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.26%)</title><rect x="1183.9" y="659.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1186.9" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (1 samples, 0.26%)</title><rect x="1187.0" y="659.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1190.0" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (1 samples, 0.26%)</title><rect x="1187.0" y="643.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1190.0" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (1 samples, 0.26%)</title><rect x="1187.0" y="627.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1190.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.26%)</title><rect x="1187.0" y="611.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1190.0" y="622.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.26%)</title><rect x="1187.0" y="595.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1190.0" y="606.0"></text>
</g>
</g>
</svg>
