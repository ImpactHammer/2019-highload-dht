<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="373"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="373"> </text>
<g id="frames">
<g>
<title>all (1,701 samples, 100.00%)</title><rect x="10.0" y="339.0" width="1180.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="13.0" y="350.0">all</text>
</g>
<g>
<title>[Attach Listener tid=24791] (1 samples, 0.06%)</title><rect x="10.0" y="323.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>java/lang/NoSuchMethodError.&lt;init&gt; (1 samples, 0.06%)</title><rect x="10.0" y="307.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java/lang/IncompatibleClassChangeError.&lt;init&gt; (1 samples, 0.06%)</title><rect x="10.0" y="291.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java/lang/LinkageError.&lt;init&gt; (1 samples, 0.06%)</title><rect x="10.0" y="275.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java/lang/Error.&lt;init&gt; (1 samples, 0.06%)</title><rect x="10.0" y="259.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="10.0" y="243.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="10.0" y="227.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="10.0" y="211.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.06%)</title><rect x="10.0" y="195.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=24698] (1 samples, 0.06%)</title><rect x="10.7" y="323.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.7" y="334.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1 samples, 0.06%)</title><rect x="10.7" y="307.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.createSession (1 samples, 0.06%)</title><rect x="10.7" y="291.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.createSession (1 samples, 0.06%)</title><rect x="10.7" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.7" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.StorageSession (1 samples, 0.06%)</title><rect x="10.7" y="259.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="13.7" y="270.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=24694] (165 samples, 9.70%)</title><rect x="11.4" y="323.0" width="114.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="14.4" y="334.0">[NIO Selector ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (165 samples, 9.70%)</title><rect x="11.4" y="307.0" width="114.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.4" y="318.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (11 samples, 0.65%)</title><rect x="11.4" y="291.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.4" y="302.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (11 samples, 0.65%)</title><rect x="11.4" y="275.0" width="7.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="14.4" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (154 samples, 9.05%)</title><rect x="19.0" y="291.0" width="106.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.0" y="302.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (154 samples, 9.05%)</title><rect x="19.0" y="275.0" width="106.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="22.0" y="286.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (154 samples, 9.05%)</title><rect x="19.0" y="259.0" width="106.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.0" y="270.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (64 samples, 3.76%)</title><rect x="19.0" y="243.0" width="44.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.0" y="254.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (64 samples, 3.76%)</title><rect x="19.0" y="227.0" width="44.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.0" y="238.0">one/..</text>
</g>
<g>
<title>RequestHandler3_entity.handleRequest (52 samples, 3.06%)</title><rect x="19.0" y="211.0" width="36.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.0" y="222.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.71%)</title><rect x="19.0" y="195.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.0" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.71%)</title><rect x="19.0" y="179.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.0" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.71%)</title><rect x="19.0" y="163.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.41%)</title><rect x="19.0" y="147.0" width="4.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="22.0" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.29%)</title><rect x="23.9" y="147.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.9" y="158.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.29%)</title><rect x="23.9" y="131.0" width="3.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="26.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.entity (40 samples, 2.35%)</title><rect x="27.3" y="195.0" width="27.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.3" y="206.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.35%)</title><rect x="27.3" y="179.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.3" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.35%)</title><rect x="27.3" y="163.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.3" y="174.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (6 samples, 0.35%)</title><rect x="27.3" y="147.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.3" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.35%)</title><rect x="27.3" y="131.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.3" y="142.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.35%)</title><rect x="27.3" y="115.0" width="4.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="30.3" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.41%)</title><rect x="31.5" y="179.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.41%)</title><rect x="31.5" y="163.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.get$Lambda (7 samples, 0.41%)</title><rect x="31.5" y="147.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.ShardedHttpServer$$Lambda$61 (7 samples, 0.41%)</title><rect x="31.5" y="131.0" width="4.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="34.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (15 samples, 0.88%)</title><rect x="36.4" y="179.0" width="10.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.4" y="190.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.24%)</title><rect x="36.4" y="163.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.4" y="174.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.24%)</title><rect x="36.4" y="147.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.24%)</title><rect x="36.4" y="131.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.4" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.24%)</title><rect x="36.4" y="115.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.4" y="126.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.24%)</title><rect x="36.4" y="99.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="39.4" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.18%)</title><rect x="39.1" y="163.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.18%)</title><rect x="39.1" y="147.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.get$Lambda (3 samples, 0.18%)</title><rect x="39.1" y="131.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.1" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.AsyncHttpServer$$Lambda$63 (3 samples, 0.18%)</title><rect x="39.1" y="115.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="42.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.24%)</title><rect x="41.2" y="163.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.24%)</title><rect x="41.2" y="147.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="44.2" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.24%)</title><rect x="41.2" y="131.0" width="2.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="44.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (4 samples, 0.24%)</title><rect x="44.0" y="163.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="44.0" y="147.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.0" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="44.0" y="131.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.get$Lambda (1 samples, 0.06%)</title><rect x="44.0" y="115.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.0" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.AsyncHttpServer$$Lambda$62 (1 samples, 0.06%)</title><rect x="44.0" y="99.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="47.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.18%)</title><rect x="44.7" y="147.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.18%)</title><rect x="44.7" y="131.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.7" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (3 samples, 0.18%)</title><rect x="44.7" y="115.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="47.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.executeAsync (12 samples, 0.71%)</title><rect x="46.8" y="179.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.29%)</title><rect x="46.8" y="163.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.29%)</title><rect x="46.8" y="147.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.get$Lambda (5 samples, 0.29%)</title><rect x="46.8" y="131.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.8" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.AsyncHttpServer$$Lambda$62 (5 samples, 0.29%)</title><rect x="46.8" y="115.0" width="3.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="49.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.41%)</title><rect x="50.2" y="163.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.41%)</title><rect x="50.2" y="147.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="53.2" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (7 samples, 0.41%)</title><rect x="50.2" y="131.0" width="4.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="53.2" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (12 samples, 0.71%)</title><rect x="55.1" y="211.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.71%)</title><rect x="55.1" y="195.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.71%)</title><rect x="55.1" y="179.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.1" y="190.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.29%)</title><rect x="55.1" y="163.0" width="3.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="58.1" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.41%)</title><rect x="58.6" y="163.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.6" y="174.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.41%)</title><rect x="58.6" y="147.0" width="4.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="61.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (64 samples, 3.76%)</title><rect x="63.4" y="243.0" width="44.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.4" y="254.0">one/..</text>
</g>
<g>
<title>one.nio.http.Request (18 samples, 1.06%)</title><rect x="63.4" y="227.0" width="12.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="66.4" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (26 samples, 1.53%)</title><rect x="75.9" y="227.0" width="18.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.9" y="238.0"></text>
</g>
<g>
<title>java.lang.String[] (26 samples, 1.53%)</title><rect x="75.9" y="211.0" width="18.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="78.9" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 1.18%)</title><rect x="93.9" y="227.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.9" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 1.18%)</title><rect x="93.9" y="211.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.9" y="222.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.65%)</title><rect x="93.9" y="195.0" width="7.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="96.9" y="206.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.18%)</title><rect x="101.6" y="195.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="104.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.35%)</title><rect x="103.7" y="195.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.7" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.35%)</title><rect x="103.7" y="179.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.35%)</title><rect x="103.7" y="163.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.7" y="174.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.35%)</title><rect x="103.7" y="147.0" width="4.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="106.7" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 1.53%)</title><rect x="107.8" y="243.0" width="18.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.8" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 1.53%)</title><rect x="107.8" y="227.0" width="18.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.8" y="238.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.59%)</title><rect x="107.8" y="211.0" width="7.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="110.8" y="222.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.82%)</title><rect x="114.8" y="211.0" width="9.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="117.8" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.12%)</title><rect x="124.5" y="211.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="127.5" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.12%)</title><rect x="124.5" y="195.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.12%)</title><rect x="124.5" y="179.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.5" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="124.5" y="163.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="127.5" y="174.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=24723] (73 samples, 4.29%)</title><rect x="125.8" y="323.0" width="50.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="128.8" y="334.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (73 samples, 4.29%)</title><rect x="125.8" y="307.0" width="50.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="128.8" y="318.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 0.59%)</title><rect x="125.8" y="291.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="128.8" y="302.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (10 samples, 0.59%)</title><rect x="125.8" y="275.0" width="7.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="128.8" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (63 samples, 3.70%)</title><rect x="132.8" y="291.0" width="43.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="135.8" y="302.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (63 samples, 3.70%)</title><rect x="132.8" y="275.0" width="43.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.8" y="286.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (63 samples, 3.70%)</title><rect x="132.8" y="259.0" width="43.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.8" y="270.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (25 samples, 1.47%)</title><rect x="132.8" y="243.0" width="17.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.8" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (25 samples, 1.47%)</title><rect x="132.8" y="227.0" width="17.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.8" y="238.0"></text>
</g>
<g>
<title>RequestHandler3_entity.handleRequest (19 samples, 1.12%)</title><rect x="132.8" y="211.0" width="13.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.8" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.59%)</title><rect x="132.8" y="195.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.8" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.59%)</title><rect x="132.8" y="179.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.8" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.59%)</title><rect x="132.8" y="163.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="132.8" y="147.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="135.8" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.53%)</title><rect x="133.5" y="147.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.5" y="158.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.53%)</title><rect x="133.5" y="131.0" width="6.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="136.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.entity (9 samples, 0.53%)</title><rect x="139.7" y="195.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (9 samples, 0.53%)</title><rect x="139.7" y="179.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="142.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.24%)</title><rect x="139.7" y="163.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.24%)</title><rect x="139.7" y="147.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.get$Lambda (4 samples, 0.24%)</title><rect x="139.7" y="131.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.7" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.AsyncHttpServer$$Lambda$63 (4 samples, 0.24%)</title><rect x="139.7" y="115.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="142.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.29%)</title><rect x="142.5" y="163.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.5" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.29%)</title><rect x="142.5" y="147.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.5" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.29%)</title><rect x="142.5" y="131.0" width="3.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="145.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6 samples, 0.35%)</title><rect x="146.0" y="211.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.35%)</title><rect x="146.0" y="195.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.35%)</title><rect x="146.0" y="179.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.35%)</title><rect x="146.0" y="163.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.0" y="174.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.35%)</title><rect x="146.0" y="147.0" width="4.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="149.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (26 samples, 1.53%)</title><rect x="150.1" y="243.0" width="18.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.1" y="254.0"></text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.41%)</title><rect x="150.1" y="227.0" width="4.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="153.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8 samples, 0.47%)</title><rect x="155.0" y="227.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="158.0" y="238.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.47%)</title><rect x="155.0" y="211.0" width="5.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="158.0" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.65%)</title><rect x="160.5" y="227.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.5" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.65%)</title><rect x="160.5" y="211.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.5" y="222.0"></text>
</g>
<g>
<title>char[] (10 samples, 0.59%)</title><rect x="160.5" y="195.0" width="7.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="163.5" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="167.5" y="195.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.5" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="167.5" y="179.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.5" y="190.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.06%)</title><rect x="167.5" y="163.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="170.5" y="174.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="167.5" y="147.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="170.5" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.71%)</title><rect x="168.2" y="243.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.2" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.71%)</title><rect x="168.2" y="227.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="171.2" y="238.0"></text>
</g>
<g>
<title>char[] (6 samples, 0.35%)</title><rect x="168.2" y="211.0" width="4.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="171.2" y="222.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.35%)</title><rect x="172.3" y="211.0" width="4.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="175.3" y="222.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=24747] (77 samples, 4.53%)</title><rect x="176.5" y="323.0" width="53.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="179.5" y="334.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (77 samples, 4.53%)</title><rect x="176.5" y="307.0" width="53.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="179.5" y="318.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.12%)</title><rect x="176.5" y="291.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.5" y="302.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2 samples, 0.12%)</title><rect x="176.5" y="275.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="179.5" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (75 samples, 4.41%)</title><rect x="177.9" y="291.0" width="52.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.9" y="302.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (75 samples, 4.41%)</title><rect x="177.9" y="275.0" width="52.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="180.9" y="286.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (75 samples, 4.41%)</title><rect x="177.9" y="259.0" width="52.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="180.9" y="270.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (22 samples, 1.29%)</title><rect x="177.9" y="243.0" width="15.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="180.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (22 samples, 1.29%)</title><rect x="177.9" y="227.0" width="15.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="180.9" y="238.0"></text>
</g>
<g>
<title>RequestHandler3_entity.handleRequest (13 samples, 0.76%)</title><rect x="177.9" y="211.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.9" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.41%)</title><rect x="177.9" y="195.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.9" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.41%)</title><rect x="177.9" y="179.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.9" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.41%)</title><rect x="177.9" y="163.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.41%)</title><rect x="177.9" y="147.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.9" y="158.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.41%)</title><rect x="177.9" y="131.0" width="4.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="180.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.entity (6 samples, 0.35%)</title><rect x="182.7" y="195.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.7" y="206.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.24%)</title><rect x="182.7" y="179.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="185.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.24%)</title><rect x="182.7" y="163.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.7" y="174.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.24%)</title><rect x="182.7" y="147.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="185.7" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.24%)</title><rect x="182.7" y="131.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="185.7" y="142.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.24%)</title><rect x="182.7" y="115.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="185.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (2 samples, 0.12%)</title><rect x="185.5" y="179.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="188.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="185.5" y="163.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="185.5" y="147.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="188.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.get$Lambda (1 samples, 0.06%)</title><rect x="185.5" y="131.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="188.5" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.AsyncHttpServer$$Lambda$63 (1 samples, 0.06%)</title><rect x="185.5" y="115.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="188.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="186.2" y="163.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="186.2" y="147.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="189.2" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.06%)</title><rect x="186.2" y="131.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="189.2" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9 samples, 0.53%)</title><rect x="186.9" y="211.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.53%)</title><rect x="186.9" y="195.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.53%)</title><rect x="186.9" y="179.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="189.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.41%)</title><rect x="186.9" y="163.0" width="4.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="189.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.12%)</title><rect x="191.8" y="163.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.8" y="174.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="191.8" y="147.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="194.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (25 samples, 1.47%)</title><rect x="193.1" y="243.0" width="17.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.1" y="254.0"></text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.41%)</title><rect x="193.1" y="227.0" width="4.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="196.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 0.59%)</title><rect x="198.0" y="227.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.0" y="238.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.59%)</title><rect x="198.0" y="211.0" width="6.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="201.0" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.47%)</title><rect x="204.9" y="227.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.9" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.47%)</title><rect x="204.9" y="211.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.9" y="222.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.47%)</title><rect x="204.9" y="195.0" width="5.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="207.9" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 1.65%)</title><rect x="210.5" y="243.0" width="19.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="213.5" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 1.65%)</title><rect x="210.5" y="227.0" width="19.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.5" y="238.0"></text>
</g>
<g>
<title>char[] (19 samples, 1.12%)</title><rect x="210.5" y="211.0" width="13.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="213.5" y="222.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="223.7" y="211.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="226.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.47%)</title><rect x="224.4" y="211.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.47%)</title><rect x="224.4" y="195.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.4" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.47%)</title><rect x="224.4" y="179.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="227.4" y="190.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.47%)</title><rect x="224.4" y="163.0" width="5.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="227.4" y="174.0"></text>
</g>
<g>
<title>[worker tid=24773] (143 samples, 8.41%)</title><rect x="229.9" y="323.0" width="99.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="232.9" y="334.0">[worker tid=..</text>
</g>
<g>
<title>java/lang/Thread.run (143 samples, 8.41%)</title><rect x="229.9" y="307.0" width="99.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.9" y="318.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (143 samples, 8.41%)</title><rect x="229.9" y="291.0" width="99.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.9" y="302.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (143 samples, 8.41%)</title><rect x="229.9" y="275.0" width="99.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="232.9" y="286.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.06%)</title><rect x="229.9" y="259.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="232.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.06%)</title><rect x="229.9" y="243.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="232.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.06%)</title><rect x="229.9" y="227.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="232.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.06%)</title><rect x="229.9" y="211.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.9" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.06%)</title><rect x="229.9" y="195.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="232.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (142 samples, 8.35%)</title><rect x="230.6" y="259.0" width="98.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.6" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (142 samples, 8.35%)</title><rect x="230.6" y="243.0" width="98.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="233.6" y="254.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.24%)</title><rect x="230.6" y="227.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="233.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.24%)</title><rect x="230.6" y="211.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="233.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.06%)</title><rect x="230.6" y="195.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="233.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="230.6" y="179.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="233.6" y="190.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="230.6" y="163.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="233.6" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.18%)</title><rect x="231.3" y="195.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="234.3" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (3 samples, 0.18%)</title><rect x="231.3" y="179.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="234.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (26 samples, 1.53%)</title><rect x="233.4" y="227.0" width="18.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (26 samples, 1.53%)</title><rect x="233.4" y="211.0" width="18.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (26 samples, 1.53%)</title><rect x="233.4" y="195.0" width="18.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.4" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.06%)</title><rect x="233.4" y="179.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="236.4" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.06%)</title><rect x="233.4" y="163.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="236.4" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.06%)</title><rect x="234.1" y="179.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="237.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (24 samples, 1.41%)</title><rect x="234.8" y="179.0" width="16.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.12%)</title><rect x="234.8" y="163.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="237.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.12%)</title><rect x="234.8" y="147.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.12%)</title><rect x="234.8" y="131.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="237.8" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (22 samples, 1.29%)</title><rect x="236.1" y="163.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.1" y="174.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (22 samples, 1.29%)</title><rect x="236.1" y="147.0" width="15.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.1" y="158.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (22 samples, 1.29%)</title><rect x="236.1" y="131.0" width="15.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="239.1" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (22 samples, 1.29%)</title><rect x="236.1" y="115.0" width="15.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="239.1" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (22 samples, 1.29%)</title><rect x="236.1" y="99.0" width="15.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.1" y="110.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (22 samples, 1.29%)</title><rect x="236.1" y="83.0" width="15.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.1" y="94.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (22 samples, 1.29%)</title><rect x="236.1" y="67.0" width="15.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.1" y="78.0"></text>
</g>
<g>
<title>byte[] (22 samples, 1.29%)</title><rect x="236.1" y="51.0" width="15.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="239.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.act (112 samples, 6.58%)</title><rect x="251.4" y="227.0" width="77.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.4" y="238.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.lambda$entity$1 (112 samples, 6.58%)</title><rect x="251.4" y="211.0" width="77.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="254.4" y="222.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.proxy (112 samples, 6.58%)</title><rect x="251.4" y="195.0" width="77.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="254.4" y="206.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (112 samples, 6.58%)</title><rect x="251.4" y="179.0" width="77.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="254.4" y="190.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (112 samples, 6.58%)</title><rect x="251.4" y="163.0" width="77.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="254.4" y="174.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (101 samples, 5.94%)</title><rect x="251.4" y="147.0" width="70.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.4" y="158.0">one/nio/..</text>
</g>
<g>
<title>byte[] (45 samples, 2.65%)</title><rect x="251.4" y="131.0" width="31.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="254.4" y="142.0">by..</text>
</g>
<g>
<title>byte[] (56 samples, 3.29%)</title><rect x="282.6" y="131.0" width="38.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="285.6" y="142.0">byt..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (8 samples, 0.47%)</title><rect x="321.5" y="147.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="324.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (7 samples, 0.41%)</title><rect x="321.5" y="131.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="324.5" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.41%)</title><rect x="321.5" y="115.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="324.5" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.41%)</title><rect x="321.5" y="99.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="324.5" y="110.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.24%)</title><rect x="321.5" y="83.0" width="2.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="324.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.18%)</title><rect x="324.3" y="83.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="327.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.06%)</title><rect x="326.3" y="131.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="329.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="326.3" y="115.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="329.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="326.3" y="99.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="329.3" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="326.3" y="83.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="329.3" y="94.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="326.3" y="67.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="329.3" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (3 samples, 0.18%)</title><rect x="327.0" y="147.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.0" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.18%)</title><rect x="327.0" y="131.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="330.0" y="142.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.18%)</title><rect x="327.0" y="115.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="330.0" y="126.0"></text>
</g>
<g>
<title>[worker tid=24774] (94 samples, 5.53%)</title><rect x="329.1" y="323.0" width="65.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="332.1" y="334.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (94 samples, 5.53%)</title><rect x="329.1" y="307.0" width="65.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="332.1" y="318.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (94 samples, 5.53%)</title><rect x="329.1" y="291.0" width="65.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.1" y="302.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (94 samples, 5.53%)</title><rect x="329.1" y="275.0" width="65.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.1" y="286.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.24%)</title><rect x="329.1" y="259.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="332.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (4 samples, 0.24%)</title><rect x="329.1" y="243.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 0.24%)</title><rect x="329.1" y="227.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.24%)</title><rect x="329.1" y="211.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="332.1" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.24%)</title><rect x="329.1" y="195.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="332.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (90 samples, 5.29%)</title><rect x="331.9" y="259.0" width="62.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="334.9" y="270.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (90 samples, 5.29%)</title><rect x="331.9" y="243.0" width="62.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="334.9" y="254.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.24%)</title><rect x="331.9" y="227.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.24%)</title><rect x="331.9" y="211.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="334.9" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.18%)</title><rect x="331.9" y="195.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.9" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.18%)</title><rect x="331.9" y="179.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="334.9" y="190.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.18%)</title><rect x="331.9" y="163.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="334.9" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.06%)</title><rect x="334.0" y="195.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="337.0" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.06%)</title><rect x="334.0" y="179.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="337.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (86 samples, 5.06%)</title><rect x="334.7" y="227.0" width="59.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="337.7" y="238.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (86 samples, 5.06%)</title><rect x="334.7" y="211.0" width="59.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="337.7" y="222.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (86 samples, 5.06%)</title><rect x="334.7" y="195.0" width="59.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="337.7" y="206.0">ru/mai..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.12%)</title><rect x="334.7" y="179.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="337.7" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.12%)</title><rect x="334.7" y="163.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="337.7" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.18%)</title><rect x="336.0" y="179.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="339.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.18%)</title><rect x="338.1" y="179.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="341.1" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="338.1" y="163.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="341.1" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.06%)</title><rect x="339.5" y="163.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="342.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (78 samples, 4.59%)</title><rect x="340.2" y="179.0" width="54.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="343.2" y="190.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.24%)</title><rect x="340.2" y="163.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="343.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.24%)</title><rect x="340.2" y="147.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.2" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.24%)</title><rect x="340.2" y="131.0" width="2.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="343.2" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (67 samples, 3.94%)</title><rect x="343.0" y="163.0" width="46.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="346.0" y="174.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (67 samples, 3.94%)</title><rect x="343.0" y="147.0" width="46.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="346.0" y="158.0">org/..</text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="343.0" y="131.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="346.0" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (65 samples, 3.82%)</title><rect x="344.4" y="131.0" width="45.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="347.4" y="142.0">org/..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (65 samples, 3.82%)</title><rect x="344.4" y="115.0" width="45.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="347.4" y="126.0">org/..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (65 samples, 3.82%)</title><rect x="344.4" y="99.0" width="45.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="347.4" y="110.0">org/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (65 samples, 3.82%)</title><rect x="344.4" y="83.0" width="45.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="347.4" y="94.0">org/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (65 samples, 3.82%)</title><rect x="344.4" y="67.0" width="45.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="347.4" y="78.0">org/..</text>
</g>
<g>
<title>byte[] (65 samples, 3.82%)</title><rect x="344.4" y="51.0" width="45.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="347.4" y="62.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (7 samples, 0.41%)</title><rect x="389.5" y="163.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.5" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.12%)</title><rect x="389.5" y="147.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="392.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="389.5" y="131.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="392.5" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="389.5" y="115.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="392.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.29%)</title><rect x="390.8" y="147.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.29%)</title><rect x="390.8" y="131.0" width="3.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="393.8" y="142.0"></text>
</g>
<g>
<title>[worker tid=24775] (149 samples, 8.76%)</title><rect x="394.3" y="323.0" width="103.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="397.3" y="334.0">[worker tid=..</text>
</g>
<g>
<title>java/lang/Thread.run (149 samples, 8.76%)</title><rect x="394.3" y="307.0" width="103.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.3" y="318.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (149 samples, 8.76%)</title><rect x="394.3" y="291.0" width="103.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="397.3" y="302.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (149 samples, 8.76%)</title><rect x="394.3" y="275.0" width="103.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.3" y="286.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.06%)</title><rect x="394.3" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="397.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.06%)</title><rect x="394.3" y="243.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="397.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.06%)</title><rect x="394.3" y="227.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="397.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.06%)</title><rect x="394.3" y="211.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="397.3" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.06%)</title><rect x="394.3" y="195.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="397.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (148 samples, 8.70%)</title><rect x="395.0" y="259.0" width="102.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="398.0" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (148 samples, 8.70%)</title><rect x="395.0" y="243.0" width="102.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.0" y="254.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.18%)</title><rect x="395.0" y="227.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.0" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.18%)</title><rect x="395.0" y="211.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="398.0" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.12%)</title><rect x="395.0" y="195.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="398.0" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.12%)</title><rect x="395.0" y="179.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.0" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="395.0" y="163.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="398.0" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.06%)</title><rect x="396.4" y="195.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.4" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.06%)</title><rect x="396.4" y="179.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="399.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (38 samples, 2.23%)</title><rect x="397.1" y="227.0" width="26.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.1" y="238.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (38 samples, 2.23%)</title><rect x="397.1" y="211.0" width="26.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="400.1" y="222.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (38 samples, 2.23%)</title><rect x="397.1" y="195.0" width="26.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.1" y="206.0">r..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.35%)</title><rect x="397.1" y="179.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.1" y="190.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.18%)</title><rect x="397.1" y="163.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="400.1" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.12%)</title><rect x="399.2" y="163.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="402.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="400.6" y="163.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="403.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (32 samples, 1.88%)</title><rect x="401.3" y="179.0" width="22.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="404.3" y="190.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.12%)</title><rect x="401.3" y="163.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="404.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.12%)</title><rect x="401.3" y="147.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="404.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.12%)</title><rect x="401.3" y="131.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="404.3" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (28 samples, 1.65%)</title><rect x="402.6" y="163.0" width="19.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="405.6" y="174.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (28 samples, 1.65%)</title><rect x="402.6" y="147.0" width="19.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.6" y="158.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="402.6" y="131.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="405.6" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (26 samples, 1.53%)</title><rect x="404.0" y="131.0" width="18.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.0" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (26 samples, 1.53%)</title><rect x="404.0" y="115.0" width="18.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="407.0" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (26 samples, 1.53%)</title><rect x="404.0" y="99.0" width="18.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.0" y="110.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (26 samples, 1.53%)</title><rect x="404.0" y="83.0" width="18.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="407.0" y="94.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (26 samples, 1.53%)</title><rect x="404.0" y="67.0" width="18.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="407.0" y="78.0"></text>
</g>
<g>
<title>byte[] (26 samples, 1.53%)</title><rect x="404.0" y="51.0" width="18.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="407.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (2 samples, 0.12%)</title><rect x="422.1" y="163.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.1" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.06%)</title><rect x="422.1" y="147.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="425.1" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.06%)</title><rect x="422.1" y="131.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="425.1" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.06%)</title><rect x="422.8" y="147.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="425.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.06%)</title><rect x="422.8" y="131.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="425.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.act (107 samples, 6.29%)</title><rect x="423.5" y="227.0" width="74.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="426.5" y="238.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.lambda$entity$1 (107 samples, 6.29%)</title><rect x="423.5" y="211.0" width="74.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="426.5" y="222.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.proxy (107 samples, 6.29%)</title><rect x="423.5" y="195.0" width="74.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.5" y="206.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (107 samples, 6.29%)</title><rect x="423.5" y="179.0" width="74.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="426.5" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (107 samples, 6.29%)</title><rect x="423.5" y="163.0" width="74.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.5" y="174.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (96 samples, 5.64%)</title><rect x="423.5" y="147.0" width="66.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="426.5" y="158.0">one/nio..</text>
</g>
<g>
<title>byte[] (35 samples, 2.06%)</title><rect x="423.5" y="131.0" width="24.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="426.5" y="142.0">b..</text>
</g>
<g>
<title>byte[] (61 samples, 3.59%)</title><rect x="447.7" y="131.0" width="42.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="450.7" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (6 samples, 0.35%)</title><rect x="490.0" y="147.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="493.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.12%)</title><rect x="490.0" y="131.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.12%)</title><rect x="490.0" y="115.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="493.0" y="126.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="490.0" y="99.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="493.0" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="490.7" y="99.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.7" y="110.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="490.7" y="83.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="493.7" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.06%)</title><rect x="491.4" y="131.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="494.4" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2 samples, 0.12%)</title><rect x="492.1" y="131.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="495.1" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="492.1" y="115.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="495.1" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="492.1" y="99.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="495.1" y="110.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.06%)</title><rect x="492.1" y="83.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="495.1" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="492.8" y="83.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.8" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="492.8" y="67.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="495.8" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.06%)</title><rect x="492.8" y="51.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.8" y="62.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="492.8" y="35.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="495.8" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.06%)</title><rect x="493.5" y="131.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="496.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="493.5" y="115.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="496.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="493.5" y="99.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="496.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="493.5" y="83.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="496.5" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2 samples, 0.12%)</title><rect x="494.2" y="147.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.12%)</title><rect x="494.2" y="131.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.2" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="494.2" y="115.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="497.2" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.12%)</title><rect x="495.6" y="147.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="498.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.12%)</title><rect x="495.6" y="131.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="498.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.12%)</title><rect x="495.6" y="115.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="498.6" y="126.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="495.6" y="99.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="498.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="496.3" y="99.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="499.3" y="110.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="496.3" y="83.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="499.3" y="94.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (1 samples, 0.06%)</title><rect x="497.0" y="147.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="500.0" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (1 samples, 0.06%)</title><rect x="497.0" y="131.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="500.0" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (1 samples, 0.06%)</title><rect x="497.0" y="115.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="500.0" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.06%)</title><rect x="497.0" y="99.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="500.0" y="110.0"></text>
</g>
<g>
<title>[worker tid=24776] (95 samples, 5.58%)</title><rect x="497.7" y="323.0" width="65.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="500.7" y="334.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (95 samples, 5.58%)</title><rect x="497.7" y="307.0" width="65.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="500.7" y="318.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (95 samples, 5.58%)</title><rect x="497.7" y="291.0" width="65.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.7" y="302.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (95 samples, 5.58%)</title><rect x="497.7" y="275.0" width="65.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="500.7" y="286.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.06%)</title><rect x="497.7" y="259.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="500.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.06%)</title><rect x="497.7" y="243.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="500.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.06%)</title><rect x="497.7" y="227.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="500.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.06%)</title><rect x="497.7" y="211.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="500.7" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.06%)</title><rect x="497.7" y="195.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="500.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (94 samples, 5.53%)</title><rect x="498.4" y="259.0" width="65.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="501.4" y="270.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (94 samples, 5.53%)</title><rect x="498.4" y="243.0" width="65.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.4" y="254.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.35%)</title><rect x="498.4" y="227.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.4" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.35%)</title><rect x="498.4" y="211.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.4" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.35%)</title><rect x="498.4" y="195.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.4" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6 samples, 0.35%)</title><rect x="498.4" y="179.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="501.4" y="190.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.35%)</title><rect x="498.4" y="163.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="501.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (88 samples, 5.17%)</title><rect x="502.5" y="227.0" width="61.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.5" y="238.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (88 samples, 5.17%)</title><rect x="502.5" y="211.0" width="61.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="505.5" y="222.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (88 samples, 5.17%)</title><rect x="502.5" y="195.0" width="61.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="505.5" y="206.0">ru/mai..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.12%)</title><rect x="502.5" y="179.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.5" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.12%)</title><rect x="502.5" y="163.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="505.5" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.06%)</title><rect x="503.9" y="179.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="506.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.35%)</title><rect x="504.6" y="179.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="507.6" y="190.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.18%)</title><rect x="504.6" y="163.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="507.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.12%)</title><rect x="506.7" y="163.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="509.7" y="174.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="508.1" y="163.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="511.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (79 samples, 4.64%)</title><rect x="508.8" y="179.0" width="54.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="511.8" y="190.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.24%)</title><rect x="508.8" y="163.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="511.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.24%)</title><rect x="508.8" y="147.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="511.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.24%)</title><rect x="508.8" y="131.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="511.8" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (69 samples, 4.06%)</title><rect x="511.6" y="163.0" width="47.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.6" y="174.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (69 samples, 4.06%)</title><rect x="511.6" y="147.0" width="47.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="514.6" y="158.0">org/..</text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="511.6" y="131.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="514.6" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (68 samples, 4.00%)</title><rect x="512.2" y="131.0" width="47.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.2" y="142.0">org/..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (68 samples, 4.00%)</title><rect x="512.2" y="115.0" width="47.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="515.2" y="126.0">org/..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (68 samples, 4.00%)</title><rect x="512.2" y="99.0" width="47.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.2" y="110.0">org/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (68 samples, 4.00%)</title><rect x="512.2" y="83.0" width="47.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="515.2" y="94.0">org/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (68 samples, 4.00%)</title><rect x="512.2" y="67.0" width="47.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="515.2" y="78.0">org/..</text>
</g>
<g>
<title>byte[] (68 samples, 4.00%)</title><rect x="512.2" y="51.0" width="47.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="515.2" y="62.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (6 samples, 0.35%)</title><rect x="559.4" y="163.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="562.4" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.12%)</title><rect x="559.4" y="147.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.4" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.12%)</title><rect x="559.4" y="131.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="562.4" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.24%)</title><rect x="560.8" y="147.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.24%)</title><rect x="560.8" y="131.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="563.8" y="142.0"></text>
</g>
<g>
<title>[worker tid=24777] (151 samples, 8.88%)</title><rect x="563.6" y="323.0" width="104.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="566.6" y="334.0">[worker tid=..</text>
</g>
<g>
<title>java/lang/Thread.run (151 samples, 8.88%)</title><rect x="563.6" y="307.0" width="104.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="566.6" y="318.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (151 samples, 8.88%)</title><rect x="563.6" y="291.0" width="104.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="566.6" y="302.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (151 samples, 8.88%)</title><rect x="563.6" y="275.0" width="104.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="566.6" y="286.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.12%)</title><rect x="563.6" y="259.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="566.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.12%)</title><rect x="563.6" y="243.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="566.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.12%)</title><rect x="563.6" y="227.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="566.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.12%)</title><rect x="563.6" y="211.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="566.6" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.12%)</title><rect x="563.6" y="195.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="566.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (149 samples, 8.76%)</title><rect x="565.0" y="259.0" width="103.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.0" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (149 samples, 8.76%)</title><rect x="565.0" y="243.0" width="103.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.0" y="254.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.29%)</title><rect x="565.0" y="227.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.0" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.29%)</title><rect x="565.0" y="211.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="568.0" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.18%)</title><rect x="565.0" y="195.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.0" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.18%)</title><rect x="565.0" y="179.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.0" y="190.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.18%)</title><rect x="565.0" y="163.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="568.0" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.12%)</title><rect x="567.0" y="195.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="570.0" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.12%)</title><rect x="567.0" y="179.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="570.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (14 samples, 0.82%)</title><rect x="568.4" y="227.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="571.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (14 samples, 0.82%)</title><rect x="568.4" y="211.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="571.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (14 samples, 0.82%)</title><rect x="568.4" y="195.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.4" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.06%)</title><rect x="568.4" y="179.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.4" y="190.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="568.4" y="163.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="571.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (13 samples, 0.76%)</title><rect x="569.1" y="179.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.1" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="569.1" y="163.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.1" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="569.1" y="147.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="572.1" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.06%)</title><rect x="569.1" y="131.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="572.1" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (11 samples, 0.65%)</title><rect x="569.8" y="163.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.8" y="174.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (11 samples, 0.65%)</title><rect x="569.8" y="147.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="572.8" y="158.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (11 samples, 0.65%)</title><rect x="569.8" y="131.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.8" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (11 samples, 0.65%)</title><rect x="569.8" y="115.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.8" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (11 samples, 0.65%)</title><rect x="569.8" y="99.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.8" y="110.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (11 samples, 0.65%)</title><rect x="569.8" y="83.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="572.8" y="94.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (11 samples, 0.65%)</title><rect x="569.8" y="67.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="572.8" y="78.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.65%)</title><rect x="569.8" y="51.0" width="7.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="572.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (1 samples, 0.06%)</title><rect x="577.5" y="163.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.5" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.06%)</title><rect x="577.5" y="147.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.5" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.06%)</title><rect x="577.5" y="131.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="580.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.act (130 samples, 7.64%)</title><rect x="578.1" y="227.0" width="90.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.1" y="238.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.lambda$entity$1 (130 samples, 7.64%)</title><rect x="578.1" y="211.0" width="90.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="581.1" y="222.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.proxy (130 samples, 7.64%)</title><rect x="578.1" y="195.0" width="90.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="581.1" y="206.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (130 samples, 7.64%)</title><rect x="578.1" y="179.0" width="90.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="581.1" y="190.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (130 samples, 7.64%)</title><rect x="578.1" y="163.0" width="90.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.1" y="174.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (120 samples, 7.05%)</title><rect x="578.1" y="147.0" width="83.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="581.1" y="158.0">one/nio/h..</text>
</g>
<g>
<title>byte[] (57 samples, 3.35%)</title><rect x="578.1" y="131.0" width="39.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="581.1" y="142.0">byt..</text>
</g>
<g>
<title>byte[] (63 samples, 3.70%)</title><rect x="617.7" y="131.0" width="43.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="620.7" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (6 samples, 0.35%)</title><rect x="661.4" y="147.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="664.4" y="158.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.06%)</title><rect x="661.4" y="131.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="664.4" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (4 samples, 0.24%)</title><rect x="662.1" y="131.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="665.1" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.24%)</title><rect x="662.1" y="115.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="665.1" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.24%)</title><rect x="662.1" y="99.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="665.1" y="110.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.18%)</title><rect x="662.1" y="83.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="665.1" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="664.2" y="83.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.2" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="664.2" y="67.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="667.2" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.06%)</title><rect x="664.2" y="51.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="667.2" y="62.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="664.2" y="35.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="667.2" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.06%)</title><rect x="664.9" y="131.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="667.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.06%)</title><rect x="664.9" y="115.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="667.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2 samples, 0.12%)</title><rect x="665.6" y="147.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.6" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.12%)</title><rect x="665.6" y="131.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="668.6" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="665.6" y="115.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="668.6" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.12%)</title><rect x="666.9" y="147.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.12%)</title><rect x="666.9" y="131.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.12%)</title><rect x="666.9" y="115.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.12%)</title><rect x="666.9" y="99.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="669.9" y="110.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="666.9" y="83.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="669.9" y="94.0"></text>
</g>
<g>
<title>[worker tid=24778] (168 samples, 9.88%)</title><rect x="668.3" y="323.0" width="116.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="671.3" y="334.0">[worker tid=24..</text>
</g>
<g>
<title>java/lang/Thread.run (168 samples, 9.88%)</title><rect x="668.3" y="307.0" width="116.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.3" y="318.0">java/lang/Thre..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (168 samples, 9.88%)</title><rect x="668.3" y="291.0" width="116.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.3" y="302.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (168 samples, 9.88%)</title><rect x="668.3" y="275.0" width="116.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.3" y="286.0">java/util/conc..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (168 samples, 9.88%)</title><rect x="668.3" y="259.0" width="116.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.3" y="270.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (168 samples, 9.88%)</title><rect x="668.3" y="243.0" width="116.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="671.3" y="254.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.12%)</title><rect x="668.3" y="227.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="671.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2 samples, 0.12%)</title><rect x="668.3" y="211.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="671.3" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.06%)</title><rect x="668.3" y="195.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="671.3" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="668.3" y="179.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="671.3" y="190.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="668.3" y="163.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="671.3" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.06%)</title><rect x="669.0" y="195.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="672.0" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.06%)</title><rect x="669.0" y="179.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="672.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (12 samples, 0.71%)</title><rect x="669.7" y="227.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (12 samples, 0.71%)</title><rect x="669.7" y="211.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="672.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (12 samples, 0.71%)</title><rect x="669.7" y="195.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="672.7" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.12%)</title><rect x="669.7" y="179.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="672.7" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="669.7" y="163.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="672.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (10 samples, 0.59%)</title><rect x="671.1" y="179.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="674.1" y="190.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (7 samples, 0.41%)</title><rect x="671.1" y="163.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="674.1" y="174.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (7 samples, 0.41%)</title><rect x="671.1" y="147.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="674.1" y="158.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="671.1" y="131.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="674.1" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (6 samples, 0.35%)</title><rect x="671.8" y="131.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="674.8" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (6 samples, 0.35%)</title><rect x="671.8" y="115.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="674.8" y="126.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (6 samples, 0.35%)</title><rect x="671.8" y="99.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="674.8" y="110.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (6 samples, 0.35%)</title><rect x="671.8" y="83.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="674.8" y="94.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (6 samples, 0.35%)</title><rect x="671.8" y="67.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="674.8" y="78.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.35%)</title><rect x="671.8" y="51.0" width="4.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="674.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (3 samples, 0.18%)</title><rect x="676.0" y="163.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.0" y="174.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.18%)</title><rect x="676.0" y="147.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.18%)</title><rect x="676.0" y="131.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="679.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer$$Lambda$61/1131838310.act (154 samples, 9.05%)</title><rect x="678.0" y="227.0" width="106.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="681.0" y="238.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.lambda$entity$1 (154 samples, 9.05%)</title><rect x="678.0" y="211.0" width="106.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="681.0" y="222.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ShardedHttpServer.proxy (154 samples, 9.05%)</title><rect x="678.0" y="195.0" width="106.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="681.0" y="206.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (154 samples, 9.05%)</title><rect x="678.0" y="179.0" width="106.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.0" y="190.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (154 samples, 9.05%)</title><rect x="678.0" y="163.0" width="106.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.0" y="174.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (148 samples, 8.70%)</title><rect x="678.0" y="147.0" width="102.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="681.0" y="158.0">one/nio/http..</text>
</g>
<g>
<title>byte[] (68 samples, 4.00%)</title><rect x="678.0" y="131.0" width="47.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="681.0" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (80 samples, 4.70%)</title><rect x="725.2" y="131.0" width="55.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="728.2" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (5 samples, 0.29%)</title><rect x="780.7" y="147.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (3 samples, 0.18%)</title><rect x="780.7" y="131.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="783.7" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.18%)</title><rect x="780.7" y="115.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.7" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.18%)</title><rect x="780.7" y="99.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="783.7" y="110.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.12%)</title><rect x="780.7" y="83.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="783.7" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="782.1" y="83.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="785.1" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="782.1" y="67.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="785.1" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.06%)</title><rect x="782.1" y="51.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.1" y="62.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="782.1" y="35.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="785.1" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.06%)</title><rect x="782.8" y="131.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="785.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.06%)</title><rect x="782.8" y="115.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="785.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.06%)</title><rect x="783.5" y="131.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="783.5" y="115.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="786.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="783.5" y="99.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="786.5" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="783.5" y="83.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.5" y="94.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="783.5" y="67.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="786.5" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.06%)</title><rect x="784.2" y="147.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="787.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="784.2" y="131.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.2" y="142.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="784.2" y="115.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="787.2" y="126.0"></text>
</g>
<g>
<title>[worker tid=24779] (96 samples, 5.64%)</title><rect x="784.9" y="323.0" width="66.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="787.9" y="334.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (96 samples, 5.64%)</title><rect x="784.9" y="307.0" width="66.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="787.9" y="318.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (96 samples, 5.64%)</title><rect x="784.9" y="291.0" width="66.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="787.9" y="302.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (96 samples, 5.64%)</title><rect x="784.9" y="275.0" width="66.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="787.9" y="286.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (96 samples, 5.64%)</title><rect x="784.9" y="259.0" width="66.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="787.9" y="270.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (96 samples, 5.64%)</title><rect x="784.9" y="243.0" width="66.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.9" y="254.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.35%)</title><rect x="784.9" y="227.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="787.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 0.35%)</title><rect x="784.9" y="211.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="787.9" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.12%)</title><rect x="784.9" y="195.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="787.9" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.12%)</title><rect x="784.9" y="179.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="787.9" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="784.9" y="163.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="787.9" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.24%)</title><rect x="786.3" y="195.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="789.3" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4 samples, 0.24%)</title><rect x="786.3" y="179.0" width="2.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="789.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (90 samples, 5.29%)</title><rect x="789.0" y="227.0" width="62.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.0" y="238.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (90 samples, 5.29%)</title><rect x="789.0" y="211.0" width="62.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.0" y="222.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (90 samples, 5.29%)</title><rect x="789.0" y="195.0" width="62.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="792.0" y="206.0">ru/mai..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.06%)</title><rect x="789.0" y="179.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.0" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.06%)</title><rect x="789.0" y="163.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="792.0" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.12%)</title><rect x="789.7" y="179.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="792.7" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.29%)</title><rect x="791.1" y="179.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="794.1" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.24%)</title><rect x="791.1" y="163.0" width="2.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="794.1" y="174.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="793.9" y="163.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="796.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (82 samples, 4.82%)</title><rect x="794.6" y="179.0" width="56.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="797.6" y="190.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="794.6" y="163.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="797.6" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="794.6" y="147.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.6" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.06%)</title><rect x="794.6" y="131.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="797.6" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (73 samples, 4.29%)</title><rect x="795.3" y="163.0" width="50.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="798.3" y="174.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (73 samples, 4.29%)</title><rect x="795.3" y="147.0" width="50.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.3" y="158.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (73 samples, 4.29%)</title><rect x="795.3" y="131.0" width="50.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="798.3" y="142.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (73 samples, 4.29%)</title><rect x="795.3" y="115.0" width="50.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="798.3" y="126.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (73 samples, 4.29%)</title><rect x="795.3" y="99.0" width="50.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.3" y="110.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (73 samples, 4.29%)</title><rect x="795.3" y="83.0" width="50.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.3" y="94.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (73 samples, 4.29%)</title><rect x="795.3" y="67.0" width="50.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="798.3" y="78.0">org/r..</text>
</g>
<g>
<title>byte[] (73 samples, 4.29%)</title><rect x="795.3" y="51.0" width="50.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="798.3" y="62.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (8 samples, 0.47%)</title><rect x="845.9" y="163.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="848.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.18%)</title><rect x="845.9" y="147.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="848.9" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.12%)</title><rect x="845.9" y="131.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="848.9" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="847.3" y="131.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.3" y="142.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="847.3" y="115.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="850.3" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.29%)</title><rect x="848.0" y="147.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="851.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.29%)</title><rect x="848.0" y="131.0" width="3.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="851.0" y="142.0"></text>
</g>
<g>
<title>[worker tid=24780] (96 samples, 5.64%)</title><rect x="851.5" y="323.0" width="66.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="854.5" y="334.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (96 samples, 5.64%)</title><rect x="851.5" y="307.0" width="66.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="854.5" y="318.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (96 samples, 5.64%)</title><rect x="851.5" y="291.0" width="66.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="854.5" y="302.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (96 samples, 5.64%)</title><rect x="851.5" y="275.0" width="66.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.5" y="286.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.18%)</title><rect x="851.5" y="259.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3 samples, 0.18%)</title><rect x="851.5" y="243.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="854.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.18%)</title><rect x="851.5" y="227.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="854.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.18%)</title><rect x="851.5" y="211.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="854.5" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.18%)</title><rect x="851.5" y="195.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="854.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (93 samples, 5.47%)</title><rect x="853.6" y="259.0" width="64.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="856.6" y="270.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (93 samples, 5.47%)</title><rect x="853.6" y="243.0" width="64.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="856.6" y="254.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.59%)</title><rect x="853.6" y="227.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="856.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10 samples, 0.59%)</title><rect x="853.6" y="211.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.47%)</title><rect x="853.6" y="195.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (8 samples, 0.47%)</title><rect x="853.6" y="179.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.6" y="190.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.47%)</title><rect x="853.6" y="163.0" width="5.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="856.6" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.12%)</title><rect x="859.1" y="195.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="862.1" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.12%)</title><rect x="859.1" y="179.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="862.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (83 samples, 4.88%)</title><rect x="860.5" y="227.0" width="57.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="863.5" y="238.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (83 samples, 4.88%)</title><rect x="860.5" y="211.0" width="57.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="863.5" y="222.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (83 samples, 4.88%)</title><rect x="860.5" y="195.0" width="57.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="863.5" y="206.0">ru/mai..</text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="860.5" y="179.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="863.5" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.24%)</title><rect x="861.2" y="179.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.2" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.24%)</title><rect x="861.2" y="163.0" width="2.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="864.2" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.06%)</title><rect x="864.0" y="179.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="867.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.41%)</title><rect x="864.7" y="179.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.7" y="190.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.24%)</title><rect x="864.7" y="163.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="867.7" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.18%)</title><rect x="867.4" y="163.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="870.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (70 samples, 4.12%)</title><rect x="869.5" y="179.0" width="48.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="872.5" y="190.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.18%)</title><rect x="869.5" y="163.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="872.5" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.18%)</title><rect x="869.5" y="147.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="872.5" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.18%)</title><rect x="869.5" y="131.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="872.5" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (63 samples, 3.70%)</title><rect x="871.6" y="163.0" width="43.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="874.6" y="174.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (63 samples, 3.70%)</title><rect x="871.6" y="147.0" width="43.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.6" y="158.0">org/..</text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="871.6" y="131.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="874.6" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (61 samples, 3.59%)</title><rect x="873.0" y="131.0" width="42.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="876.0" y="142.0">org/..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (61 samples, 3.59%)</title><rect x="873.0" y="115.0" width="42.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="876.0" y="126.0">org/..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (61 samples, 3.59%)</title><rect x="873.0" y="99.0" width="42.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.0" y="110.0">org/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (61 samples, 3.59%)</title><rect x="873.0" y="83.0" width="42.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="876.0" y="94.0">org/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (61 samples, 3.59%)</title><rect x="873.0" y="67.0" width="42.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="876.0" y="78.0">org/..</text>
</g>
<g>
<title>byte[] (61 samples, 3.59%)</title><rect x="873.0" y="51.0" width="42.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="876.0" y="62.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (4 samples, 0.24%)</title><rect x="915.3" y="163.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="918.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.12%)</title><rect x="915.3" y="147.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="918.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.12%)</title><rect x="915.3" y="131.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="918.3" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.12%)</title><rect x="916.7" y="147.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.7" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.12%)</title><rect x="916.7" y="131.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="919.7" y="142.0"></text>
</g>
<g>
<title>[worker tid=24781] (93 samples, 5.47%)</title><rect x="918.1" y="323.0" width="64.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="921.1" y="334.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (93 samples, 5.47%)</title><rect x="918.1" y="307.0" width="64.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="921.1" y="318.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (93 samples, 5.47%)</title><rect x="918.1" y="291.0" width="64.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="921.1" y="302.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (93 samples, 5.47%)</title><rect x="918.1" y="275.0" width="64.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="921.1" y="286.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.06%)</title><rect x="918.1" y="259.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="921.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.06%)</title><rect x="918.1" y="243.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="921.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.06%)</title><rect x="918.1" y="227.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.06%)</title><rect x="918.1" y="211.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="921.1" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.06%)</title><rect x="918.1" y="195.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="921.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (92 samples, 5.41%)</title><rect x="918.8" y="259.0" width="63.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="921.8" y="270.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (92 samples, 5.41%)</title><rect x="918.8" y="243.0" width="63.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="921.8" y="254.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 0.29%)</title><rect x="918.8" y="227.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="921.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.29%)</title><rect x="918.8" y="211.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.8" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.24%)</title><rect x="918.8" y="195.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.8" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.24%)</title><rect x="918.8" y="179.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="921.8" y="190.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.24%)</title><rect x="918.8" y="163.0" width="2.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="921.8" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.06%)</title><rect x="921.5" y="195.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="924.5" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.06%)</title><rect x="921.5" y="179.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="924.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (87 samples, 5.11%)</title><rect x="922.2" y="227.0" width="60.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="925.2" y="238.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (87 samples, 5.11%)</title><rect x="922.2" y="211.0" width="60.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="925.2" y="222.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (87 samples, 5.11%)</title><rect x="922.2" y="195.0" width="60.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="925.2" y="206.0">ru/mai..</text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="922.2" y="179.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="925.2" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.06%)</title><rect x="922.9" y="179.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="925.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.35%)</title><rect x="923.6" y="179.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="926.6" y="190.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.18%)</title><rect x="923.6" y="163.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="926.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.06%)</title><rect x="925.7" y="163.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="928.7" y="174.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.12%)</title><rect x="926.4" y="163.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="929.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (79 samples, 4.64%)</title><rect x="927.8" y="179.0" width="54.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="930.8" y="190.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.12%)</title><rect x="927.8" y="163.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="930.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.12%)</title><rect x="927.8" y="147.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="930.8" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.12%)</title><rect x="927.8" y="131.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="930.8" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (68 samples, 4.00%)</title><rect x="929.2" y="163.0" width="47.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="932.2" y="174.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (68 samples, 4.00%)</title><rect x="929.2" y="147.0" width="47.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="932.2" y="158.0">org/..</text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="929.2" y="131.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="932.2" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (67 samples, 3.94%)</title><rect x="929.9" y="131.0" width="46.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="932.9" y="142.0">org/..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (67 samples, 3.94%)</title><rect x="929.9" y="115.0" width="46.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="932.9" y="126.0">org/..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (67 samples, 3.94%)</title><rect x="929.9" y="99.0" width="46.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="932.9" y="110.0">org/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (67 samples, 3.94%)</title><rect x="929.9" y="83.0" width="46.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="932.9" y="94.0">org/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (67 samples, 3.94%)</title><rect x="929.9" y="67.0" width="46.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="932.9" y="78.0">org/..</text>
</g>
<g>
<title>byte[] (67 samples, 3.94%)</title><rect x="929.9" y="51.0" width="46.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="932.9" y="62.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (9 samples, 0.53%)</title><rect x="976.3" y="163.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="979.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.24%)</title><rect x="976.3" y="147.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="979.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.12%)</title><rect x="976.3" y="131.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="979.3" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="977.7" y="131.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="980.7" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="977.7" y="115.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="980.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.29%)</title><rect x="979.1" y="147.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="982.1" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.29%)</title><rect x="979.1" y="131.0" width="3.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="982.1" y="142.0"></text>
</g>
<g>
<title>[worker tid=24782] (99 samples, 5.82%)</title><rect x="982.6" y="323.0" width="68.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="985.6" y="334.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (99 samples, 5.82%)</title><rect x="982.6" y="307.0" width="68.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="985.6" y="318.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (99 samples, 5.82%)</title><rect x="982.6" y="291.0" width="68.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="985.6" y="302.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (99 samples, 5.82%)</title><rect x="982.6" y="275.0" width="68.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="985.6" y="286.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.24%)</title><rect x="982.6" y="259.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="985.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (4 samples, 0.24%)</title><rect x="982.6" y="243.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="985.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 0.24%)</title><rect x="982.6" y="227.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="985.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.24%)</title><rect x="982.6" y="211.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="985.6" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (4 samples, 0.24%)</title><rect x="982.6" y="195.0" width="2.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="985.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (95 samples, 5.58%)</title><rect x="985.4" y="259.0" width="65.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="988.4" y="270.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (95 samples, 5.58%)</title><rect x="985.4" y="243.0" width="65.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="988.4" y="254.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.24%)</title><rect x="985.4" y="227.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="988.4" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4 samples, 0.24%)</title><rect x="985.4" y="211.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="988.4" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.12%)</title><rect x="985.4" y="195.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="988.4" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.12%)</title><rect x="985.4" y="179.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="988.4" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="985.4" y="163.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="988.4" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.12%)</title><rect x="986.7" y="195.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="989.7" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.12%)</title><rect x="986.7" y="179.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="989.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (91 samples, 5.35%)</title><rect x="988.1" y="227.0" width="63.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="991.1" y="238.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (91 samples, 5.35%)</title><rect x="988.1" y="211.0" width="63.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="991.1" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (91 samples, 5.35%)</title><rect x="988.1" y="195.0" width="63.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="991.1" y="206.0">ru/mail..</text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.12%)</title><rect x="988.1" y="179.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="991.1" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.24%)</title><rect x="989.5" y="179.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="992.5" y="190.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="989.5" y="163.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="992.5" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.18%)</title><rect x="990.2" y="163.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="993.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (85 samples, 5.00%)</title><rect x="992.3" y="179.0" width="59.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="995.3" y="190.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (77 samples, 4.53%)</title><rect x="992.3" y="163.0" width="53.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="995.3" y="174.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (77 samples, 4.53%)</title><rect x="992.3" y="147.0" width="53.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="995.3" y="158.0">org/r..</text>
</g>
<g>
<title>byte[] (3 samples, 0.18%)</title><rect x="992.3" y="131.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="995.3" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (74 samples, 4.35%)</title><rect x="994.4" y="131.0" width="51.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="997.4" y="142.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (74 samples, 4.35%)</title><rect x="994.4" y="115.0" width="51.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="997.4" y="126.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (74 samples, 4.35%)</title><rect x="994.4" y="99.0" width="51.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="997.4" y="110.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (74 samples, 4.35%)</title><rect x="994.4" y="83.0" width="51.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="997.4" y="94.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (74 samples, 4.35%)</title><rect x="994.4" y="67.0" width="51.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="997.4" y="78.0">org/r..</text>
</g>
<g>
<title>byte[] (74 samples, 4.35%)</title><rect x="994.4" y="51.0" width="51.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="997.4" y="62.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (8 samples, 0.47%)</title><rect x="1045.7" y="163.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1048.7" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.24%)</title><rect x="1045.7" y="147.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1048.7" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.12%)</title><rect x="1045.7" y="131.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1048.7" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1047.1" y="131.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1050.1" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="1047.1" y="115.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1050.1" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.24%)</title><rect x="1048.5" y="147.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.5" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.24%)</title><rect x="1048.5" y="131.0" width="2.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1051.5" y="142.0"></text>
</g>
<g>
<title>[worker tid=24783] (103 samples, 6.06%)</title><rect x="1051.3" y="323.0" width="71.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1054.3" y="334.0">[worker ..</text>
</g>
<g>
<title>java/lang/Thread.run (103 samples, 6.06%)</title><rect x="1051.3" y="307.0" width="71.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1054.3" y="318.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (103 samples, 6.06%)</title><rect x="1051.3" y="291.0" width="71.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1054.3" y="302.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (103 samples, 6.06%)</title><rect x="1051.3" y="275.0" width="71.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1054.3" y="286.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.12%)</title><rect x="1051.3" y="259.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1054.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.12%)</title><rect x="1051.3" y="243.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1054.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.12%)</title><rect x="1051.3" y="227.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1054.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.12%)</title><rect x="1051.3" y="211.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1054.3" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.12%)</title><rect x="1051.3" y="195.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1054.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (101 samples, 5.94%)</title><rect x="1052.6" y="259.0" width="70.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1055.6" y="270.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (101 samples, 5.94%)</title><rect x="1052.6" y="243.0" width="70.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1055.6" y="254.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 0.41%)</title><rect x="1052.6" y="227.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1055.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 0.41%)</title><rect x="1052.6" y="211.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1055.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.35%)</title><rect x="1052.6" y="195.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1055.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6 samples, 0.35%)</title><rect x="1052.6" y="179.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1055.6" y="190.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.35%)</title><rect x="1052.6" y="163.0" width="4.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1055.6" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.06%)</title><rect x="1056.8" y="195.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1059.8" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.06%)</title><rect x="1056.8" y="179.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1059.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (94 samples, 5.53%)</title><rect x="1057.5" y="227.0" width="65.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1060.5" y="238.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (94 samples, 5.53%)</title><rect x="1057.5" y="211.0" width="65.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1060.5" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (94 samples, 5.53%)</title><rect x="1057.5" y="195.0" width="65.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1060.5" y="206.0">ru/mail..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.06%)</title><rect x="1057.5" y="179.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1060.5" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.06%)</title><rect x="1057.5" y="163.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1060.5" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.06%)</title><rect x="1058.2" y="179.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1061.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.24%)</title><rect x="1058.9" y="179.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1061.9" y="190.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.18%)</title><rect x="1058.9" y="163.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1061.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.06%)</title><rect x="1061.0" y="163.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1064.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (88 samples, 5.17%)</title><rect x="1061.7" y="179.0" width="61.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.7" y="190.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="1061.7" y="163.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.7" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="1061.7" y="147.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.7" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.06%)</title><rect x="1061.7" y="131.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1064.7" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (79 samples, 4.64%)</title><rect x="1062.4" y="163.0" width="54.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1065.4" y="174.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (79 samples, 4.64%)</title><rect x="1062.4" y="147.0" width="54.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1065.4" y="158.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (79 samples, 4.64%)</title><rect x="1062.4" y="131.0" width="54.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1065.4" y="142.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (79 samples, 4.64%)</title><rect x="1062.4" y="115.0" width="54.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1065.4" y="126.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (79 samples, 4.64%)</title><rect x="1062.4" y="99.0" width="54.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1065.4" y="110.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (79 samples, 4.64%)</title><rect x="1062.4" y="83.0" width="54.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1065.4" y="94.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (79 samples, 4.64%)</title><rect x="1062.4" y="67.0" width="54.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1065.4" y="78.0">org/r..</text>
</g>
<g>
<title>byte[] (79 samples, 4.64%)</title><rect x="1062.4" y="51.0" width="54.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1065.4" y="62.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (8 samples, 0.47%)</title><rect x="1117.2" y="163.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1120.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.18%)</title><rect x="1117.2" y="147.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1120.2" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.06%)</title><rect x="1117.2" y="131.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1120.2" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1117.9" y="131.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.9" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="1117.9" y="115.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1120.9" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.29%)</title><rect x="1119.2" y="147.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.2" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.29%)</title><rect x="1119.2" y="131.0" width="3.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1122.2" y="142.0"></text>
</g>
<g>
<title>[worker tid=24784] (97 samples, 5.70%)</title><rect x="1122.7" y="323.0" width="67.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1125.7" y="334.0">[worker..</text>
</g>
<g>
<title>java/lang/Thread.run (97 samples, 5.70%)</title><rect x="1122.7" y="307.0" width="67.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.7" y="318.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (97 samples, 5.70%)</title><rect x="1122.7" y="291.0" width="67.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.7" y="302.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (97 samples, 5.70%)</title><rect x="1122.7" y="275.0" width="67.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1125.7" y="286.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.12%)</title><rect x="1122.7" y="259.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.12%)</title><rect x="1122.7" y="243.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1125.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.12%)</title><rect x="1122.7" y="227.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1125.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.12%)</title><rect x="1122.7" y="211.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.7" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2 samples, 0.12%)</title><rect x="1122.7" y="195.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1125.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$62/300474338.run (95 samples, 5.58%)</title><rect x="1124.1" y="259.0" width="65.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.1" y="270.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$executeAsync$4 (95 samples, 5.58%)</title><rect x="1124.1" y="243.0" width="65.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.1" y="254.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 0.47%)</title><rect x="1124.1" y="227.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1127.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 0.47%)</title><rect x="1124.1" y="211.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1127.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.24%)</title><rect x="1124.1" y="195.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1127.1" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.24%)</title><rect x="1124.1" y="179.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.1" y="190.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.24%)</title><rect x="1124.1" y="163.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1127.1" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 0.24%)</title><rect x="1126.9" y="195.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1129.9" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4 samples, 0.24%)</title><rect x="1126.9" y="179.0" width="2.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1129.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$63/225244074.act (87 samples, 5.11%)</title><rect x="1129.6" y="227.0" width="60.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.6" y="238.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (87 samples, 5.11%)</title><rect x="1129.6" y="211.0" width="60.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1132.6" y="222.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (87 samples, 5.11%)</title><rect x="1129.6" y="195.0" width="60.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1132.6" y="206.0">ru/mai..</text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="1129.6" y="179.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1132.6" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.06%)</title><rect x="1130.3" y="179.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1133.3" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.06%)</title><rect x="1130.3" y="163.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1133.3" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.12%)</title><rect x="1131.0" y="179.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1134.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.24%)</title><rect x="1132.4" y="179.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1135.4" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="1132.4" y="163.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1135.4" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.06%)</title><rect x="1133.8" y="163.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1136.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.06%)</title><rect x="1134.5" y="163.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1137.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (79 samples, 4.64%)</title><rect x="1135.2" y="179.0" width="54.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1138.2" y="190.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.18%)</title><rect x="1135.2" y="163.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.18%)</title><rect x="1135.2" y="147.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1138.2" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.18%)</title><rect x="1135.2" y="131.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1138.2" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (69 samples, 4.06%)</title><rect x="1137.3" y="163.0" width="47.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1140.3" y="174.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (69 samples, 4.06%)</title><rect x="1137.3" y="147.0" width="47.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1140.3" y="158.0">org/..</text>
</g>
<g>
<title>byte[] (1 samples, 0.06%)</title><rect x="1137.3" y="131.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1140.3" y="142.0"></text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (68 samples, 4.00%)</title><rect x="1138.0" y="131.0" width="47.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1141.0" y="142.0">org/..</text>
</g>
<g>
<title>org/rocksdb/util/BytewiseComparator.compare (68 samples, 4.00%)</title><rect x="1138.0" y="115.0" width="47.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1141.0" y="126.0">org/..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (68 samples, 4.00%)</title><rect x="1138.0" y="99.0" width="47.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.0" y="110.0">org/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (68 samples, 4.00%)</title><rect x="1138.0" y="83.0" width="47.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.0" y="94.0">org/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (68 samples, 4.00%)</title><rect x="1138.0" y="67.0" width="47.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.0" y="78.0">org/..</text>
</g>
<g>
<title>byte[] (68 samples, 4.00%)</title><rect x="1138.0" y="51.0" width="47.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1141.0" y="62.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.deepCopy (7 samples, 0.41%)</title><rect x="1185.1" y="163.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.1" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.29%)</title><rect x="1185.1" y="147.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1188.1" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.18%)</title><rect x="1185.1" y="131.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1188.1" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1187.2" y="131.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1190.2" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.12%)</title><rect x="1187.2" y="115.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1190.2" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.12%)</title><rect x="1188.6" y="147.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.6" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.12%)</title><rect x="1188.6" y="131.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1191.6" y="142.0"></text>
</g>
</g>
</svg>
