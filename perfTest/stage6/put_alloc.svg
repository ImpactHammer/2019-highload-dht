<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="421"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="421"> </text>
<g id="frames">
<g>
<title>all (6,931 samples, 100.00%)</title><rect x="10.0" y="387.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="398.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (937 samples, 13.52%)</title><rect x="10.2" y="371.0" width="159.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.2" y="382.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (937 samples, 13.52%)</title><rect x="10.2" y="355.0" width="159.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.2" y="366.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (937 samples, 13.52%)</title><rect x="10.2" y="339.0" width="159.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.2" y="350.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (69 samples, 1.00%)</title><rect x="10.2" y="323.0" width="11.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (69 samples, 1.00%)</title><rect x="10.2" y="307.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (69 samples, 1.00%)</title><rect x="10.2" y="291.0" width="11.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (69 samples, 1.00%)</title><rect x="10.2" y="275.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.2" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (69 samples, 1.00%)</title><rect x="10.2" y="259.0" width="11.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="13.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils$$Lambda$65/242317984.run (868 samples, 12.52%)</title><rect x="21.9" y="323.0" width="147.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.9" y="334.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils.lambda$executeAsync$0 (868 samples, 12.52%)</title><rect x="21.9" y="307.0" width="147.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.9" y="318.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (302 samples, 4.36%)</title><rect x="21.9" y="291.0" width="51.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.9" y="302.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (302 samples, 4.36%)</title><rect x="21.9" y="275.0" width="51.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.9" y="286.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (263 samples, 3.79%)</title><rect x="21.9" y="259.0" width="44.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.9" y="270.0">one/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (263 samples, 3.79%)</title><rect x="21.9" y="243.0" width="44.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.9" y="254.0">one/..</text>
</g>
<g>
<title>byte[] (263 samples, 3.79%)</title><rect x="21.9" y="227.0" width="44.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="24.9" y="238.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 0.56%)</title><rect x="66.7" y="259.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.7" y="270.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (39 samples, 0.56%)</title><rect x="66.7" y="243.0" width="6.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="69.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$67/1101195589.act (566 samples, 8.17%)</title><rect x="73.3" y="291.0" width="96.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.3" y="302.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$2 (566 samples, 8.17%)</title><rect x="73.3" y="275.0" width="96.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.3" y="286.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.putMethodWrapper (566 samples, 8.17%)</title><rect x="73.3" y="259.0" width="96.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.3" y="270.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (71 samples, 1.02%)</title><rect x="73.3" y="243.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (71 samples, 1.02%)</title><rect x="73.3" y="227.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.3" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (71 samples, 1.02%)</title><rect x="73.3" y="211.0" width="12.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="76.3" y="222.0"></text>
</g>
<g>
<title>one.nio.http.Response (79 samples, 1.14%)</title><rect x="85.4" y="243.0" width="13.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="88.4" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (156 samples, 2.25%)</title><rect x="98.9" y="243.0" width="26.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.9" y="254.0">o..</text>
</g>
<g>
<title>byte[] (89 samples, 1.28%)</title><rect x="98.9" y="227.0" width="15.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="101.9" y="238.0"></text>
</g>
<g>
<title>java.lang.String[] (42 samples, 0.61%)</title><rect x="114.0" y="227.0" width="7.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="117.0" y="238.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.36%)</title><rect x="121.2" y="227.0" width="4.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="124.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (88 samples, 1.27%)</title><rect x="125.4" y="243.0" width="15.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="128.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksUtils.toArrayShifted (88 samples, 1.27%)</title><rect x="125.4" y="227.0" width="15.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.4" y="238.0"></text>
</g>
<g>
<title>byte[] (88 samples, 1.27%)</title><rect x="125.4" y="211.0" width="15.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="128.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TimestampRecord.&lt;init&gt; (93 samples, 1.34%)</title><rect x="140.4" y="243.0" width="15.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TimestampRecord.&lt;init&gt; (93 samples, 1.34%)</title><rect x="140.4" y="227.0" width="15.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.4" y="238.0"></text>
</g>
<g>
<title>byte[] (93 samples, 1.34%)</title><rect x="140.4" y="211.0" width="15.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="143.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TimestampRecord.toByteArray (79 samples, 1.14%)</title><rect x="156.2" y="243.0" width="13.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="159.2" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (79 samples, 1.14%)</title><rect x="156.2" y="227.0" width="13.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.2" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (79 samples, 1.14%)</title><rect x="156.2" y="211.0" width="13.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="159.2" y="222.0"></text>
</g>
<g>
<title>byte[] (79 samples, 1.14%)</title><rect x="156.2" y="195.0" width="13.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="159.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,439 samples, 20.76%)</title><rect x="169.7" y="371.0" width="245.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.7" y="382.0">java/util/concurrent/ForkJoinWor..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,439 samples, 20.76%)</title><rect x="169.7" y="355.0" width="245.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.7" y="366.0">java/util/concurrent/ForkJoinPoo..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1,439 samples, 20.76%)</title><rect x="169.7" y="339.0" width="245.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.7" y="350.0">java/util/concurrent/ForkJoinPoo..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (1,439 samples, 20.76%)</title><rect x="169.7" y="323.0" width="245.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="172.7" y="334.0">java/util/concurrent/ForkJoinPoo..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (1,439 samples, 20.76%)</title><rect x="169.7" y="307.0" width="245.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.7" y="318.0">java/util/concurrent/ForkJoinTas..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (1,439 samples, 20.76%)</title><rect x="169.7" y="291.0" width="245.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.7" y="302.0">java/util/concurrent/Completable..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,439 samples, 20.76%)</title><rect x="169.7" y="275.0" width="245.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="172.7" y="286.0">java/util/concurrent/Completable..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils$$Lambda$61/1866776169.get (22 samples, 0.32%)</title><rect x="169.7" y="259.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils.lambda$processDirect$2 (22 samples, 0.32%)</title><rect x="169.7" y="243.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils.handleLocal (22 samples, 0.32%)</title><rect x="169.7" y="227.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="172.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.06%)</title><rect x="169.7" y="211.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.06%)</title><rect x="169.7" y="195.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.06%)</title><rect x="169.7" y="179.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="172.7" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.07%)</title><rect x="170.4" y="211.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.4" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.07%)</title><rect x="170.4" y="195.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.4" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.07%)</title><rect x="170.4" y="179.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="173.4" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.07%)</title><rect x="170.4" y="163.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.4" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.07%)</title><rect x="170.4" y="147.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="173.4" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="170.4" y="131.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="173.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.upsert (4 samples, 0.06%)</title><rect x="171.2" y="211.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="174.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksUtils.toArrayShifted (4 samples, 0.06%)</title><rect x="171.2" y="195.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.2" y="206.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="171.2" y="179.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="174.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TimestampRecord.&lt;init&gt; (4 samples, 0.06%)</title><rect x="171.9" y="211.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="174.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TimestampRecord.&lt;init&gt; (4 samples, 0.06%)</title><rect x="171.9" y="195.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.9" y="206.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="171.9" y="179.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="174.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TimestampRecord.fromByteArray (4 samples, 0.06%)</title><rect x="172.6" y="211.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="175.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TimestampRecord.&lt;init&gt; (2 samples, 0.03%)</title><rect x="172.9" y="195.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TimestampRecord.&lt;init&gt; (2 samples, 0.03%)</title><rect x="172.9" y="179.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="175.9" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="172.9" y="163.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="175.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils$$Lambda$63/2131704469.get (1,417 samples, 20.44%)</title><rect x="173.4" y="259.0" width="241.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="176.4" y="270.0">ru/mail/polis/service/impl/Serve..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils.lambda$processDirect$3 (1,417 samples, 20.44%)</title><rect x="173.4" y="243.0" width="241.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.4" y="254.0">ru/mail/polis/service/impl/Serve..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils.handleRemote (1,417 samples, 20.44%)</title><rect x="173.4" y="227.0" width="241.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="176.4" y="238.0">ru/mail/polis/service/impl/Serve..</text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.03%)</title><rect x="173.6" y="211.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="176.6" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.04%)</title><rect x="174.0" y="211.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="177.0" y="222.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (4 samples, 0.06%)</title><rect x="174.5" y="211.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.5" y="222.0"></text>
</g>
<g>
<title>java.lang.Integer (4 samples, 0.06%)</title><rect x="174.5" y="195.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="177.5" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.12%)</title><rect x="175.1" y="211.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="178.1" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.12%)</title><rect x="175.1" y="195.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.1" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.12%)</title><rect x="175.1" y="179.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.1" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.12%)</title><rect x="175.1" y="163.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.1" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.12%)</title><rect x="175.1" y="147.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.1" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.12%)</title><rect x="175.1" y="131.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="178.1" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (6 samples, 0.09%)</title><rect x="176.5" y="211.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="179.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.09%)</title><rect x="176.5" y="195.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="179.5" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.09%)</title><rect x="176.5" y="179.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="179.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,393 samples, 20.10%)</title><rect x="177.5" y="211.0" width="237.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="180.5" y="222.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,393 samples, 20.10%)</title><rect x="177.5" y="195.0" width="237.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="180.5" y="206.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (1,336 samples, 19.28%)</title><rect x="177.7" y="179.0" width="227.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="180.7" y="190.0">one/nio/http/HttpClient$Respon..</text>
</g>
<g>
<title>byte[] (673 samples, 9.71%)</title><rect x="177.7" y="163.0" width="114.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="180.7" y="174.0">byte[]</text>
</g>
<g>
<title>byte[] (663 samples, 9.57%)</title><rect x="292.3" y="163.0" width="112.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="295.3" y="174.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (46 samples, 0.66%)</title><rect x="405.1" y="179.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="408.1" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="405.3" y="163.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="408.3" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="405.3" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="408.3" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="405.3" y="131.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="408.3" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="405.3" y="115.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="408.3" y="126.0"></text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.07%)</title><rect x="405.7" y="163.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="408.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (32 samples, 0.46%)</title><rect x="406.5" y="163.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="409.5" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.46%)</title><rect x="406.5" y="147.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="409.5" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (32 samples, 0.46%)</title><rect x="406.5" y="131.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="409.5" y="142.0"></text>
</g>
<g>
<title>char[] (22 samples, 0.32%)</title><rect x="406.5" y="115.0" width="3.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="409.5" y="126.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.06%)</title><rect x="410.3" y="115.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="413.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.09%)</title><rect x="410.9" y="115.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.9" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.09%)</title><rect x="410.9" y="99.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="413.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.09%)</title><rect x="410.9" y="83.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="413.9" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.09%)</title><rect x="410.9" y="67.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="413.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.07%)</title><rect x="412.1" y="163.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="415.1" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.07%)</title><rect x="412.1" y="147.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="415.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.07%)</title><rect x="412.1" y="131.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="415.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="412.1" y="115.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="415.1" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="412.6" y="115.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.6" y="126.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="412.6" y="99.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="415.6" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (8 samples, 0.12%)</title><rect x="413.0" y="179.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.0" y="190.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (8 samples, 0.12%)</title><rect x="413.0" y="163.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.0" y="174.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.12%)</title><rect x="413.0" y="147.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="416.0" y="158.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (945 samples, 13.63%)</title><rect x="414.7" y="371.0" width="160.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.7" y="382.0">one/nio/server/Accep..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (5 samples, 0.07%)</title><rect x="414.7" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.7" y="366.0"></text>
</g>
<g>
<title>one.nio.net.NativeSocket (5 samples, 0.07%)</title><rect x="414.7" y="339.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="417.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.createSession (940 samples, 13.56%)</title><rect x="415.5" y="355.0" width="160.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="418.5" y="366.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.createSession (940 samples, 13.56%)</title><rect x="415.5" y="339.0" width="160.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="418.5" y="350.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru.mail.polis.service.impl.StorageSession (15 samples, 0.22%)</title><rect x="415.5" y="323.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="418.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/StorageSession.&lt;init&gt; (925 samples, 13.35%)</title><rect x="418.1" y="323.0" width="157.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="421.1" y="334.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (925 samples, 13.35%)</title><rect x="418.1" y="307.0" width="157.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="421.1" y="318.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>byte[] (263 samples, 3.79%)</title><rect x="418.1" y="291.0" width="44.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="421.1" y="302.0">byte[]</text>
</g>
<g>
<title>byte[] (662 samples, 9.55%)</title><rect x="462.9" y="291.0" width="112.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="465.9" y="302.0">byte[]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,609 samples, 52.07%)</title><rect x="575.6" y="371.0" width="614.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="578.6" y="382.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (75 samples, 1.08%)</title><rect x="575.6" y="355.0" width="12.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.6" y="366.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (75 samples, 1.08%)</title><rect x="575.6" y="339.0" width="12.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="578.6" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.handleException (10 samples, 0.14%)</title><rect x="588.3" y="355.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.03%)</title><rect x="588.7" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="588.7" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.7" y="334.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="588.7" y="307.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="591.7" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.getRemoteHost (3 samples, 0.04%)</title><rect x="589.0" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.0" y="350.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.getRemoteAddress (2 samples, 0.03%)</title><rect x="589.2" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="592.2" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.makeAddress (2 samples, 0.03%)</title><rect x="589.2" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.2" y="318.0"></text>
</g>
<g>
<title>org/apache/commons/logging/impl/Log4JLogger.error (3 samples, 0.04%)</title><rect x="589.5" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.5" y="350.0"></text>
</g>
<g>
<title>org/apache/log4j/Category.log (3 samples, 0.04%)</title><rect x="589.5" y="323.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="592.5" y="334.0"></text>
</g>
<g>
<title>org/apache/log4j/Category.forcedLog (3 samples, 0.04%)</title><rect x="589.5" y="307.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.5" y="318.0"></text>
</g>
<g>
<title>org.apache.log4j.spi.LoggingEvent (3 samples, 0.04%)</title><rect x="589.5" y="291.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="592.5" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,524 samples, 50.84%)</title><rect x="590.0" y="355.0" width="600.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.0" y="366.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,524 samples, 50.84%)</title><rect x="590.0" y="339.0" width="600.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.0" y="350.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,510 samples, 50.64%)</title><rect x="590.0" y="323.0" width="597.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="593.0" y="334.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,795 samples, 25.90%)</title><rect x="590.0" y="307.0" width="305.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.0" y="318.0">one/nio/http/HttpSession.handleParsedRequ..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,795 samples, 25.90%)</title><rect x="590.0" y="291.0" width="305.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.0" y="302.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1,637 samples, 23.62%)</title><rect x="590.0" y="275.0" width="278.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="593.0" y="286.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (218 samples, 3.15%)</title><rect x="590.0" y="259.0" width="37.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.0" y="270.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (218 samples, 3.15%)</title><rect x="590.0" y="243.0" width="37.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.0" y="254.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (218 samples, 3.15%)</title><rect x="590.0" y="227.0" width="37.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.0" y="238.0">jav..</text>
</g>
<g>
<title>java.lang.String (111 samples, 1.60%)</title><rect x="590.0" y="211.0" width="18.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="593.0" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (107 samples, 1.54%)</title><rect x="608.9" y="211.0" width="18.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.9" y="222.0"></text>
</g>
<g>
<title>byte[] (107 samples, 1.54%)</title><rect x="608.9" y="195.0" width="18.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="611.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (1,419 samples, 20.47%)</title><rect x="627.2" y="259.0" width="241.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.2" y="270.0">ru/mail/polis/service/impl/Async..</text>
</g>
<g>
<title>java/lang/String.getBytes (88 samples, 1.27%)</title><rect x="627.2" y="243.0" width="14.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.2" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (88 samples, 1.27%)</title><rect x="627.2" y="227.0" width="14.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="630.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (88 samples, 1.27%)</title><rect x="627.2" y="211.0" width="14.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.2" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (88 samples, 1.27%)</title><rect x="627.2" y="195.0" width="14.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.2" y="206.0"></text>
</g>
<g>
<title>byte[] (88 samples, 1.27%)</title><rect x="627.2" y="179.0" width="14.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="630.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (56 samples, 0.81%)</title><rect x="642.1" y="243.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="645.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (56 samples, 0.81%)</title><rect x="642.1" y="227.0" width="9.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$67/1101195589.get$Lambda (56 samples, 0.81%)</title><rect x="642.1" y="211.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.1" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.AsyncHttpServer$$Lambda$67 (56 samples, 0.81%)</title><rect x="642.1" y="195.0" width="9.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="645.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (127 samples, 1.83%)</title><rect x="651.7" y="243.0" width="21.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.7" y="254.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (127 samples, 1.83%)</title><rect x="651.7" y="227.0" width="21.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.7" y="238.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (127 samples, 1.83%)</title><rect x="651.7" y="211.0" width="21.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="654.7" y="222.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils.executeAsync (195 samples, 2.81%)</title><rect x="673.3" y="243.0" width="33.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.3" y="254.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.66%)</title><rect x="673.3" y="227.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="676.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.66%)</title><rect x="673.3" y="211.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils$$Lambda$65/242317984.get$Lambda (46 samples, 0.66%)</title><rect x="673.3" y="195.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.3" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.ServerUtils$$Lambda$65 (46 samples, 0.66%)</title><rect x="673.3" y="179.0" width="7.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="676.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (149 samples, 2.15%)</title><rect x="681.1" y="227.0" width="25.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.1" y="238.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.reject (67 samples, 0.97%)</title><rect x="681.1" y="211.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$AbortPolicy.rejectedExecution (67 samples, 0.97%)</title><rect x="681.1" y="195.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.1" y="206.0"></text>
</g>
<g>
<title>java/lang/Object.toString (10 samples, 0.14%)</title><rect x="681.3" y="179.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="684.3" y="190.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (2 samples, 0.03%)</title><rect x="681.3" y="163.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.3" y="174.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (2 samples, 0.03%)</title><rect x="681.3" y="147.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.3" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.07%)</title><rect x="681.6" y="163.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.6" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.07%)</title><rect x="681.6" y="147.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="684.6" y="158.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.07%)</title><rect x="681.6" y="131.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="684.6" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.07%)</title><rect x="681.6" y="115.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.6" y="126.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.07%)</title><rect x="681.6" y="99.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="684.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.04%)</title><rect x="682.5" y="163.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.5" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="682.5" y="147.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.5" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="682.7" y="131.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.7" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="682.7" y="115.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="685.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (20 samples, 0.29%)</title><rect x="683.0" y="179.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.0" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (20 samples, 0.29%)</title><rect x="683.0" y="163.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.0" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (20 samples, 0.29%)</title><rect x="683.0" y="147.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.0" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 0.29%)</title><rect x="683.0" y="131.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="686.0" y="142.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.22%)</title><rect x="683.0" y="115.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="686.0" y="126.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.07%)</title><rect x="685.6" y="115.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="688.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (10 samples, 0.14%)</title><rect x="686.4" y="179.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="689.4" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.14%)</title><rect x="686.4" y="163.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="689.4" y="174.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="686.4" y="147.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="689.4" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.10%)</title><rect x="686.9" y="147.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.9" y="158.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.09%)</title><rect x="686.9" y="131.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="689.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/RejectedExecutionException.&lt;init&gt; (9 samples, 0.13%)</title><rect x="688.1" y="179.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.1" y="190.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (9 samples, 0.13%)</title><rect x="688.1" y="163.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.1" y="174.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (9 samples, 0.13%)</title><rect x="688.1" y="147.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.1" y="158.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (9 samples, 0.13%)</title><rect x="688.1" y="131.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.1" y="142.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (9 samples, 0.13%)</title><rect x="688.1" y="115.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.1" y="126.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (9 samples, 0.13%)</title><rect x="688.1" y="99.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.1" y="110.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.03%)</title><rect x="688.1" y="83.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="691.1" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="688.4" y="83.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="691.4" y="94.0"></text>
</g>
<g>
<title>long[] (4 samples, 0.06%)</title><rect x="688.8" y="83.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="691.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.toString (17 samples, 0.25%)</title><rect x="689.6" y="179.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.6" y="190.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.03%)</title><rect x="689.6" y="163.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="692.6" y="174.0"></text>
</g>
<g>
<title>java/lang/Object.toString (8 samples, 0.12%)</title><rect x="690.0" y="163.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.0" y="174.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.03%)</title><rect x="690.0" y="147.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="693.0" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="690.5" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.5" y="158.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="690.5" y="131.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="693.5" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="690.5" y="115.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="693.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.04%)</title><rect x="690.8" y="147.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="690.8" y="131.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="693.8" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="691.0" y="115.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.0" y="126.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="691.0" y="99.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="694.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.04%)</title><rect x="691.3" y="163.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.3" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.04%)</title><rect x="691.3" y="147.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.3" y="158.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.04%)</title><rect x="691.3" y="131.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.3" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.04%)</title><rect x="691.3" y="115.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.3" y="126.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="691.3" y="99.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="694.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.06%)</title><rect x="691.8" y="163.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.8" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="691.8" y="147.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.8" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.06%)</title><rect x="691.8" y="131.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="694.8" y="142.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="691.8" y="115.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="694.8" y="126.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (82 samples, 1.18%)</title><rect x="692.5" y="211.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.5" y="222.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (82 samples, 1.18%)</title><rect x="692.5" y="195.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (82 samples, 1.18%)</title><rect x="692.5" y="179.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (82 samples, 1.18%)</title><rect x="692.5" y="163.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (82 samples, 1.18%)</title><rect x="692.5" y="147.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.5" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (82 samples, 1.18%)</title><rect x="692.5" y="131.0" width="14.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="695.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils.processDirect (953 samples, 13.75%)</title><rect x="706.5" y="243.0" width="162.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.5" y="254.0">ru/mail/polis/service..</text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.12%)</title><rect x="706.5" y="227.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="709.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1482894374.linkToTargetMethod (15 samples, 0.22%)</title><rect x="708.0" y="227.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="711.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1133295081.invokeStatic (15 samples, 0.22%)</title><rect x="708.0" y="211.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils$$Lambda$61/1866776169.get$Lambda (4 samples, 0.06%)</title><rect x="708.0" y="195.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.0" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.ServerUtils$$Lambda$61 (4 samples, 0.06%)</title><rect x="708.0" y="179.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="711.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils$$Lambda$63/2131704469.get$Lambda (11 samples, 0.16%)</title><rect x="708.7" y="195.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="711.7" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.ServerUtils$$Lambda$63 (11 samples, 0.16%)</title><rect x="708.7" y="179.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="711.7" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.14%)</title><rect x="710.6" y="227.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.6" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.14%)</title><rect x="710.6" y="211.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.6" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.14%)</title><rect x="710.6" y="195.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.6" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.14%)</title><rect x="710.6" y="179.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="713.6" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.14%)</title><rect x="710.6" y="163.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="713.6" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.14%)</title><rect x="710.6" y="147.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="713.6" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (5 samples, 0.07%)</title><rect x="712.3" y="227.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="715.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture[] (5 samples, 0.07%)</title><rect x="712.3" y="211.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="715.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (32 samples, 0.46%)</title><rect x="713.1" y="227.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (32 samples, 0.46%)</title><rect x="713.1" y="211.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="716.1" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (8 samples, 0.12%)</title><rect x="713.1" y="195.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="716.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (2 samples, 0.03%)</title><rect x="714.5" y="195.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="717.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (17 samples, 0.25%)</title><rect x="714.8" y="195.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="717.8" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (11 samples, 0.16%)</title><rect x="714.8" y="179.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="717.8" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (3 samples, 0.04%)</title><rect x="716.7" y="179.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="719.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.bipush (3 samples, 0.04%)</title><rect x="717.2" y="179.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="720.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$CoCompletion (3 samples, 0.04%)</title><rect x="717.2" y="163.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="720.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.bipush (5 samples, 0.07%)</title><rect x="717.7" y="195.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="720.7" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$CoCompletion (5 samples, 0.07%)</title><rect x="717.7" y="179.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="720.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (13 samples, 0.19%)</title><rect x="718.6" y="227.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (13 samples, 0.19%)</title><rect x="718.6" y="211.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="721.6" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (13 samples, 0.19%)</title><rect x="718.6" y="195.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="721.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (30 samples, 0.43%)</title><rect x="720.8" y="227.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="723.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (30 samples, 0.43%)</title><rect x="720.8" y="211.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="723.8" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (13 samples, 0.19%)</title><rect x="720.8" y="195.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="723.8" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (17 samples, 0.25%)</title><rect x="723.0" y="195.0" width="2.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="726.0" y="206.0"></text>
</g>
<g>
<title>one.nio.http.Response (10 samples, 0.14%)</title><rect x="725.9" y="227.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="728.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendError (7 samples, 0.10%)</title><rect x="727.6" y="227.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 0.07%)</title><rect x="727.6" y="211.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.07%)</title><rect x="727.6" y="195.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.07%)</title><rect x="727.6" y="179.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.6" y="190.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.07%)</title><rect x="727.6" y="163.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="730.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.03%)</title><rect x="728.5" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="731.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (24 samples, 0.35%)</title><rect x="728.8" y="227.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (24 samples, 0.35%)</title><rect x="728.8" y="211.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="731.8" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (15 samples, 0.22%)</title><rect x="728.8" y="195.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.8" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (15 samples, 0.22%)</title><rect x="728.8" y="179.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.8" y="190.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.22%)</title><rect x="728.8" y="163.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="731.8" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 0.13%)</title><rect x="731.3" y="195.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.3" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (9 samples, 0.13%)</title><rect x="731.3" y="179.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="734.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (15 samples, 0.22%)</title><rect x="732.9" y="227.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.9" y="238.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.10%)</title><rect x="732.9" y="211.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="735.9" y="222.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.04%)</title><rect x="734.1" y="211.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="737.1" y="222.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.07%)</title><rect x="734.6" y="211.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="737.6" y="222.0"></text>
</g>
<g>
<title>org.apache.http.client.utils.URIBuilder (25 samples, 0.36%)</title><rect x="735.4" y="227.0" width="4.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="738.4" y="238.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URIBuilder.&lt;init&gt; (315 samples, 4.54%)</title><rect x="739.7" y="227.0" width="53.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="742.7" y="238.0">org/a..</text>
</g>
<g>
<title>java.net.URI (9 samples, 0.13%)</title><rect x="739.7" y="211.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="742.7" y="222.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (24 samples, 0.35%)</title><rect x="741.2" y="211.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.2" y="222.0"></text>
</g>
<g>
<title>java.net.URI$Parser (9 samples, 0.13%)</title><rect x="741.2" y="195.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="744.2" y="206.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (15 samples, 0.22%)</title><rect x="742.8" y="195.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.8" y="206.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (15 samples, 0.22%)</title><rect x="742.8" y="179.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.8" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.22%)</title><rect x="742.8" y="163.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.8" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.22%)</title><rect x="742.8" y="147.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="745.8" y="158.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.06%)</title><rect x="742.8" y="131.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="745.8" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.16%)</title><rect x="743.4" y="131.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.4" y="142.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.16%)</title><rect x="743.4" y="115.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="746.4" y="126.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URIBuilder.digestURI (282 samples, 4.07%)</title><rect x="745.3" y="211.0" width="48.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="748.3" y="222.0">org/..</text>
</g>
<g>
<title>org/apache/http/client/utils/URIBuilder.parsePath (114 samples, 1.64%)</title><rect x="745.3" y="195.0" width="19.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="748.3" y="206.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.parsePathSegments (114 samples, 1.64%)</title><rect x="745.3" y="179.0" width="19.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="748.3" y="190.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.splitPathSegments (41 samples, 0.59%)</title><rect x="745.3" y="163.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="748.3" y="174.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.splitSegments (41 samples, 0.59%)</title><rect x="745.3" y="147.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.3" y="158.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (7 samples, 0.10%)</title><rect x="745.3" y="131.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="748.3" y="142.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.09%)</title><rect x="746.5" y="131.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="749.5" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (7 samples, 0.10%)</title><rect x="747.5" y="131.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="750.5" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.10%)</title><rect x="747.5" y="115.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.5" y="126.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.10%)</title><rect x="747.5" y="99.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="750.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (13 samples, 0.19%)</title><rect x="748.7" y="131.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.19%)</title><rect x="748.7" y="115.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="751.7" y="126.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.07%)</title><rect x="748.7" y="99.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="751.7" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.12%)</title><rect x="749.6" y="99.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.6" y="110.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.12%)</title><rect x="749.6" y="83.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="752.6" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.12%)</title><rect x="750.9" y="131.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.9" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.12%)</title><rect x="750.9" y="115.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="753.9" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.12%)</title><rect x="750.9" y="99.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.9" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.12%)</title><rect x="750.9" y="83.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="753.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.12%)</title><rect x="750.9" y="67.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.9" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.12%)</title><rect x="750.9" y="51.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="753.9" y="62.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.urlDecode (73 samples, 1.05%)</title><rect x="752.3" y="163.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.3" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (30 samples, 0.43%)</title><rect x="752.3" y="147.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="755.3" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.29%)</title><rect x="752.3" y="131.0" width="3.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="755.3" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.14%)</title><rect x="755.7" y="131.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="758.7" y="142.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.14%)</title><rect x="755.7" y="115.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="758.7" y="126.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.toString (15 samples, 0.22%)</title><rect x="757.4" y="147.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="760.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.toString (15 samples, 0.22%)</title><rect x="757.4" y="131.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.09%)</title><rect x="757.4" y="115.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="760.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.13%)</title><rect x="758.4" y="115.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="761.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.13%)</title><rect x="758.4" y="99.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.13%)</title><rect x="758.4" y="83.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="761.4" y="94.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.13%)</title><rect x="758.4" y="67.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="761.4" y="78.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (28 samples, 0.40%)</title><rect x="759.9" y="147.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.9" y="158.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (28 samples, 0.40%)</title><rect x="759.9" y="131.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="762.9" y="142.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (28 samples, 0.40%)</title><rect x="759.9" y="115.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.9" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (17 samples, 0.25%)</title><rect x="759.9" y="99.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="762.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.&lt;init&gt; (11 samples, 0.16%)</title><rect x="762.8" y="99.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="765.8" y="110.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.16%)</title><rect x="762.8" y="83.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="765.8" y="94.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URIBuilder.parseQuery (168 samples, 2.42%)</title><rect x="764.7" y="195.0" width="28.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="767.7" y="206.0">or..</text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.parse (168 samples, 2.42%)</title><rect x="764.7" y="179.0" width="28.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="767.7" y="190.0">or..</text>
</g>
<g>
<title>char[] (9 samples, 0.13%)</title><rect x="764.7" y="163.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="767.7" y="174.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.parse (152 samples, 2.19%)</title><rect x="766.4" y="163.0" width="25.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.4" y="174.0">o..</text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.04%)</title><rect x="766.4" y="147.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="769.4" y="158.0"></text>
</g>
<g>
<title>java.util.BitSet (4 samples, 0.06%)</title><rect x="766.9" y="147.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="769.9" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.07%)</title><rect x="767.6" y="147.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="770.6" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.07%)</title><rect x="767.6" y="131.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="770.6" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.07%)</title><rect x="767.6" y="115.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="770.6" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.07%)</title><rect x="767.6" y="99.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="770.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.07%)</title><rect x="767.6" y="83.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="770.6" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.07%)</title><rect x="767.6" y="67.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="770.6" y="78.0"></text>
</g>
<g>
<title>java/util/BitSet.&lt;init&gt; (4 samples, 0.06%)</title><rect x="768.5" y="147.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.5" y="158.0"></text>
</g>
<g>
<title>java/util/BitSet.initWords (4 samples, 0.06%)</title><rect x="768.5" y="131.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="771.5" y="142.0"></text>
</g>
<g>
<title>long[] (4 samples, 0.06%)</title><rect x="768.5" y="115.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="771.5" y="126.0"></text>
</g>
<g>
<title>org.apache.http.message.BasicNameValuePair (4 samples, 0.06%)</title><rect x="769.1" y="147.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="772.1" y="158.0"></text>
</g>
<g>
<title>org.apache.http.message.ParserCursor (9 samples, 0.13%)</title><rect x="769.8" y="147.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="772.8" y="158.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.decodeFormFields (83 samples, 1.20%)</title><rect x="771.4" y="147.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="774.4" y="158.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.urlDecode (83 samples, 1.20%)</title><rect x="771.4" y="131.0" width="14.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="774.4" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (30 samples, 0.43%)</title><rect x="771.4" y="115.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="774.4" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16 samples, 0.23%)</title><rect x="771.4" y="99.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="774.4" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.20%)</title><rect x="774.1" y="99.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.1" y="110.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.20%)</title><rect x="774.1" y="83.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="777.1" y="94.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.toString (19 samples, 0.27%)</title><rect x="776.5" y="115.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.toString (19 samples, 0.27%)</title><rect x="776.5" y="99.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.16%)</title><rect x="776.5" y="83.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="779.5" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.12%)</title><rect x="778.3" y="83.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.3" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.12%)</title><rect x="778.3" y="67.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.3" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.12%)</title><rect x="778.3" y="51.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="781.3" y="62.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.12%)</title><rect x="778.3" y="35.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="781.3" y="46.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (34 samples, 0.49%)</title><rect x="779.7" y="115.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="782.7" y="126.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (34 samples, 0.49%)</title><rect x="779.7" y="99.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.7" y="110.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (34 samples, 0.49%)</title><rect x="779.7" y="83.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (25 samples, 0.36%)</title><rect x="779.7" y="67.0" width="4.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="782.7" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.&lt;init&gt; (9 samples, 0.13%)</title><rect x="784.0" y="67.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="787.0" y="78.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.13%)</title><rect x="784.0" y="51.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="787.0" y="62.0"></text>
</g>
<g>
<title>org/apache/http/message/TokenParser.parseToken (40 samples, 0.58%)</title><rect x="785.5" y="147.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.5" y="158.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (14 samples, 0.20%)</title><rect x="785.5" y="131.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="788.5" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (10 samples, 0.14%)</title><rect x="787.9" y="131.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="790.9" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (10 samples, 0.14%)</title><rect x="787.9" y="115.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="790.9" y="126.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.14%)</title><rect x="787.9" y="99.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="790.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (16 samples, 0.23%)</title><rect x="789.6" y="131.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.23%)</title><rect x="789.6" y="115.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.6" y="126.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.16%)</title><rect x="789.6" y="99.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="792.6" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.07%)</title><rect x="791.4" y="99.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.4" y="110.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.07%)</title><rect x="791.4" y="83.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="794.4" y="94.0"></text>
</g>
<g>
<title>org/apache/http/util/CharArrayBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="792.3" y="163.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="795.3" y="174.0"></text>
</g>
<g>
<title>char[] (6 samples, 0.09%)</title><rect x="792.3" y="147.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="795.3" y="158.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URIBuilder.addParameter (2 samples, 0.03%)</title><rect x="793.3" y="227.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="796.3" y="238.0"></text>
</g>
<g>
<title>org.apache.http.message.BasicNameValuePair (2 samples, 0.03%)</title><rect x="793.3" y="211.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="796.3" y="222.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URIBuilder.build (273 samples, 3.94%)</title><rect x="793.7" y="227.0" width="46.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="796.7" y="238.0">org/..</text>
</g>
<g>
<title>java.net.URI (12 samples, 0.17%)</title><rect x="793.7" y="211.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="796.7" y="222.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (30 samples, 0.43%)</title><rect x="795.7" y="211.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="798.7" y="222.0"></text>
</g>
<g>
<title>java.net.URI$Parser (5 samples, 0.07%)</title><rect x="795.7" y="195.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="798.7" y="206.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (25 samples, 0.36%)</title><rect x="796.6" y="195.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.6" y="206.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (25 samples, 0.36%)</title><rect x="796.6" y="179.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.6" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 0.36%)</title><rect x="796.6" y="163.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="799.6" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.36%)</title><rect x="796.6" y="147.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="799.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.14%)</title><rect x="796.6" y="131.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="799.6" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.22%)</title><rect x="798.3" y="131.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="801.3" y="142.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.22%)</title><rect x="798.3" y="115.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="801.3" y="126.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URIBuilder.buildString (231 samples, 3.33%)</title><rect x="800.8" y="211.0" width="39.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="803.8" y="222.0">org..</text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.07%)</title><rect x="800.8" y="195.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="803.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (7 samples, 0.10%)</title><rect x="801.7" y="195.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="804.7" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.10%)</title><rect x="801.7" y="179.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="804.7" y="190.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.10%)</title><rect x="801.7" y="163.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="804.7" y="174.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.14%)</title><rect x="802.9" y="195.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="805.9" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (10 samples, 0.14%)</title><rect x="802.9" y="179.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="805.9" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (10 samples, 0.14%)</title><rect x="802.9" y="163.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="805.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.14%)</title><rect x="802.9" y="147.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="805.9" y="158.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.14%)</title><rect x="802.9" y="131.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="805.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (19 samples, 0.27%)</title><rect x="804.6" y="195.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.27%)</title><rect x="804.6" y="179.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="807.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.10%)</title><rect x="804.6" y="163.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="807.6" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.17%)</title><rect x="805.7" y="163.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.7" y="174.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.17%)</title><rect x="805.7" y="147.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="808.7" y="158.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URIBuilder.encodeUrlForm (190 samples, 2.74%)</title><rect x="807.8" y="195.0" width="32.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.8" y="206.0">or..</text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.format (190 samples, 2.74%)</title><rect x="807.8" y="179.0" width="32.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.8" y="190.0">or..</text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.format (190 samples, 2.74%)</title><rect x="807.8" y="163.0" width="32.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="810.8" y="174.0">or..</text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.07%)</title><rect x="807.8" y="147.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="810.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (5 samples, 0.07%)</title><rect x="808.6" y="147.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.6" y="158.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (5 samples, 0.07%)</title><rect x="808.6" y="131.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.6" y="142.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.07%)</title><rect x="808.6" y="115.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="811.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.14%)</title><rect x="809.5" y="147.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="812.5" y="158.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (10 samples, 0.14%)</title><rect x="809.5" y="131.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.5" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (10 samples, 0.14%)</title><rect x="809.5" y="115.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="812.5" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.14%)</title><rect x="809.5" y="99.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="812.5" y="110.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.14%)</title><rect x="809.5" y="83.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="812.5" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.09%)</title><rect x="811.2" y="147.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="814.2" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.09%)</title><rect x="811.2" y="131.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="814.2" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.09%)</title><rect x="811.2" y="115.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="814.2" y="126.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.09%)</title><rect x="811.2" y="99.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="814.2" y="110.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.encodeFormFields (164 samples, 2.37%)</title><rect x="812.2" y="147.0" width="27.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.2" y="158.0">o..</text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.urlEncode (164 samples, 2.37%)</title><rect x="812.2" y="131.0" width="27.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.2" y="142.0">o..</text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (21 samples, 0.30%)</title><rect x="812.2" y="115.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="815.2" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (21 samples, 0.30%)</title><rect x="812.2" y="99.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.2" y="110.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.30%)</title><rect x="812.2" y="83.0" width="3.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="815.2" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (40 samples, 0.58%)</title><rect x="815.8" y="115.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="818.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.58%)</title><rect x="815.8" y="99.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="818.8" y="110.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.33%)</title><rect x="815.8" y="83.0" width="3.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="818.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.25%)</title><rect x="819.7" y="83.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="822.7" y="94.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.25%)</title><rect x="819.7" y="67.0" width="2.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="822.7" y="78.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.encode (103 samples, 1.49%)</title><rect x="822.6" y="115.0" width="17.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.6" y="126.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.wrap (49 samples, 0.71%)</title><rect x="822.6" y="99.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="825.6" y="110.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.wrap (49 samples, 0.71%)</title><rect x="822.6" y="83.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.6" y="94.0"></text>
</g>
<g>
<title>java.nio.StringCharBuffer (49 samples, 0.71%)</title><rect x="822.6" y="67.0" width="8.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="825.6" y="78.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.encode (54 samples, 0.78%)</title><rect x="830.9" y="99.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="833.9" y="110.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.encode (54 samples, 0.78%)</title><rect x="830.9" y="83.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="833.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (54 samples, 0.78%)</title><rect x="830.9" y="67.0" width="9.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="833.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (35 samples, 0.50%)</title><rect x="830.9" y="51.0" width="6.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="833.9" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (19 samples, 0.27%)</title><rect x="836.9" y="51.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.9" y="62.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.27%)</title><rect x="836.9" y="35.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="839.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/Topology.getAll (168 samples, 2.42%)</title><rect x="840.1" y="227.0" width="28.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="843.1" y="238.0">ru..</text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (168 samples, 2.42%)</title><rect x="840.1" y="211.0" width="28.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="843.1" y="222.0">ja..</text>
</g>
<g>
<title>java.util.HashMap (36 samples, 0.52%)</title><rect x="840.1" y="195.0" width="6.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="843.1" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (132 samples, 1.90%)</title><rect x="846.3" y="195.0" width="22.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="849.3" y="206.0">j..</text>
</g>
<g>
<title>java/util/HashSet.add (132 samples, 1.90%)</title><rect x="846.3" y="179.0" width="22.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="849.3" y="190.0">j..</text>
</g>
<g>
<title>java/util/HashMap.put (132 samples, 1.90%)</title><rect x="846.3" y="163.0" width="22.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.3" y="174.0">j..</text>
</g>
<g>
<title>java/util/HashMap.putVal (132 samples, 1.90%)</title><rect x="846.3" y="147.0" width="22.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.3" y="158.0">j..</text>
</g>
<g>
<title>java/util/HashMap.newNode (74 samples, 1.07%)</title><rect x="846.3" y="131.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="849.3" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (74 samples, 1.07%)</title><rect x="846.3" y="115.0" width="12.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="849.3" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (58 samples, 0.84%)</title><rect x="858.9" y="131.0" width="9.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.9" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (58 samples, 0.84%)</title><rect x="858.9" y="115.0" width="9.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="861.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (158 samples, 2.28%)</title><rect x="868.7" y="275.0" width="26.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="871.7" y="286.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (158 samples, 2.28%)</title><rect x="868.7" y="259.0" width="26.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="871.7" y="270.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (158 samples, 2.28%)</title><rect x="868.7" y="243.0" width="26.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="871.7" y="254.0">j..</text>
</g>
<g>
<title>java.lang.String (41 samples, 0.59%)</title><rect x="868.7" y="227.0" width="7.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="871.7" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (117 samples, 1.69%)</title><rect x="875.7" y="227.0" width="19.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="878.7" y="238.0"></text>
</g>
<g>
<title>byte[] (117 samples, 1.69%)</title><rect x="875.7" y="211.0" width="19.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="878.7" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (815 samples, 11.76%)</title><rect x="895.6" y="307.0" width="138.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.6" y="318.0">one/nio/http/Http..</text>
</g>
<g>
<title>one.nio.http.Request (127 samples, 1.83%)</title><rect x="895.6" y="291.0" width="21.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="898.6" y="302.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (220 samples, 3.17%)</title><rect x="917.3" y="291.0" width="37.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.3" y="302.0">one..</text>
</g>
<g>
<title>java.lang.String[] (220 samples, 3.17%)</title><rect x="917.3" y="275.0" width="37.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="920.3" y="286.0">jav..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (468 samples, 6.75%)</title><rect x="954.7" y="291.0" width="79.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="957.7" y="302.0">one/nio/u..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (468 samples, 6.75%)</title><rect x="954.7" y="275.0" width="79.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="957.7" y="286.0">one/nio/u..</text>
</g>
<g>
<title>char[] (299 samples, 4.31%)</title><rect x="954.7" y="259.0" width="50.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="957.7" y="270.0">char[]</text>
</g>
<g>
<title>char[] (5 samples, 0.07%)</title><rect x="1005.6" y="259.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1008.6" y="270.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.48%)</title><rect x="1006.5" y="259.0" width="5.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1009.5" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (131 samples, 1.89%)</title><rect x="1012.1" y="259.0" width="22.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1015.1" y="270.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (131 samples, 1.89%)</title><rect x="1012.1" y="243.0" width="22.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1015.1" y="254.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (131 samples, 1.89%)</title><rect x="1012.1" y="227.0" width="22.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1015.1" y="238.0">j..</text>
</g>
<g>
<title>byte[] (131 samples, 1.89%)</title><rect x="1012.1" y="211.0" width="22.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1015.1" y="222.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (58 samples, 0.84%)</title><rect x="1034.4" y="307.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1037.4" y="318.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.84%)</title><rect x="1034.4" y="291.0" width="9.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1037.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (144 samples, 2.08%)</title><rect x="1044.3" y="307.0" width="24.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1047.3" y="318.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (144 samples, 2.08%)</title><rect x="1044.3" y="291.0" width="24.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1047.3" y="302.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (144 samples, 2.08%)</title><rect x="1044.3" y="275.0" width="24.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1047.3" y="286.0">j..</text>
</g>
<g>
<title>java.lang.String (70 samples, 1.01%)</title><rect x="1044.3" y="259.0" width="11.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1047.3" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (74 samples, 1.07%)</title><rect x="1056.2" y="259.0" width="12.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1059.2" y="270.0"></text>
</g>
<g>
<title>byte[] (74 samples, 1.07%)</title><rect x="1056.2" y="243.0" width="12.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1059.2" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (698 samples, 10.07%)</title><rect x="1068.8" y="307.0" width="118.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1071.8" y="318.0">one/nio/util/U..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (698 samples, 10.07%)</title><rect x="1068.8" y="291.0" width="118.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1071.8" y="302.0">one/nio/util/U..</text>
</g>
<g>
<title>char[] (415 samples, 5.99%)</title><rect x="1068.8" y="275.0" width="70.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1071.8" y="286.0">char[]</text>
</g>
<g>
<title>java.lang.String (108 samples, 1.56%)</title><rect x="1139.4" y="275.0" width="18.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1142.4" y="286.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (175 samples, 2.52%)</title><rect x="1157.8" y="275.0" width="29.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.8" y="286.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (175 samples, 2.52%)</title><rect x="1157.8" y="259.0" width="29.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.8" y="270.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (175 samples, 2.52%)</title><rect x="1157.8" y="243.0" width="29.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1160.8" y="254.0">ja..</text>
</g>
<g>
<title>byte[] (175 samples, 2.52%)</title><rect x="1157.8" y="227.0" width="29.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1160.8" y="238.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.read (14 samples, 0.20%)</title><rect x="1187.6" y="323.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1190.6" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (14 samples, 0.20%)</title><rect x="1187.6" y="307.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1190.6" y="318.0"></text>
</g>
<g>
<title>one.nio.net.SocketClosedException (2 samples, 0.03%)</title><rect x="1187.8" y="291.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1190.8" y="302.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (11 samples, 0.16%)</title><rect x="1188.1" y="291.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1191.1" y="302.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (11 samples, 0.16%)</title><rect x="1188.1" y="275.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.1" y="286.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (11 samples, 0.16%)</title><rect x="1188.1" y="259.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.1" y="270.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (11 samples, 0.16%)</title><rect x="1188.1" y="243.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1191.1" y="254.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (11 samples, 0.16%)</title><rect x="1188.1" y="227.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1191.1" y="238.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (11 samples, 0.16%)</title><rect x="1188.1" y="211.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.1" y="222.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (11 samples, 0.16%)</title><rect x="1188.1" y="195.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.1" y="206.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.04%)</title><rect x="1188.1" y="179.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1191.1" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="1188.6" y="179.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1191.6" y="190.0"></text>
</g>
<g>
<title>long[] (5 samples, 0.07%)</title><rect x="1189.1" y="179.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1192.1" y="190.0"></text>
</g>
</g>
</svg>
