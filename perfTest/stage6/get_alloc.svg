<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="421"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="421"> </text>
<g id="frames">
<g>
<title>all (6,412 samples, 100.00%)</title><rect x="10.0" y="387.0" width="1180.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="398.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (517 samples, 8.06%)</title><rect x="10.0" y="371.0" width="95.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="382.0">java/lang/T..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (517 samples, 8.06%)</title><rect x="10.0" y="355.0" width="95.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="366.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (517 samples, 8.06%)</title><rect x="10.0" y="339.0" width="95.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (38 samples, 0.59%)</title><rect x="10.0" y="323.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (38 samples, 0.59%)</title><rect x="10.0" y="307.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (38 samples, 0.59%)</title><rect x="10.0" y="291.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (38 samples, 0.59%)</title><rect x="10.0" y="275.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (38 samples, 0.59%)</title><rect x="10.0" y="259.0" width="7.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils$$Lambda$65/242317984.run (479 samples, 7.47%)</title><rect x="17.0" y="323.0" width="88.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.0" y="334.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils.lambda$executeAsync$0 (479 samples, 7.47%)</title><rect x="17.0" y="307.0" width="88.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.0" y="318.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (157 samples, 2.45%)</title><rect x="17.0" y="291.0" width="28.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.0" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (157 samples, 2.45%)</title><rect x="17.0" y="275.0" width="28.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.0" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (123 samples, 1.92%)</title><rect x="17.0" y="259.0" width="22.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.0" y="270.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (123 samples, 1.92%)</title><rect x="17.0" y="243.0" width="22.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.0" y="254.0">o..</text>
</g>
<g>
<title>byte[] (123 samples, 1.92%)</title><rect x="17.0" y="227.0" width="22.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="20.0" y="238.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (34 samples, 0.53%)</title><rect x="39.6" y="259.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.6" y="270.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (34 samples, 0.53%)</title><rect x="39.6" y="243.0" width="6.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="42.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/657475479.act (322 samples, 5.02%)</title><rect x="45.9" y="291.0" width="59.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.9" y="302.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.lambda$entity$1 (322 samples, 5.02%)</title><rect x="45.9" y="275.0" width="59.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.9" y="286.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.getMethodWrapper (322 samples, 5.02%)</title><rect x="45.9" y="259.0" width="59.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.9" y="270.0">ru/mai..</text>
</g>
<g>
<title>one.nio.http.Response (27 samples, 0.42%)</title><rect x="45.9" y="243.0" width="5.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="48.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (123 samples, 1.92%)</title><rect x="50.9" y="243.0" width="22.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.9" y="254.0">o..</text>
</g>
<g>
<title>byte[] (86 samples, 1.34%)</title><rect x="50.9" y="227.0" width="15.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="53.9" y="238.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.16%)</title><rect x="66.7" y="227.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="69.7" y="238.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.42%)</title><rect x="68.5" y="227.0" width="5.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="71.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (145 samples, 2.26%)</title><rect x="73.5" y="243.0" width="26.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.5" y="254.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (25 samples, 0.39%)</title><rect x="73.5" y="227.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.5" y="238.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (25 samples, 0.39%)</title><rect x="73.5" y="211.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.5" y="222.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.39%)</title><rect x="73.5" y="195.0" width="4.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="76.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksUtils.fromArrayShifted (64 samples, 1.00%)</title><rect x="78.1" y="227.0" width="11.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.1" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 0.69%)</title><rect x="78.1" y="211.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.1" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 0.69%)</title><rect x="78.1" y="195.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.1" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (44 samples, 0.69%)</title><rect x="78.1" y="179.0" width="8.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="81.1" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 0.31%)</title><rect x="86.2" y="211.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.2" y="222.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.31%)</title><rect x="86.2" y="195.0" width="3.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="89.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksUtils.toArrayShifted (56 samples, 0.87%)</title><rect x="89.9" y="227.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.9" y="238.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.87%)</title><rect x="89.9" y="211.0" width="10.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="92.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksUtils.toArray (27 samples, 0.42%)</title><rect x="100.2" y="243.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="103.2" y="254.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.42%)</title><rect x="100.2" y="227.0" width="4.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="103.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (2,246 samples, 35.03%)</title><rect x="105.1" y="371.0" width="413.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="108.1" y="382.0">java/util/concurrent/ForkJoinWorkerThread.run</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (2,246 samples, 35.03%)</title><rect x="105.1" y="355.0" width="413.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.1" y="366.0">java/util/concurrent/ForkJoinPool.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (2,245 samples, 35.01%)</title><rect x="105.3" y="339.0" width="413.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="108.3" y="350.0">java/util/concurrent/ForkJoinPool.scan</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (2,245 samples, 35.01%)</title><rect x="105.3" y="323.0" width="413.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="108.3" y="334.0">java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (2,245 samples, 35.01%)</title><rect x="105.3" y="307.0" width="413.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.3" y="318.0">java/util/concurrent/ForkJoinTask.doExec</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (2,245 samples, 35.01%)</title><rect x="105.3" y="291.0" width="413.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.3" y="302.0">java/util/concurrent/CompletableFuture$AsyncSupply.exec</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2,245 samples, 35.01%)</title><rect x="105.3" y="275.0" width="413.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.3" y="286.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils$$Lambda$61/1866776169.get (30 samples, 0.47%)</title><rect x="105.3" y="259.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="108.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils.lambda$processDirect$2 (30 samples, 0.47%)</title><rect x="105.3" y="243.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="108.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils.handleLocal (30 samples, 0.47%)</title><rect x="105.3" y="227.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="108.3" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.05%)</title><rect x="105.3" y="211.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.3" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.05%)</title><rect x="105.3" y="195.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.3" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.05%)</title><rect x="105.3" y="179.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="108.3" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.05%)</title><rect x="105.3" y="163.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.3" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.05%)</title><rect x="105.3" y="147.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="108.3" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="105.3" y="131.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="108.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksDAO.get (18 samples, 0.28%)</title><rect x="105.9" y="211.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.9" y="222.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (5 samples, 0.08%)</title><rect x="105.9" y="195.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.9" y="206.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (5 samples, 0.08%)</title><rect x="105.9" y="179.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="108.9" y="190.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="105.9" y="163.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="108.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksUtils.fromArrayShifted (7 samples, 0.11%)</title><rect x="106.8" y="195.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="109.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.08%)</title><rect x="106.8" y="179.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="109.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.08%)</title><rect x="106.8" y="163.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="109.8" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5 samples, 0.08%)</title><rect x="106.8" y="147.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="109.8" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="107.7" y="179.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.7" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="107.7" y="163.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="110.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksUtils.toArrayShifted (6 samples, 0.09%)</title><rect x="108.1" y="195.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.1" y="206.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.09%)</title><rect x="108.1" y="179.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="111.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/RocksUtils.toArray (2 samples, 0.03%)</title><rect x="109.2" y="211.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.2" y="222.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="109.2" y="195.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="112.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TimestampRecord.fromByteArray (7 samples, 0.11%)</title><rect x="109.6" y="211.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.6" y="222.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="109.6" y="195.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="112.6" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.TimestampRecord (3 samples, 0.05%)</title><rect x="110.1" y="195.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="113.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils$$Lambda$63/2131704469.get (2,215 samples, 34.54%)</title><rect x="110.8" y="259.0" width="407.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.8" y="270.0">ru/mail/polis/service/impl/ServerUtils$$Lambda$63/213170..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils.lambda$processDirect$3 (2,215 samples, 34.54%)</title><rect x="110.8" y="243.0" width="407.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.8" y="254.0">ru/mail/polis/service/impl/ServerUtils.lambda$processDir..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils.handleRemote (2,215 samples, 34.54%)</title><rect x="110.8" y="227.0" width="407.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.8" y="238.0">ru/mail/polis/service/impl/ServerUtils.handleRemote</text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.06%)</title><rect x="110.8" y="211.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="113.8" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.08%)</title><rect x="111.6" y="211.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="114.6" y="222.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.03%)</title><rect x="112.5" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="115.5" y="222.0"></text>
</g>
<g>
<title>java.lang.Integer (2 samples, 0.03%)</title><rect x="112.5" y="195.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="115.5" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.25%)</title><rect x="112.9" y="211.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.9" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.25%)</title><rect x="112.9" y="195.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.9" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.25%)</title><rect x="112.9" y="179.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="115.9" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.25%)</title><rect x="112.9" y="163.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.25%)</title><rect x="112.9" y="147.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.9" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.25%)</title><rect x="112.9" y="131.0" width="2.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="115.9" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (11 samples, 0.17%)</title><rect x="115.8" y="211.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.8" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.17%)</title><rect x="115.8" y="195.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.8" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.17%)</title><rect x="115.8" y="179.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="118.8" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,167 samples, 33.80%)</title><rect x="117.8" y="211.0" width="398.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.8" y="222.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,167 samples, 33.80%)</title><rect x="117.8" y="195.0" width="398.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.8" y="206.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (10 samples, 0.16%)</title><rect x="117.8" y="179.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="120.8" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,044 samples, 31.88%)</title><rect x="119.7" y="179.0" width="376.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.7" y="190.0">one/nio/http/HttpClient$ResponseReader.&lt;init&gt;</text>
</g>
<g>
<title>byte[] (797 samples, 12.43%)</title><rect x="119.7" y="163.0" width="146.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="122.7" y="174.0">byte[]</text>
</g>
<g>
<title>byte[] (1,247 samples, 19.45%)</title><rect x="266.4" y="163.0" width="229.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="269.4" y="174.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (83 samples, 1.29%)</title><rect x="495.8" y="179.0" width="15.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="498.8" y="190.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="495.8" y="163.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="498.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.08%)</title><rect x="496.8" y="163.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="499.8" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.08%)</title><rect x="496.8" y="147.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="499.8" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.06%)</title><rect x="496.9" y="131.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="499.9" y="142.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="496.9" y="115.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="499.9" y="126.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.05%)</title><rect x="497.7" y="163.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="500.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (61 samples, 0.95%)</title><rect x="498.2" y="163.0" width="11.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.2" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (61 samples, 0.95%)</title><rect x="498.2" y="147.0" width="11.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="501.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (61 samples, 0.95%)</title><rect x="498.2" y="131.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="501.2" y="142.0"></text>
</g>
<g>
<title>char[] (49 samples, 0.76%)</title><rect x="498.2" y="115.0" width="9.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="501.2" y="126.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.12%)</title><rect x="507.2" y="115.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="510.2" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.06%)</title><rect x="508.7" y="115.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="511.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.06%)</title><rect x="508.7" y="99.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="511.7" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.06%)</title><rect x="508.7" y="83.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.7" y="94.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="508.7" y="67.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="511.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.08%)</title><rect x="509.5" y="163.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.5" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.08%)</title><rect x="509.5" y="147.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="512.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.06%)</title><rect x="510.4" y="163.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="513.4" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.06%)</title><rect x="510.4" y="147.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="510.4" y="131.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="513.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="510.4" y="115.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="513.4" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="510.7" y="115.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="513.7" y="126.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="510.7" y="99.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="513.7" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (26 samples, 0.41%)</title><rect x="511.1" y="179.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.1" y="190.0"></text>
</g>
<g>
<title>one.nio.util.ByteArrayBuilder (8 samples, 0.12%)</title><rect x="511.1" y="163.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="514.1" y="174.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (18 samples, 0.28%)</title><rect x="512.6" y="163.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="515.6" y="174.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.28%)</title><rect x="512.6" y="147.0" width="3.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="515.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.06%)</title><rect x="515.9" y="179.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.9" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.06%)</title><rect x="515.9" y="163.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.9" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="515.9" y="147.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.9" y="158.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="515.9" y="131.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="518.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/impl/TimestampRecord.fromByteArray (10 samples, 0.16%)</title><rect x="516.6" y="211.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.6" y="222.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="516.6" y="195.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="519.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.06%)</title><rect x="517.2" y="195.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.2" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.06%)</title><rect x="517.2" y="179.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="520.2" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.06%)</title><rect x="517.2" y="163.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="520.2" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.impl.TimestampRecord (2 samples, 0.03%)</title><rect x="517.9" y="195.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="520.9" y="206.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (854 samples, 13.32%)</title><rect x="518.5" y="371.0" width="157.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.5" y="382.0">one/nio/server/Accep..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (3 samples, 0.05%)</title><rect x="518.5" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.5" y="366.0"></text>
</g>
<g>
<title>one.nio.net.NativeSocket (3 samples, 0.05%)</title><rect x="518.5" y="339.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="521.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.createSession (851 samples, 13.27%)</title><rect x="519.0" y="355.0" width="156.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.0" y="366.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.createSession (851 samples, 13.27%)</title><rect x="519.0" y="339.0" width="156.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.0" y="350.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru.mail.polis.service.impl.StorageSession (9 samples, 0.14%)</title><rect x="519.0" y="323.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="522.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/StorageSession.&lt;init&gt; (842 samples, 13.13%)</title><rect x="520.7" y="323.0" width="154.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.7" y="334.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (842 samples, 13.13%)</title><rect x="520.7" y="307.0" width="154.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="523.7" y="318.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>byte[] (108 samples, 1.68%)</title><rect x="520.7" y="291.0" width="19.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="523.7" y="302.0"></text>
</g>
<g>
<title>byte[] (734 samples, 11.45%)</title><rect x="540.6" y="291.0" width="135.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="543.6" y="302.0">byte[]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,795 samples, 43.59%)</title><rect x="675.6" y="371.0" width="514.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="678.6" y="382.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (69 samples, 1.08%)</title><rect x="675.6" y="355.0" width="12.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.6" y="366.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (69 samples, 1.08%)</title><rect x="675.6" y="339.0" width="12.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="678.6" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.handleException (3 samples, 0.05%)</title><rect x="688.3" y="355.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.3" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.getRemoteHost (2 samples, 0.03%)</title><rect x="688.3" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.3" y="350.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.getRemoteAddress (2 samples, 0.03%)</title><rect x="688.3" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.3" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.makeAddress (2 samples, 0.03%)</title><rect x="688.3" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="691.3" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,723 samples, 42.47%)</title><rect x="688.9" y="355.0" width="501.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.9" y="366.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,723 samples, 42.47%)</title><rect x="688.9" y="339.0" width="501.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="691.9" y="350.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,707 samples, 42.22%)</title><rect x="688.9" y="323.0" width="498.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.9" y="334.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,653 samples, 25.78%)</title><rect x="688.9" y="307.0" width="304.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.9" y="318.0">one/nio/http/HttpSession.handleParsedRequ..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,653 samples, 25.78%)</title><rect x="688.9" y="291.0" width="304.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.9" y="302.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1,496 samples, 23.33%)</title><rect x="688.9" y="275.0" width="275.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.9" y="286.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (220 samples, 3.43%)</title><rect x="688.9" y="259.0" width="40.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="691.9" y="270.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (220 samples, 3.43%)</title><rect x="688.9" y="243.0" width="40.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.9" y="254.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (220 samples, 3.43%)</title><rect x="688.9" y="227.0" width="40.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.9" y="238.0">jav..</text>
</g>
<g>
<title>java.lang.String (85 samples, 1.33%)</title><rect x="688.9" y="211.0" width="15.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="691.9" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (135 samples, 2.11%)</title><rect x="704.5" y="211.0" width="24.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.5" y="222.0">j..</text>
</g>
<g>
<title>byte[] (135 samples, 2.11%)</title><rect x="704.5" y="195.0" width="24.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="707.5" y="206.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer.entity (1,276 samples, 19.90%)</title><rect x="729.4" y="259.0" width="234.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.4" y="270.0">ru/mail/polis/service/impl/Asyn..</text>
</g>
<g>
<title>java/lang/String.getBytes (42 samples, 0.66%)</title><rect x="729.4" y="243.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (42 samples, 0.66%)</title><rect x="729.4" y="227.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="732.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (42 samples, 0.66%)</title><rect x="729.4" y="211.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.4" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (42 samples, 0.66%)</title><rect x="729.4" y="195.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="732.4" y="206.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.66%)</title><rect x="729.4" y="179.0" width="7.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="732.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.42%)</title><rect x="737.1" y="243.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="740.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.42%)</title><rect x="737.1" y="227.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/AsyncHttpServer$$Lambda$64/657475479.get$Lambda (27 samples, 0.42%)</title><rect x="737.1" y="211.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="740.1" y="222.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.AsyncHttpServer$$Lambda$64 (27 samples, 0.42%)</title><rect x="737.1" y="195.0" width="5.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="740.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (142 samples, 2.21%)</title><rect x="742.1" y="243.0" width="26.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.1" y="254.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (142 samples, 2.21%)</title><rect x="742.1" y="227.0" width="26.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.1" y="238.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (142 samples, 2.21%)</title><rect x="742.1" y="211.0" width="26.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="745.1" y="222.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils.executeAsync (116 samples, 1.81%)</title><rect x="768.2" y="243.0" width="21.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="771.2" y="254.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (45 samples, 0.70%)</title><rect x="768.2" y="227.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="771.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 0.70%)</title><rect x="768.2" y="211.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="771.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils$$Lambda$65/242317984.get$Lambda (45 samples, 0.70%)</title><rect x="768.2" y="195.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.2" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.ServerUtils$$Lambda$65 (45 samples, 0.70%)</title><rect x="768.2" y="179.0" width="8.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="771.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (71 samples, 1.11%)</title><rect x="776.5" y="227.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="779.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.reject (7 samples, 0.11%)</title><rect x="776.5" y="211.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="779.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$AbortPolicy.rejectedExecution (7 samples, 0.11%)</title><rect x="776.5" y="195.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/RejectedExecutionException.&lt;init&gt; (4 samples, 0.06%)</title><rect x="776.7" y="179.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.7" y="190.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (4 samples, 0.06%)</title><rect x="776.7" y="163.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="779.7" y="174.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (4 samples, 0.06%)</title><rect x="776.7" y="147.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.7" y="158.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (4 samples, 0.06%)</title><rect x="776.7" y="131.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="779.7" y="142.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.06%)</title><rect x="776.7" y="115.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.7" y="126.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.06%)</title><rect x="776.7" y="99.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="779.7" y="110.0"></text>
</g>
<g>
<title>long[] (2 samples, 0.03%)</title><rect x="777.0" y="83.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="780.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.toString (2 samples, 0.03%)</title><rect x="777.4" y="179.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.4" y="190.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (64 samples, 1.00%)</title><rect x="777.8" y="211.0" width="11.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="780.8" y="222.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (64 samples, 1.00%)</title><rect x="777.8" y="195.0" width="11.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (64 samples, 1.00%)</title><rect x="777.8" y="179.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="780.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (64 samples, 1.00%)</title><rect x="777.8" y="163.0" width="11.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (64 samples, 1.00%)</title><rect x="777.8" y="147.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="780.8" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (64 samples, 1.00%)</title><rect x="777.8" y="131.0" width="11.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="780.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils.processDirect (949 samples, 14.80%)</title><rect x="789.6" y="243.0" width="174.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.6" y="254.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="789.6" y="227.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="792.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture[] (3 samples, 0.05%)</title><rect x="789.9" y="227.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="792.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1482894374.linkToTargetMethod (16 samples, 0.25%)</title><rect x="790.5" y="227.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="793.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1133295081.invokeStatic (16 samples, 0.25%)</title><rect x="790.5" y="211.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils$$Lambda$61/1866776169.get$Lambda (5 samples, 0.08%)</title><rect x="790.5" y="195.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="793.5" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.ServerUtils$$Lambda$61 (5 samples, 0.08%)</title><rect x="790.5" y="179.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="793.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/ServerUtils$$Lambda$63/2131704469.get$Lambda (11 samples, 0.17%)</title><rect x="791.4" y="195.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.4" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.impl.ServerUtils$$Lambda$63 (11 samples, 0.17%)</title><rect x="791.4" y="179.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="794.4" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (18 samples, 0.28%)</title><rect x="793.4" y="227.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="796.4" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (18 samples, 0.28%)</title><rect x="793.4" y="211.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.4" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (18 samples, 0.28%)</title><rect x="793.4" y="195.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="796.4" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (18 samples, 0.28%)</title><rect x="793.4" y="179.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="796.4" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.28%)</title><rect x="793.4" y="163.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="796.4" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.28%)</title><rect x="793.4" y="147.0" width="3.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="796.4" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (5 samples, 0.08%)</title><rect x="796.7" y="227.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="799.7" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture[] (5 samples, 0.08%)</title><rect x="796.7" y="211.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="799.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (29 samples, 0.45%)</title><rect x="797.6" y="227.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (29 samples, 0.45%)</title><rect x="797.6" y="211.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="800.6" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (9 samples, 0.14%)</title><rect x="797.6" y="195.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="800.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (7 samples, 0.11%)</title><rect x="799.3" y="195.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="802.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (8 samples, 0.12%)</title><rect x="800.6" y="195.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="803.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (4 samples, 0.06%)</title><rect x="800.6" y="179.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="803.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.bipush (3 samples, 0.05%)</title><rect x="801.5" y="179.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$CoCompletion (3 samples, 0.05%)</title><rect x="801.5" y="163.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="804.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.bipush (5 samples, 0.08%)</title><rect x="802.1" y="195.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$CoCompletion (5 samples, 0.08%)</title><rect x="802.1" y="179.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="805.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (10 samples, 0.16%)</title><rect x="803.0" y="227.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (10 samples, 0.16%)</title><rect x="803.0" y="211.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="806.0" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (10 samples, 0.16%)</title><rect x="803.0" y="195.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="806.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (29 samples, 0.45%)</title><rect x="804.8" y="227.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="807.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (29 samples, 0.45%)</title><rect x="804.8" y="211.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.8" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (17 samples, 0.27%)</title><rect x="804.8" y="195.0" width="3.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="807.8" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (12 samples, 0.19%)</title><rect x="808.0" y="195.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="811.0" y="206.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.05%)</title><rect x="810.2" y="227.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="813.2" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendError (2 samples, 0.03%)</title><rect x="810.7" y="227.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="813.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (24 samples, 0.37%)</title><rect x="811.1" y="227.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="814.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (24 samples, 0.37%)</title><rect x="811.1" y="211.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (13 samples, 0.20%)</title><rect x="811.1" y="195.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.1" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (13 samples, 0.20%)</title><rect x="811.1" y="179.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="814.1" y="190.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.20%)</title><rect x="811.1" y="163.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="814.1" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (11 samples, 0.17%)</title><rect x="813.5" y="195.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="816.5" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (11 samples, 0.17%)</title><rect x="813.5" y="179.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="816.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (17 samples, 0.27%)</title><rect x="815.5" y="227.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="818.5" y="238.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.14%)</title><rect x="815.5" y="211.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="818.5" y="222.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.06%)</title><rect x="817.2" y="211.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="820.2" y="222.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.06%)</title><rect x="817.9" y="211.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="820.9" y="222.0"></text>
</g>
<g>
<title>org.apache.http.client.utils.URIBuilder (11 samples, 0.17%)</title><rect x="818.6" y="227.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="821.6" y="238.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URIBuilder.&lt;init&gt; (339 samples, 5.29%)</title><rect x="820.7" y="227.0" width="62.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="823.7" y="238.0">org/ap..</text>
</g>
<g>
<title>java.net.URI (19 samples, 0.30%)</title><rect x="820.7" y="211.0" width="3.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="823.7" y="222.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (36 samples, 0.56%)</title><rect x="824.1" y="211.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="827.1" y="222.0"></text>
</g>
<g>
<title>java.net.URI$Parser (11 samples, 0.17%)</title><rect x="824.1" y="195.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="827.1" y="206.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (25 samples, 0.39%)</title><rect x="826.2" y="195.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="829.2" y="206.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (25 samples, 0.39%)</title><rect x="826.2" y="179.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="829.2" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 0.39%)</title><rect x="826.2" y="163.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="829.2" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.39%)</title><rect x="826.2" y="147.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="829.2" y="158.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.16%)</title><rect x="826.2" y="131.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="829.2" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.23%)</title><rect x="828.0" y="131.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.0" y="142.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.23%)</title><rect x="828.0" y="115.0" width="2.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="831.0" y="126.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URIBuilder.digestURI (284 samples, 4.43%)</title><rect x="830.8" y="211.0" width="52.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="833.8" y="222.0">org/a..</text>
</g>
<g>
<title>org/apache/http/client/utils/URIBuilder.parsePath (124 samples, 1.93%)</title><rect x="830.8" y="195.0" width="22.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.8" y="206.0">o..</text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.parsePathSegments (124 samples, 1.93%)</title><rect x="830.8" y="179.0" width="22.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="833.8" y="190.0">o..</text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.splitPathSegments (55 samples, 0.86%)</title><rect x="830.8" y="163.0" width="10.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="833.8" y="174.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.splitSegments (55 samples, 0.86%)</title><rect x="830.8" y="147.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="833.8" y="158.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (6 samples, 0.09%)</title><rect x="830.8" y="131.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="833.8" y="142.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.06%)</title><rect x="831.9" y="131.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="834.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (7 samples, 0.11%)</title><rect x="832.6" y="131.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="835.6" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.11%)</title><rect x="832.6" y="115.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.6" y="126.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.11%)</title><rect x="832.6" y="99.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="835.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (20 samples, 0.31%)</title><rect x="833.9" y="131.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="836.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.31%)</title><rect x="833.9" y="115.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="836.9" y="126.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.12%)</title><rect x="833.9" y="99.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="836.9" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.19%)</title><rect x="835.4" y="99.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.4" y="110.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.19%)</title><rect x="835.4" y="83.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="838.4" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (18 samples, 0.28%)</title><rect x="837.6" y="131.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.6" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (18 samples, 0.28%)</title><rect x="837.6" y="115.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.6" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (18 samples, 0.28%)</title><rect x="837.6" y="99.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.6" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (18 samples, 0.28%)</title><rect x="837.6" y="83.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.28%)</title><rect x="837.6" y="67.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.6" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.28%)</title><rect x="837.6" y="51.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="840.6" y="62.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.urlDecode (69 samples, 1.08%)</title><rect x="840.9" y="163.0" width="12.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.9" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (26 samples, 0.41%)</title><rect x="840.9" y="147.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="843.9" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.27%)</title><rect x="840.9" y="131.0" width="3.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="843.9" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.14%)</title><rect x="844.0" y="131.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="847.0" y="142.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.14%)</title><rect x="844.0" y="115.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="847.0" y="126.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.toString (17 samples, 0.27%)</title><rect x="845.7" y="147.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.7" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.toString (17 samples, 0.27%)</title><rect x="845.7" y="131.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.7" y="142.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.16%)</title><rect x="845.7" y="115.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="848.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.11%)</title><rect x="847.5" y="115.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.11%)</title><rect x="847.5" y="99.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.11%)</title><rect x="847.5" y="83.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="850.5" y="94.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.11%)</title><rect x="847.5" y="67.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="850.5" y="78.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (26 samples, 0.41%)</title><rect x="848.8" y="147.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.8" y="158.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (26 samples, 0.41%)</title><rect x="848.8" y="131.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="851.8" y="142.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (26 samples, 0.41%)</title><rect x="848.8" y="115.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="851.8" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (15 samples, 0.23%)</title><rect x="848.8" y="99.0" width="2.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="851.8" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.&lt;init&gt; (11 samples, 0.17%)</title><rect x="851.6" y="99.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="854.6" y="110.0"></text>
</g>
<g>
<title>char[] (11 samples, 0.17%)</title><rect x="851.6" y="83.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="854.6" y="94.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URIBuilder.parseQuery (160 samples, 2.50%)</title><rect x="853.6" y="195.0" width="29.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="856.6" y="206.0">or..</text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.parse (160 samples, 2.50%)</title><rect x="853.6" y="179.0" width="29.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.6" y="190.0">or..</text>
</g>
<g>
<title>org.apache.http.util.CharArrayBuffer (9 samples, 0.14%)</title><rect x="853.8" y="163.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="856.8" y="174.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.parse (143 samples, 2.23%)</title><rect x="855.4" y="163.0" width="26.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="858.4" y="174.0">o..</text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.17%)</title><rect x="855.8" y="147.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="858.8" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.17%)</title><rect x="855.8" y="131.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="858.8" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.17%)</title><rect x="855.8" y="115.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="858.8" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.17%)</title><rect x="855.8" y="99.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="858.8" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.17%)</title><rect x="855.8" y="83.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="858.8" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.17%)</title><rect x="855.8" y="67.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="858.8" y="78.0"></text>
</g>
<g>
<title>java/util/BitSet.&lt;init&gt; (5 samples, 0.08%)</title><rect x="857.8" y="147.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="860.8" y="158.0"></text>
</g>
<g>
<title>java/util/BitSet.initWords (5 samples, 0.08%)</title><rect x="857.8" y="131.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="860.8" y="142.0"></text>
</g>
<g>
<title>long[] (5 samples, 0.08%)</title><rect x="857.8" y="115.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="860.8" y="126.0"></text>
</g>
<g>
<title>org.apache.http.message.ParserCursor (7 samples, 0.11%)</title><rect x="858.9" y="147.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="861.9" y="158.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.decodeFormFields (84 samples, 1.31%)</title><rect x="860.2" y="147.0" width="15.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="863.2" y="158.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.urlDecode (84 samples, 1.31%)</title><rect x="860.2" y="131.0" width="15.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="863.2" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (25 samples, 0.39%)</title><rect x="860.2" y="115.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="863.2" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (15 samples, 0.23%)</title><rect x="860.2" y="99.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="863.2" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.16%)</title><rect x="863.0" y="99.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="866.0" y="110.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.16%)</title><rect x="863.0" y="83.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="866.0" y="94.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.toString (20 samples, 0.31%)</title><rect x="864.8" y="115.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="867.8" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.toString (20 samples, 0.31%)</title><rect x="864.8" y="99.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="867.8" y="110.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.09%)</title><rect x="864.8" y="83.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="867.8" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.22%)</title><rect x="865.9" y="83.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="868.9" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.22%)</title><rect x="865.9" y="67.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="868.9" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (14 samples, 0.22%)</title><rect x="865.9" y="51.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="868.9" y="62.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.22%)</title><rect x="865.9" y="35.0" width="2.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="868.9" y="46.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.decode (39 samples, 0.61%)</title><rect x="868.5" y="115.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="871.5" y="126.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetDecoder.decode (39 samples, 0.61%)</title><rect x="868.5" y="99.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="871.5" y="110.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.allocate (39 samples, 0.61%)</title><rect x="868.5" y="83.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="871.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (21 samples, 0.33%)</title><rect x="868.5" y="67.0" width="3.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="871.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapCharBuffer.&lt;init&gt; (18 samples, 0.28%)</title><rect x="872.4" y="67.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="875.4" y="78.0"></text>
</g>
<g>
<title>char[] (18 samples, 0.28%)</title><rect x="872.4" y="51.0" width="3.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="875.4" y="62.0"></text>
</g>
<g>
<title>org/apache/http/message/TokenParser.parseToken (33 samples, 0.51%)</title><rect x="875.7" y="147.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="878.7" y="158.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.08%)</title><rect x="875.7" y="131.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="878.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (13 samples, 0.20%)</title><rect x="876.6" y="131.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="879.6" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (13 samples, 0.20%)</title><rect x="876.6" y="115.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="879.6" y="126.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.20%)</title><rect x="876.6" y="99.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="879.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (15 samples, 0.23%)</title><rect x="879.0" y="131.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="882.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.23%)</title><rect x="879.0" y="115.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="882.0" y="126.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.06%)</title><rect x="879.0" y="99.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="882.0" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.17%)</title><rect x="879.7" y="99.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.7" y="110.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.17%)</title><rect x="879.7" y="83.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="882.7" y="94.0"></text>
</g>
<g>
<title>org/apache/http/util/CharArrayBuffer.&lt;init&gt; (7 samples, 0.11%)</title><rect x="881.7" y="163.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="884.7" y="174.0"></text>
</g>
<g>
<title>char[] (7 samples, 0.11%)</title><rect x="881.7" y="147.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="884.7" y="158.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URIBuilder.addParameter (5 samples, 0.08%)</title><rect x="883.0" y="227.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="886.0" y="238.0"></text>
</g>
<g>
<title>org.apache.http.message.BasicNameValuePair (5 samples, 0.08%)</title><rect x="883.0" y="211.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="886.0" y="222.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URIBuilder.build (262 samples, 4.09%)</title><rect x="884.0" y="227.0" width="48.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="887.0" y="238.0">org/..</text>
</g>
<g>
<title>java.net.URI (14 samples, 0.22%)</title><rect x="884.0" y="211.0" width="2.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="887.0" y="222.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (25 samples, 0.39%)</title><rect x="886.5" y="211.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.5" y="222.0"></text>
</g>
<g>
<title>java.net.URI$Parser (5 samples, 0.08%)</title><rect x="886.5" y="195.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="889.5" y="206.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (20 samples, 0.31%)</title><rect x="887.5" y="195.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.5" y="206.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (20 samples, 0.31%)</title><rect x="887.5" y="179.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.5" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.31%)</title><rect x="887.5" y="163.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.5" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.31%)</title><rect x="887.5" y="147.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="890.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.14%)</title><rect x="887.5" y="131.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="890.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.17%)</title><rect x="889.1" y="131.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="892.1" y="142.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.17%)</title><rect x="889.1" y="115.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="892.1" y="126.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URIBuilder.buildString (223 samples, 3.48%)</title><rect x="891.1" y="211.0" width="41.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="894.1" y="222.0">org..</text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.08%)</title><rect x="891.1" y="195.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="894.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (7 samples, 0.11%)</title><rect x="892.1" y="195.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="895.1" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.11%)</title><rect x="892.1" y="179.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="895.1" y="190.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.11%)</title><rect x="892.1" y="163.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="895.1" y="174.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.16%)</title><rect x="893.3" y="195.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="896.3" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (10 samples, 0.16%)</title><rect x="893.3" y="179.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.3" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (10 samples, 0.16%)</title><rect x="893.3" y="163.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="896.3" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.16%)</title><rect x="893.3" y="147.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="896.3" y="158.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.16%)</title><rect x="893.3" y="131.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="896.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (20 samples, 0.31%)</title><rect x="895.2" y="195.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.31%)</title><rect x="895.2" y="179.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.09%)</title><rect x="895.2" y="163.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="898.2" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.22%)</title><rect x="896.3" y="163.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="899.3" y="174.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.22%)</title><rect x="896.3" y="147.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="899.3" y="158.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URIBuilder.encodeUrlForm (181 samples, 2.82%)</title><rect x="898.9" y="195.0" width="33.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="901.9" y="206.0">or..</text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.format (181 samples, 2.82%)</title><rect x="898.9" y="179.0" width="33.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.9" y="190.0">or..</text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.format (181 samples, 2.82%)</title><rect x="898.9" y="163.0" width="33.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.9" y="174.0">or..</text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.08%)</title><rect x="898.9" y="147.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="901.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (5 samples, 0.08%)</title><rect x="899.8" y="147.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="902.8" y="158.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (5 samples, 0.08%)</title><rect x="899.8" y="131.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="902.8" y="142.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="899.8" y="115.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="902.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (13 samples, 0.20%)</title><rect x="900.7" y="147.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.7" y="158.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (13 samples, 0.20%)</title><rect x="900.7" y="131.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="903.7" y="142.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (13 samples, 0.20%)</title><rect x="900.7" y="115.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="903.7" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.20%)</title><rect x="900.7" y="99.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="903.7" y="110.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.20%)</title><rect x="900.7" y="83.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="903.7" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.09%)</title><rect x="903.1" y="147.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.09%)</title><rect x="903.1" y="131.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="906.1" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.09%)</title><rect x="903.1" y="115.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.1" y="126.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.09%)</title><rect x="903.1" y="99.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="906.1" y="110.0"></text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.encodeFormFields (152 samples, 2.37%)</title><rect x="904.2" y="147.0" width="28.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="907.2" y="158.0">o..</text>
</g>
<g>
<title>org/apache/http/client/utils/URLEncodedUtils.urlEncode (152 samples, 2.37%)</title><rect x="904.2" y="131.0" width="28.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="907.2" y="142.0">o..</text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (22 samples, 0.34%)</title><rect x="904.2" y="115.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.2" y="126.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (22 samples, 0.34%)</title><rect x="904.2" y="99.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.2" y="110.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.34%)</title><rect x="904.2" y="83.0" width="4.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="907.2" y="94.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (36 samples, 0.56%)</title><rect x="908.3" y="115.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="911.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (36 samples, 0.56%)</title><rect x="908.3" y="99.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="911.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.33%)</title><rect x="908.3" y="83.0" width="3.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="911.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.23%)</title><rect x="912.1" y="83.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="915.1" y="94.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.23%)</title><rect x="912.1" y="67.0" width="2.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="915.1" y="78.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.encode (94 samples, 1.47%)</title><rect x="914.9" y="115.0" width="17.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="917.9" y="126.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.wrap (36 samples, 0.56%)</title><rect x="914.9" y="99.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="917.9" y="110.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.wrap (36 samples, 0.56%)</title><rect x="914.9" y="83.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="917.9" y="94.0"></text>
</g>
<g>
<title>java.nio.StringCharBuffer (36 samples, 0.56%)</title><rect x="914.9" y="67.0" width="6.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="917.9" y="78.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.encode (58 samples, 0.90%)</title><rect x="921.5" y="99.0" width="10.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="924.5" y="110.0"></text>
</g>
<g>
<title>java/nio/charset/CharsetEncoder.encode (58 samples, 0.90%)</title><rect x="921.5" y="83.0" width="10.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="924.5" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (58 samples, 0.90%)</title><rect x="921.5" y="67.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="924.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (38 samples, 0.59%)</title><rect x="921.5" y="51.0" width="7.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="924.5" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (20 samples, 0.31%)</title><rect x="928.5" y="51.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="931.5" y="62.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.31%)</title><rect x="928.5" y="35.0" width="3.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="931.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/impl/Topology.getAll (174 samples, 2.71%)</title><rect x="932.2" y="227.0" width="32.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="935.2" y="238.0">ru..</text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (174 samples, 2.71%)</title><rect x="932.2" y="211.0" width="32.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="935.2" y="222.0">ja..</text>
</g>
<g>
<title>java.util.HashMap (45 samples, 0.70%)</title><rect x="932.2" y="195.0" width="8.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="935.2" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (129 samples, 2.01%)</title><rect x="940.5" y="195.0" width="23.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="943.5" y="206.0">j..</text>
</g>
<g>
<title>java/util/HashSet.add (129 samples, 2.01%)</title><rect x="940.5" y="179.0" width="23.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="943.5" y="190.0">j..</text>
</g>
<g>
<title>java/util/HashMap.put (129 samples, 2.01%)</title><rect x="940.5" y="163.0" width="23.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="943.5" y="174.0">j..</text>
</g>
<g>
<title>java/util/HashMap.putVal (129 samples, 2.01%)</title><rect x="940.5" y="147.0" width="23.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="943.5" y="158.0">j..</text>
</g>
<g>
<title>java/util/HashMap.newNode (73 samples, 1.14%)</title><rect x="940.5" y="131.0" width="13.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="943.5" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (73 samples, 1.14%)</title><rect x="940.5" y="115.0" width="13.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="943.5" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (56 samples, 0.87%)</title><rect x="953.9" y="131.0" width="10.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="956.9" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (56 samples, 0.87%)</title><rect x="953.9" y="115.0" width="10.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="956.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (157 samples, 2.45%)</title><rect x="964.2" y="275.0" width="28.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="967.2" y="286.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (157 samples, 2.45%)</title><rect x="964.2" y="259.0" width="28.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="967.2" y="270.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (157 samples, 2.45%)</title><rect x="964.2" y="243.0" width="28.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="967.2" y="254.0">ja..</text>
</g>
<g>
<title>java.lang.String (69 samples, 1.08%)</title><rect x="964.2" y="227.0" width="12.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="967.2" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (88 samples, 1.37%)</title><rect x="976.9" y="227.0" width="16.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="979.9" y="238.0"></text>
</g>
<g>
<title>byte[] (88 samples, 1.37%)</title><rect x="976.9" y="211.0" width="16.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="979.9" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (782 samples, 12.20%)</title><rect x="993.1" y="307.0" width="143.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="996.1" y="318.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one.nio.http.Request (103 samples, 1.61%)</title><rect x="993.1" y="291.0" width="18.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="996.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (178 samples, 2.78%)</title><rect x="1012.0" y="291.0" width="32.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1015.0" y="302.0">on..</text>
</g>
<g>
<title>java.lang.String[] (178 samples, 2.78%)</title><rect x="1012.0" y="275.0" width="32.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1015.0" y="286.0">ja..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (501 samples, 7.81%)</title><rect x="1044.8" y="291.0" width="92.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1047.8" y="302.0">one/nio/uti..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (501 samples, 7.81%)</title><rect x="1044.8" y="275.0" width="92.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1047.8" y="286.0">one/nio/uti..</text>
</g>
<g>
<title>char[] (351 samples, 5.47%)</title><rect x="1044.8" y="259.0" width="64.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1047.8" y="270.0">char[]</text>
</g>
<g>
<title>java.lang.String (45 samples, 0.70%)</title><rect x="1109.4" y="259.0" width="8.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1112.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (105 samples, 1.64%)</title><rect x="1117.7" y="259.0" width="19.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1120.7" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (105 samples, 1.64%)</title><rect x="1117.7" y="243.0" width="19.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1120.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (105 samples, 1.64%)</title><rect x="1117.7" y="227.0" width="19.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1120.7" y="238.0"></text>
</g>
<g>
<title>byte[] (105 samples, 1.64%)</title><rect x="1117.7" y="211.0" width="19.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1120.7" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (272 samples, 4.24%)</title><rect x="1137.0" y="307.0" width="50.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1140.0" y="318.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (272 samples, 4.24%)</title><rect x="1137.0" y="291.0" width="50.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1140.0" y="302.0">one/n..</text>
</g>
<g>
<title>char[] (140 samples, 2.18%)</title><rect x="1137.0" y="275.0" width="25.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1140.0" y="286.0">c..</text>
</g>
<g>
<title>java.lang.String (43 samples, 0.67%)</title><rect x="1162.8" y="275.0" width="7.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1165.8" y="286.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (89 samples, 1.39%)</title><rect x="1170.7" y="275.0" width="16.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1173.7" y="286.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (89 samples, 1.39%)</title><rect x="1170.7" y="259.0" width="16.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1173.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (89 samples, 1.39%)</title><rect x="1170.7" y="243.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1173.7" y="254.0"></text>
</g>
<g>
<title>byte[] (89 samples, 1.39%)</title><rect x="1170.7" y="227.0" width="16.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1173.7" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (16 samples, 0.25%)</title><rect x="1187.1" y="323.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1190.1" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 0.25%)</title><rect x="1187.1" y="307.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1190.1" y="318.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="1187.1" y="291.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1190.1" y="302.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (14 samples, 0.22%)</title><rect x="1187.4" y="291.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1190.4" y="302.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (14 samples, 0.22%)</title><rect x="1187.4" y="275.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1190.4" y="286.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (14 samples, 0.22%)</title><rect x="1187.4" y="259.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1190.4" y="270.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (14 samples, 0.22%)</title><rect x="1187.4" y="243.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.4" y="254.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (14 samples, 0.22%)</title><rect x="1187.4" y="227.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1190.4" y="238.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (14 samples, 0.22%)</title><rect x="1187.4" y="211.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1190.4" y="222.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (14 samples, 0.22%)</title><rect x="1187.4" y="195.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.4" y="206.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.05%)</title><rect x="1187.4" y="179.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1190.4" y="190.0"></text>
</g>
<g>
<title>long[] (9 samples, 0.14%)</title><rect x="1188.2" y="179.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1191.2" y="190.0"></text>
</g>
</g>
</svg>
